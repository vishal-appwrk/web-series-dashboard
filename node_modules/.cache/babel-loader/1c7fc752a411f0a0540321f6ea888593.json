{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from './Menu';\nimport Caption from './Caption';\nimport KpiData from '../utils/kpiData';\nimport Kpi from './Kpi';\nimport Subscribers from './Subscribers';\nimport Revenue from './Revenue';\nimport AwardRating from './AwardRating';\nimport DataSource from '../utils/config';\nimport FusionGrid from 'fusiongrid';\nimport { ReactFusionGrid } from \"react-fusiongrid\";\nimport saasData from './data'; // import '../node_modules/bulma/css/bulma.css';\n\nReactFusionGrid.fgRoot(FusionGrid); // var data = saasData.valueRanges[0].values;\n// Netflix: [\n//     { id: \"Subscribers\", value: \"539.8M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"12.8B\", icon: dollar,iconType:\"badge is-dollar\", },\n//     { id: \"Emmy Awards\", value: \"23\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"8.34\", icon: star,iconType:\"badge is-star\" }\n// ],\n// Amazon: [\n//     { id: \"Subscribers\", value: \"815M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"20.5B\", icon: dollar,iconType:\"badge is-dollar\" },\n//     { id: \"Emmy Awards\", value: \"5\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"7.58\", icon: star,iconType:\"badge is-star\" }\n// ],\n// Hulu: [\n//     { id: \"Subscribers\", value: \"25M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"2.85B\", icon: dollar,iconType:\"badge is-dollar\" },\n//     { id: \"Emmy Awards\", value: \"1\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"7.07\", icon: star,iconType:\"badge is-star\" }\n// ],\n// HBO: [\n//     { id: \"Subscribers\", value: \"150M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"6B\", icon: dollar,iconType:\"badge is-dollar\" },\n//     { id: \"Emmy Awards\", value: \"6\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"8.04\", icon: star,iconType:\"badge is-star\" }\n// ]\n\nvar data = [[\"Netflix\", \"45M\", \"6B\", \"6\", \"8.04\"], [\"Amazon\", \"185M\", \"5B\", \"5\", \"3.04\"], [\"Hulu\", \"90M\", \"3B\", \"4\", \"6.04\"], [\"HBO\", \"80M\", \"8B\", \"3\", \"9.04\"]];\nvar schema = [{\n  name: 'Company'\n}, {\n  name: 'Subscribers'\n}, {\n  name: 'Revenue'\n}, {\n  name: 'Emmy Awards'\n}, {\n  name: 'IMDb Rating'\n}];\nvar dataStore = new FusionGrid.DataStore();\nvar dataTable = dataStore.createDataTable(data, schema, {\n  enableIndex: true\n});\nvar gridConfig = {};\n\nfunction rendered(event) {\n  console.log('event fired');\n}\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.menuClick = function (id) {\n      _this.setState({\n        \"caption\": id\n      });\n\n      _this.setState({\n        \"kpiData\": KpiData[id]\n      });\n\n      _this.setState({\n        \"dataSource\": DataSource[id]\n      });\n\n      _this.state.menus.forEach(function (menu) {\n        id === menu.value ? menu.active = true : menu.active = false;\n      });\n\n      _this.setState({\n        \"menus\": _this.state.menus\n      });\n    };\n\n    _this.kpiClick = function (id) {\n      if (id === \"Subscribers\") ReactDOM.findDOMNode(_this.sub.current).scrollIntoView({\n        block: 'center',\n        behavior: 'smooth'\n      });else if (id === \"Revenue\") ReactDOM.findDOMNode(_this.rev.current).scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n        inline: \"nearest\"\n      });else if (id === \"Emmy Awards\" || \"IMDb Rating\") ReactDOM.findDOMNode(_this.award.current).scrollIntoView({\n        block: 'center',\n        behavior: 'smooth'\n      });\n    };\n\n    _this.sub = React.createRef();\n    _this.rev = React.createRef();\n    _this.award = React.createRef();\n    _this.state = {\n      menus: [{\n        id: \"netflix\",\n        value: \"Netflix\",\n        active: true\n      }, {\n        id: \"amazon\",\n        value: \"Amazon\",\n        active: false\n      }, {\n        id: \"hulu\",\n        value: \"Hulu\",\n        active: false\n      }, {\n        id: \"hbo\",\n        value: \"HBO\",\n        active: false\n      }],\n      caption: \"Netflix\",\n      kpiData: KpiData.Netflix,\n      dataSource: DataSource.Netflix\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar is-primary is-fixed-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"is-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"logo-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"W\")), React.createElement(\"div\", {\n        className: \"navbar-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"has-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Web Series Dashboard\")))), React.createElement(Menu, {\n        menus: this.state.menus,\n        handleClick: this.menuClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Caption, {\n        caption: this.state.caption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"section is-kpi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"has-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"snapshot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" Snapshot 2018\")), React.createElement(Kpi, {\n        cards: this.state.kpiData,\n        handleClick: this.kpiClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"path\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(ReactFusionGrid, {\n        data: dataTable,\n        config: gridConfig,\n        width: 1000,\n        height: 300,\n        \"fgEvent-rendered\": rendered // onRender={methodCallback}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Subscribers, {\n        value: this.state.kpiData[0].value,\n        icon: this.state.kpiData[0].icon,\n        datasource: this.state.dataSource,\n        ref: this.sub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Revenue, {\n        value: this.state.kpiData[1].value,\n        icon: this.state.kpiData[1].icon,\n        datasource: this.state.dataSource,\n        ref: this.rev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(AwardRating, {\n        awardValue: this.state.kpiData[2].value,\n        awardIcon: this.state.kpiData[2].icon,\n        ratingValue: this.state.kpiData[3].value,\n        ratingIcon: this.state.kpiData[3].icon,\n        datasource: this.state.dataSource,\n        ref: this.award,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"section has-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"www.fusioncharts.com\")));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/mac/Projects/fc_dashboards/Idera.web-series-dashboard/src/components/Dashboard.js"],"names":["React","Component","ReactDOM","Menu","Caption","KpiData","Kpi","Subscribers","Revenue","AwardRating","DataSource","FusionGrid","ReactFusionGrid","saasData","fgRoot","data","schema","name","dataStore","DataStore","dataTable","createDataTable","enableIndex","gridConfig","rendered","event","console","log","Dashboard","props","menuClick","id","setState","state","menus","forEach","menu","value","active","kpiClick","findDOMNode","sub","current","scrollIntoView","block","behavior","rev","inline","award","createRef","caption","kpiData","Netflix","dataSource","icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from './Menu';\nimport Caption from './Caption';\nimport KpiData from '../utils/kpiData';\nimport Kpi from './Kpi';\nimport Subscribers from './Subscribers';\nimport Revenue from './Revenue';\nimport AwardRating from './AwardRating';\nimport DataSource from '../utils/config';\nimport FusionGrid from 'fusiongrid';\nimport { ReactFusionGrid } from \"react-fusiongrid\";\nimport saasData from './data';\n// import '../node_modules/bulma/css/bulma.css';\n\nReactFusionGrid.fgRoot(FusionGrid);\n\n// var data = saasData.valueRanges[0].values;\n// Netflix: [\n//     { id: \"Subscribers\", value: \"539.8M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"12.8B\", icon: dollar,iconType:\"badge is-dollar\", },\n//     { id: \"Emmy Awards\", value: \"23\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"8.34\", icon: star,iconType:\"badge is-star\" }\n// ],\n// Amazon: [\n//     { id: \"Subscribers\", value: \"815M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"20.5B\", icon: dollar,iconType:\"badge is-dollar\" },\n//     { id: \"Emmy Awards\", value: \"5\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"7.58\", icon: star,iconType:\"badge is-star\" }\n// ],\n// Hulu: [\n//     { id: \"Subscribers\", value: \"25M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"2.85B\", icon: dollar,iconType:\"badge is-dollar\" },\n//     { id: \"Emmy Awards\", value: \"1\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"7.07\", icon: star,iconType:\"badge is-star\" }\n// ],\n// HBO: [\n//     { id: \"Subscribers\", value: \"150M\", icon: feed,iconType:\"badge is-feed\" },\n//     { id: \"Revenue\", value: \"6B\", icon: dollar,iconType:\"badge is-dollar\" },\n//     { id: \"Emmy Awards\", value: \"6\", icon: trophy, iconType:\"badge is-trophy\" },\n//     { id: \"IMDb Rating\", value: \"8.04\", icon: star,iconType:\"badge is-star\" }\n// ]\n\nvar data = [\n    [\"Netflix\", \"45M\", \"6B\", \"6\", \"8.04\"],\n    [\"Amazon\", \"185M\", \"5B\", \"5\", \"3.04\"],\n    [\"Hulu\", \"90M\", \"3B\", \"4\", \"6.04\"],\n    [\"HBO\", \"80M\", \"8B\", \"3\", \"9.04\"]\n];\nvar schema = [\n    {\n        name: 'Company' \n    }, \n    {\n        name: 'Subscribers'\n    },\n    {\n        name: 'Revenue'\n    },\n    {\n        name: 'Emmy Awards'\n    },\n    {\n        name: 'IMDb Rating'\n    }\n  ];\nvar dataStore = new FusionGrid.DataStore();\n  var dataTable = dataStore.createDataTable(data, schema, {\n      enableIndex: true\n  });\n  var gridConfig = {}\n  function rendered(event){\n    console.log('event fired')\n  }\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.sub = React.createRef();\n        this.rev = React.createRef();\n        this.award = React.createRef();\n        this.state = {\n            menus: [\n                { id: \"netflix\", value: \"Netflix\", active: true },\n                { id: \"amazon\", value: \"Amazon\", active: false },\n                { id: \"hulu\", value: \"Hulu\", active: false },\n                { id: \"hbo\", value: \"HBO\", active: false }\n            ],\n            caption: \"Netflix\",\n            kpiData: KpiData.Netflix,\n            dataSource: DataSource.Netflix\n        }\n    }\n    menuClick = (id) => {\n       \n        this.setState({ \"caption\": id });\n        this.setState({ \"kpiData\": KpiData[id] });\n        this.setState({ \"dataSource\": DataSource[id] })\n        this.state.menus.forEach(menu => {\n\n            id === menu.value ? menu.active = true : menu.active = false;\n        });\n        this.setState({ \"menus\": this.state.menus });\n       \n    }\n    kpiClick = (id) => {\n        if (id === \"Subscribers\")\n            ReactDOM.findDOMNode(this.sub.current).scrollIntoView({ block: 'center',  behavior: 'smooth' });\n        else if (id === \"Revenue\")\n            ReactDOM.findDOMNode(this.rev.current).scrollIntoView({ block: 'center', behavior: 'smooth', inline: \"nearest\" });\n        else if (id === \"Emmy Awards\" || \"IMDb Rating\")\n            ReactDOM.findDOMNode(this.award.current).scrollIntoView({ block: 'center', behavior: 'smooth' });\n    }\n    render() {\n        return (\n            <div className=\"dashboard\">\n                \n                <nav className=\"navbar is-primary is-fixed-top\" >\n                    <div className=\"navbar-brand\">\n                        <div className=\"is-logo\">\n                            <h2 className=\"logo-wrapper\">W</h2>\n                        </div>\n                        <div className=\"navbar-item\">\n                            <span className=\"has-space\">\n                                <h2 className=\"caption\">Web Series Dashboard</h2>\n                            </span>\n                        </div>\n                    </div>\n                    <Menu menus={this.state.menus} handleClick={this.menuClick} />\n                </nav >\n\n                <div className=\"container\">\n                    <Caption caption={this.state.caption} />\n                    <section className=\"section is-kpi\">\n                        <span className=\"has-image\">\n                            <h3 className=\"snapshot\"> Snapshot 2018</h3>\n                        </span>\n                        <Kpi cards={this.state.kpiData} handleClick={this.kpiClick} />\n                        <hr className=\"path\" />\n                    </section>\n                    <ReactFusionGrid \n                    data={dataTable} \n                    config={gridConfig} \n                    width={1000} \n                    height={300} \n                    fgEvent-rendered={rendered}\n                    // onRender={methodCallback}\n                />\n                    <Subscribers value={this.state.kpiData[0].value} icon={this.state.kpiData[0].icon} datasource={this.state.dataSource} ref={this.sub} />\n                    <Revenue value={this.state.kpiData[1].value} icon={this.state.kpiData[1].icon} datasource={this.state.dataSource} ref={this.rev} />\n                    <AwardRating awardValue={this.state.kpiData[2].value} awardIcon={this.state.kpiData[2].icon} ratingValue={this.state.kpiData[3].value} ratingIcon={this.state.kpiData[3].icon} datasource={this.state.dataSource} ref={this.award} />\n                    <section className=\"section has-footer\">www.fusioncharts.com</section>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}