{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getWorksheetColumnWidths = exports.getJsonSheetRow = exports.getContentProperty = void 0;\n\nvar xlsx_mini_min_1 = require(\"xlsx/dist/xlsx.mini.min\");\n\nvar getContentProperty = function getContentProperty(content, property) {\n  var accessContentProperties = function accessContentProperties(content, properties) {\n    var value = content[properties[0]];\n\n    if (properties.length === 1) {\n      return value !== null && value !== void 0 ? value : \"\";\n    }\n\n    if (value === undefined || typeof value === \"string\" || typeof value === \"boolean\" || typeof value === \"number\" || value instanceof Date) {\n      return \"\";\n    }\n\n    return accessContentProperties(value, properties.slice(1));\n  };\n\n  var properties = property.split(\".\");\n  return accessContentProperties(content, properties);\n};\n\nexports.getContentProperty = getContentProperty;\n\nvar getJsonSheetRow = function getJsonSheetRow(content, columns) {\n  var jsonSheetRow = {};\n  columns.forEach(function (column) {\n    if (typeof column.value === \"function\") {\n      jsonSheetRow[column.label] = column.value(content);\n    } else {\n      jsonSheetRow[column.label] = getContentProperty(content, column.value);\n    }\n  });\n  return jsonSheetRow;\n};\n\nexports.getJsonSheetRow = getJsonSheetRow;\n\nvar getWorksheetColumnWidths = function getWorksheetColumnWidths(worksheet, extraLength) {\n  var _a;\n\n  if (extraLength === void 0) {\n    extraLength = 1;\n  }\n\n  var columnRange = xlsx_mini_min_1.utils.decode_range((_a = worksheet[\"!ref\"]) !== null && _a !== void 0 ? _a : \"\");\n  var columnLetters = [];\n\n  for (var C = columnRange.s.c; C <= columnRange.e.c; C++) {\n    var address = xlsx_mini_min_1.utils.encode_col(C);\n    columnLetters.push(address);\n  }\n\n  return columnLetters.map(function (column) {\n    var columnCells = Object.keys(worksheet).filter(function (cell) {\n      return cell.charAt(0) === column || cell.slice(0, 2) === column;\n    });\n    var maxWidthCell = columnCells.reduce(function (previousCell, currentCell) {\n      return worksheet[previousCell].v.length > worksheet[currentCell].v.length ? previousCell : currentCell;\n    });\n    return {\n      width: worksheet[maxWidthCell].v.length + extraLength\n    };\n  });\n};\n\nexports.getWorksheetColumnWidths = getWorksheetColumnWidths;\n\nvar getWorksheet = function getWorksheet(jsonSheet, settings) {\n  var jsonSheetRows;\n\n  if (jsonSheet.content.length > 0) {\n    jsonSheetRows = jsonSheet.content.map(function (contentItem) {\n      return getJsonSheetRow(contentItem, jsonSheet.columns);\n    });\n  } else {\n    jsonSheetRows = jsonSheet.columns.map(function (column) {\n      var _a;\n\n      return _a = {}, _a[column.label] = \"\", _a;\n    });\n  }\n\n  var worksheet = xlsx_mini_min_1.utils.json_to_sheet(jsonSheetRows);\n  worksheet[\"!cols\"] = getWorksheetColumnWidths(worksheet, settings.extraLength);\n  return worksheet;\n};\n\nvar writeWorkbook = function writeWorkbook(workbook, settings) {\n  var _a, _b;\n\n  if (settings === void 0) {\n    settings = {};\n  }\n\n  var filename = \"\".concat((_a = settings.fileName) !== null && _a !== void 0 ? _a : \"Spreadsheet\", \".xlsx\");\n  var writeOptions = (_b = settings.writeOptions) !== null && _b !== void 0 ? _b : {};\n  return writeOptions.type === \"buffer\" ? (0, xlsx_mini_min_1.write)(workbook, writeOptions) : (0, xlsx_mini_min_1.writeFile)(workbook, filename, writeOptions);\n};\n\nvar xlsx = function xlsx(jsonSheets, settings, workbookCallback) {\n  if (settings === void 0) {\n    settings = {};\n  }\n\n  if (workbookCallback === void 0) {\n    workbookCallback = function workbookCallback() {};\n  }\n\n  if (jsonSheets.length === 0) return;\n  var workbook = xlsx_mini_min_1.utils.book_new();\n  jsonSheets.forEach(function (actualSheet, actualIndex) {\n    var _a;\n\n    var worksheet = getWorksheet(actualSheet, settings);\n    var worksheetName = (_a = actualSheet.sheet) !== null && _a !== void 0 ? _a : \"Sheet \".concat(actualIndex + 1);\n    xlsx_mini_min_1.utils.book_append_sheet(workbook, worksheet, worksheetName);\n  });\n  workbookCallback(workbook);\n  return writeWorkbook(workbook, settings);\n};\n\nexports[\"default\"] = xlsx;\nmodule.exports = xlsx;\nmodule.exports.getContentProperty = getContentProperty;\nmodule.exports.getJsonSheetRow = getJsonSheetRow;\nmodule.exports.getWorksheetColumnWidths = getWorksheetColumnWidths;","map":null,"metadata":{},"sourceType":"script"}