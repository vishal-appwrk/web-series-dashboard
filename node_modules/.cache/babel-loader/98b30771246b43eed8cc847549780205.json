{"ast":null,"code":"!function (e) {\n  \"object\" == typeof module && \"undefined\" != typeof module.exports ? module.exports = e : e();\n}(function () {\n  (window.webpackJsonpFusionCharts = window.webpackJsonpFusionCharts || []).push([[4], {\n    821: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t.DragArea = t.Radar = t.HeatMap = t.BoxAndWhisker2D = t.CandleStick = t.DragNode = t.MSStepLine = t.MultiAxisLine = t.MultilevelPie = t.SelectScatter = t.WaterFall2D = t.Kagi = t.Dragline = t.Dragcolumn2d = t.Inversemsline = t.Inversemscolumn2d = t.Inversemsarea = t.Errorscatter = t.Errorline = t.Errorbar2d = t.Mssplinearea = t.Msspline = t.MSSplineDy = t.Splinearea = t.Logmsline = t.LogStackedColumn2d = t.Logmscolumn2d = t.Spline = undefined;\n\n      var a = O(o(598)),\n          r = O(o(822)),\n          n = O(o(827)),\n          i = O(o(829)),\n          l = O(o(601)),\n          s = O(o(603)),\n          c = O(o(606)),\n          u = O(o(608)),\n          p = O(o(831)),\n          h = O(o(835)),\n          d = O(o(840)),\n          f = O(o(845)),\n          g = O(o(847)),\n          m = O(o(849)),\n          v = O(o(851)),\n          b = O(o(863)),\n          y = O(o(870)),\n          x = O(o(877)),\n          k = O(o(878)),\n          w = O(o(882)),\n          C = O(o(887)),\n          N = O(o(895)),\n          S = O(o(899)),\n          A = O(o(910)),\n          E = O(o(923)),\n          D = O(o(932)),\n          _ = O(o(944)),\n          T = O(o(957)),\n          L = O(o(958)),\n          P = O(o(959));\n\n      function O(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      t.Spline = a[\"default\"], t.Logmscolumn2d = r[\"default\"], t.LogStackedColumn2d = i[\"default\"], t.Logmsline = n[\"default\"], t.Splinearea = l[\"default\"], t.MSSplineDy = c[\"default\"], t.Msspline = s[\"default\"], t.Mssplinearea = u[\"default\"], t.Errorbar2d = p[\"default\"], t.Errorline = h[\"default\"], t.Errorscatter = d[\"default\"], t.Inversemsarea = f[\"default\"], t.Inversemscolumn2d = g[\"default\"], t.Inversemsline = m[\"default\"], t.Dragcolumn2d = v[\"default\"], t.Dragline = b[\"default\"], t.Kagi = y[\"default\"], t.WaterFall2D = x[\"default\"], t.SelectScatter = k[\"default\"], t.MultilevelPie = w[\"default\"], t.MultiAxisLine = C[\"default\"], t.MSStepLine = N[\"default\"], t.DragNode = S[\"default\"], t.CandleStick = A[\"default\"], t.BoxAndWhisker2D = E[\"default\"], t.HeatMap = D[\"default\"], t.Radar = _[\"default\"], t.DragArea = T[\"default\"], t[\"default\"] = {\n        name: \"powercharts\",\n        type: \"package\",\n        requiresFusionCharts: !0,\n        extension: function extension(e) {\n          e.addDep(L[\"default\"]), e.addDep(P[\"default\"]), e.addDep(a[\"default\"]), e.addDep(r[\"default\"]), e.addDep(i[\"default\"]), e.addDep(n[\"default\"]), e.addDep(l[\"default\"]), e.addDep(c[\"default\"]), e.addDep(s[\"default\"]), e.addDep(u[\"default\"]), e.addDep(p[\"default\"]), e.addDep(h[\"default\"]), e.addDep(d[\"default\"]), e.addDep(f[\"default\"]), e.addDep(g[\"default\"]), e.addDep(m[\"default\"]), e.addDep(v[\"default\"]), e.addDep(b[\"default\"]), e.addDep(y[\"default\"]), e.addDep(x[\"default\"]), e.addDep(k[\"default\"]), e.addDep(w[\"default\"]), e.addDep(C[\"default\"]), e.addDep(N[\"default\"]), e.addDep(S[\"default\"]), e.addDep(A[\"default\"]), e.addDep(E[\"default\"]), e.addDep(D[\"default\"]), e.addDep(_[\"default\"]), e.addDep(T[\"default\"]);\n        }\n      };\n    },\n    822: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(823),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    823: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(824)),\n          r = i(o(516)),\n          n = i(o(432));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"LogMSColumn2d\";\n        }, t.prototype.getName = function () {\n          return \"LogMSColumn2d\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Multi-series Log Column Chart\", t.defaultDatasetType = \"column\", t.enablemousetracking = !0;\n        }, t.prototype.getDSGroupdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    824: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = i(o(825)),\n          n = o(125);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.registerFactory(\"axis\", r[\"default\"], [\"canvas\"]), o;\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"MsLog\";\n        }, t.prototype._feedAxesRawData = function () {\n          var e,\n              t,\n              o = this.getFromEnv(\"dataSource\"),\n              a = this.getFromEnv(\"chart-attrib\");\n          return e = this.getSpecificxAxisConf(), \"1\" === (t = this.getSpecificyAxisConf()).base && (t.base = 10, t.logBase = 10), t.minorDivlinecolor = (0, n.pluck)(a.minordivlinecolor, t.divLineColor), t.minorDivLineThickness = (0, n.pluck)(a.minordivlinethickness, 1), t.minorDivLineAlpha = (0, n.pluck)(a.minordivlinealpha, t.divLineAlpha / 2), e.vtrendlines = o.vtrendlines, t.trendlines = o.trendlines, {\n            yAxisConf: [t],\n            xAxisConf: [e]\n          };\n        }, t.prototype.getSpecificxAxisConf = function () {\n          var e = this.getFromEnv(\"chart-attrib\"),\n              t = this.getBasexAxisConf();\n          return t.showZeroPlane = e.showvzeroplane, t.zeroPlaneThickness = e.vzeroplanethickness, t.zeroPlaneAlpha = e.vzeroplanealpha, t.showAxisLine = (0, n.pluckNumber)(e.showxaxisline, e.showaxislines, e.drawAxisLines, 0), t.axisLineColor = (0, n.pluck)(e.xaxislinecolor, e.axislinecolor, \"#000000\"), t.isReverse = !1, t.showAlternateGridColor = (0, n.pluckNumber)(e.showalternatevgridcolor, 0), t.numDivLines = e.numvdivlines, t.maxLabelHeight = e.maxlabelheight, t.axisName = e.xaxisname, t.setAdaptiveMin = e.setadaptivexmin, t.showLimits = e.showvlimits, t.showDivLineValues = (0, n.pluckNumber)(e.showvdivlinevalues, e.showvdivlinevalues), t;\n        }, t.prototype.getSpecificyAxisConf = function () {\n          var e = this.getFromEnv(\"chart-attrib\"),\n              t = this.config.is3D ? n.chartPaletteStr.chart3D : n.chartPaletteStr.chart2D,\n              o = !!(0, n.pluckNumber)(e.invertyaxis, 0),\n              a = this.getFromEnv(\"color-manager\");\n          return {\n            isVertical: !0,\n            isReverse: !o,\n            isOpposit: !1,\n            outCanfontFamily: (0, n.pluck)(e.outcnvbasefont, e.basefont, \"Verdana,sans\"),\n            outCanfontSize: (0, n.pluckFontSize)(e.outcnvbasefontsize, e.basefontsize, 10),\n            outCancolor: (0, n.pluck)(e.outcnvbasefontcolor, e.basefontcolor, a.getColor(t.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: e.yaxisnamepadding,\n            axisValuePadding: e.yaxisvaluespadding,\n            axisNameFont: e.yaxisnamefont,\n            axisNameFontSize: e.yaxisnamefontsize,\n            axisNameFontColor: e.yaxisnamefontcolor,\n            axisNameFontBold: e.yaxisnamefontbold,\n            axisNameFontItalic: e.yaxisnamefontitalic,\n            axisNameBgColor: e.yaxisnamebgcolor,\n            axisNameBorderColor: e.yaxisnamebordercolor,\n            axisNameAlpha: e.yaxisnamealpha,\n            axisNameFontAlpha: e.yaxisnamefontalpha,\n            axisNameBgAlpha: e.yaxisnamebgalpha,\n            axisNameBorderAlpha: e.yaxisnameborderalpha,\n            axisNameBorderPadding: e.yaxisnameborderpadding,\n            axisNameBorderRadius: e.yaxisnameborderradius,\n            axisNameBorderThickness: e.yaxisnameborderthickness,\n            axisNameBorderDashed: e.yaxisnameborderdashed,\n            axisNameBorderDashLen: e.yaxisnameborderdashlen,\n            axisNameBorderDashGap: e.yaxisnameborderdashgap,\n            axisNameWidth: e.yaxisnamewidth,\n            useEllipsesWhenOverflow: e.useellipseswhenoverflow,\n            rotateAxisName: (0, n.pluckNumber)(e.rotateyaxisname, 1),\n            axisName: e.yaxisname,\n            divLineColor: (0, n.pluck)(e.divlinecolor, a.getColor(t.divLineColor)),\n            divLineAlpha: (0, n.pluck)(e.divlinealpha, a.getColor(\"divLineAlpha\")),\n            divLineThickness: (0, n.pluckNumber)(e.divlinethickness, 2),\n            divLineIsDashed: Boolean((0, n.pluckNumber)(e.divlinedashed, e.divlineisdashed, 0)),\n            divLineDashLen: (0, n.pluckNumber)(e.divlinedashlen, 4),\n            divLineDashGap: (0, n.pluckNumber)(e.divlinedashgap, 2),\n            showAlternateGridColor: (0, n.pluckNumber)(e.showalternatehgridcolor, 1),\n            alternateGridColor: (0, n.pluck)(e.alternatehgridcolor, a.getColor(\"altHGridColor\")),\n            alternateGridAlpha: (0, n.pluck)(e.alternatehgridalpha, a.getColor(\"altHGridAlpha\")),\n            numDivLines: e.numdivlines,\n            axisMinValue: e.yaxisminvalue,\n            axisMaxValue: e.yaxismaxvalue,\n            setAdaptiveMin: e.setadaptiveymin,\n            adjustDiv: e.adjustdiv,\n            labelStep: e.yaxisvaluesstep,\n            showAxisValues: (0, n.pluckNumber)(e.showyaxisvalues, e.showyaxisvalue),\n            showLimits: (0, n.pluckNumber)(e.showyaxislimits, e.showlimits, this.showLimits),\n            showDivLineValues: (0, n.pluckNumber)(e.showdivlinevalues, e.showdivlinevalue),\n            showZeroPlane: e.showzeroplane,\n            zeroPlaneColor: e.zeroplanecolor,\n            zeroPlaneThickness: e.zeroplanethickness,\n            zeroPlaneAlpha: e.zeroplanealpha,\n            showZeroPlaneValue: e.showzeroplanevalue,\n            trendlineColor: e.trendlinecolor,\n            trendlineToolText: e.trendlinetooltext,\n            trendlineThickness: e.trendlinethickness,\n            trendlineAlpha: e.trendlinealpha,\n            showTrendlinesOnTop: e.showtrendlinesontop,\n            showAxisLine: (0, n.pluckNumber)(e.showyaxisline, e.showaxislines, e.drawAxisLines, 0),\n            axisLineThickness: (0, n.pluckNumber)(e.yaxislinethickness, e.axislinethickness, 1),\n            axisLineAlpha: (0, n.pluckNumber)(e.yaxislinealpha, e.axislinealpha, 100),\n            base: e.base,\n            logBase: e.logbase,\n            axisLineColor: (0, n.pluck)(e.yaxislinecolor, e.axislinecolor, \"#000000\"),\n            showMinorDivLineValues: (0, n.pluckNumber)(e.showminordivlinevalues, 0),\n            numMinorDivLines: e.numminordivlines\n          };\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    825: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t = e.getChildren(\"canvas\")[0],\n            o = t.getChildren(\"axisRefVisualCartesian\")[0],\n            i = {\n          zoomable: !0,\n          pannable: !0\n        },\n            l = e._feedAxesRawData(),\n            s = void 0,\n            c = void 0,\n            u = function u() {\n          return o.asyncDraw();\n        };\n\n        (0, a.componentFactory)(e, r[\"default\"], \"yAxis\", 1, l.yAxisConf), (0, a.componentFactory)(e, n[\"default\"], \"xAxis\", 1, l.xAxisConf), s = e.getChildren(\"yAxis\")[0], c = e.getChildren(\"xAxis\")[0], s.setLinkedItem(\"canvas\", t), c.setLinkedItem(\"canvas\", t), o.setLinkedItem(s.getId(), s), o.setLinkedItem(c.getId(), c), o.addExtEventListener(\"visiblerangeset\", u, c), o.addExtEventListener(\"visiblerangeset\", u, s), t.attachAxis(c, !1, e.zoomX ? i : {}), t.attachAxis(s, !0, e.zoomY ? i : {}), e._setCategories();\n      };\n      var a = o(125),\n          r = i(o(826)),\n          n = i(o(422));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n    },\n    826: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(379)),\n          r = s(o(729)),\n          n = s(o(383)),\n          i = o(125),\n          l = o(386);\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = function u(e) {\n        return null !== e && e !== i.UNDEF && \"\" !== e && !isNaN(e);\n      },\n          p = {\n        wrtVisible: !0\n      },\n          h = i.preDefStr.POSITION_START,\n          d = i.preDefStr.POSITION_TOP,\n          f = i.preDefStr.POSITION_BOTTOM,\n          g = i.preDefStr.POSITION_END,\n          m = function m() {\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [],\n            t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        if (0 === e.length) return [];\n        var o = e.length - 1,\n            a = t.length - 1,\n            r = [e[o]];\n\n        for (o--; o >= 0;) {\n          t[a] > e[o] ? (r.push(t[a]), a--) : (r.push(e[o]), o--);\n        }\n\n        return r;\n      },\n          v = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.config.scale = new r[\"default\"](), o.config.labelMap = [], o;\n        }\n\n        return c(t, e), t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.base = 10, t.showMinorDivLineValues = 1, t.numMinorDivLines = i.UNDEF;\n        }, t.prototype.getName = function () {\n          return \"log\";\n        }, t.prototype.configureAttributes = function (t) {\n          var o,\n              a = this.config,\n              r = this.getFromEnv(\"number-formatter\"),\n              n = this.getFromEnv(\"color-manager\");\n          e.prototype.configureAttributes.call(this, t), o = a.rawAttr, a.minorDivlinecolor = (0, i.convertColor)((0, i.pluck)(o.minorDivlinecolor, n.getColor(\"divLineColor\")), (0, i.pluckNumber)(o.minorDivLineAlpha, n.getColor(\"divLineAlpha\") / 2)), a.axisMinValue = r.getCleanValue(o.axisMinValue), a.axisMaxValue = r.getCleanValue(o.axisMaxValue), a.minorTicks = [], a.axisMinValue <= 0 && (a.axisMinValue = i.UNDEF), a.axisMaxValue <= 0 && (a.axisMaxValue = i.UNDEF), this.getScale().setBase(a.base), a.minorDivLineThickness = (0, i.pluckNumber)(o.minorDivLineThickness, 1), a.band.isDraw = 0;\n        }, t.prototype.generateTicks = function () {\n          var e = this.getScale().ticks();\n          return this.config._allTicks = e.slice(), e;\n        }, t.prototype.generateMinorTicks = function () {\n          return this.getScale().minorTicks(this.config.numMinorDivLines);\n        }, t.prototype._setAxisRange = function (e) {\n          var t = e.min,\n              o = t === undefined ? .1 : t,\n              a = e.max,\n              r = a === undefined ? 1 : a,\n              n = this.getScale().setDomain([o, r]).nice(),\n              i = this.config,\n              l = i.axisRange;\n          i.ticks = this.generateTicks(), i.minorTicks = this.generateMinorTicks();\n          var s = n.getDomain();\n          o = s[0], r = s[1], l.max = r, l.min = o, this.setVisibleConfig(o, r);\n        }, t.prototype.setDataLimit = function (e, t) {\n          var o,\n              a,\n              r = this.config,\n              n = r.axisMaxValue,\n              l = r.axisMinValue;\n          u(l) && Number(l) <= t && (t = l), u(n) && Number(n) >= e && (e = n), 0 === t && (t = 1), 0 === e && (e = r.base);\n          var s = this.getTrendLineLimits();\n          o = s[0], a = s[1];\n          var c = (0, i.extent)([o, a, t, e], function (e) {\n            return Number(e);\n          });\n          t = c[0], e = c[1], this._setAxisRange({\n            min: t,\n            max: e\n          });\n        }, t.prototype._parseLabel = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              l,\n              s,\n              c,\n              u,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C = this.config,\n              N = this.getFromEnv(\"chart\").config,\n              S = C.axisRange,\n              A = C.isOpposit,\n              E = C.labels,\n              D = E.style,\n              _ = C.isVertical,\n              T = S.max,\n              L = S.min,\n              P = N.canvasBottom,\n              O = N.canvasLeft,\n              V = N.canvasRight,\n              M = N.canvasTop,\n              F = C.labelPadding,\n              I = this.getFromEnv(\"number-formatter\"),\n              B = C.labelMaxH,\n              R = C.labelMaxW,\n              j = C.axisStartPosition,\n              G = this.components,\n              H = C.minorTicks;\n          if (D.lineHeight && -1 !== (n = D.lineHeight).indexOf(\"px\") && (n = n.replace(\"px\", \"\"), n = parseFloat(n)), C.labels.isDraw) for (w = 1 !== this.getZoom(), k = G.labels, e = C.labels.step ? S.tickInterval * C.labels.step : S.tickInterval, r = C.labels.rotation, a = this.getVisibleConfig(), G.labelIndexArr = [], C.allTicks = c = m(C.ticks, C.minorTicks), x = _ ? B : R, u = c.length, t = 0; t < u; t++) {\n            if (v = c[t], b = this.getPixel(v, p), (!(H.indexOf(v) >= 0) || C.showMinorDivLineValues) && !(y && b > y - x && b < y + x) && (!w || !(v < a.minValue || v > a.maxValue)) && (C.labels.drawNormalVal || C.labels.drawLimitVal && (v === L || v === T)) && (C.labels.drawNormalVal || v === L || v === T) && (C.labels.drawLimitVal || v !== L && v !== T) && (0 !== C.showZeroPlaneValue || 0 !== C.showZeroPlane || 0 !== v)) {\n              if (1 === C.showZeroPlane && 1 === C.showZeroPlaneValue && (v < 0 && v + e > 0 || v > 0 && v - e < 0)) if (_) {\n                if (b + B >= this.getPixel(0, p) && this.getPixel(0, p) >= b - B) continue;\n              } else if (b + R >= this.getPixel(0, p) && this.getPixel(0, p) >= b - R) continue;\n              s = {\n                fill: D.color,\n                \"font-size\": D.fontSize\n              }, _ ? (o = \"\" + (C.numberFormatterFn ? I[C.numberFormatterFn] : C.isPercent ? I.percentValue : I.yAxis).call(I, v), l = C.hasCategory && C.categories.category[t].labelPadding || 0, s[\"text-anchor\"] = A ? h : g, s.text = o, s.x = A ? (j || V) + F : (j || O) - F, s.y = l ? b + l : b, y = s.y) : (o = \"\" + (C.numberFormatterFn ? I[C.numberFormatterFn] : C.isPercent ? I.percentValue : I.xAxis).call(I, v), l = C.hasCategory && Number(C.categories.category[t].labelPadding) || 0, s.text = o, s.x = b, s.y = A ? (j || M) - F : (j || P) + F, l && (s.y += l), r ? (s[\"text-anchor\"] = A ? h : g, s[\"vertical-align\"] = \"middle\") : s[\"vertical-align\"] = A ? f : d, y = s.x), E.shiftX && (s.x += E.shiftX), E.shiftY && (s.y += E.shiftY), s.transform = (0, i.getSuggestiveRotation)(r, s.x, s.y), G.labelIndexArr.push(t), k[t] = k[t] || {\n                config: {\n                  props: {\n                    label: {}\n                  }\n                }\n              }, k[t].config.props.label.attr = s, k[t].config.props.label.css = o.css, k[t].config.value = v;\n            }\n          }\n        }, t.prototype._drawLabel = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u = this,\n              p = u.config,\n              h = u.getFromEnv(\"animationManager\"),\n              d = p.labels.style,\n              f = p.axisContainer,\n              g = [],\n              m = u.components,\n              v = m.labelIndexArr,\n              b = {\n            fontFamily: d.fontFamily,\n            fontSize: d.fontSize,\n            fontWeight: d.fontWeight,\n            fontStyle: d.fontStyle,\n            lineHeight: d.lineHeight\n          };\n\n          if (p.labels.isDraw) {\n            for (c = m.labels, f.css(b), l = v.length, t = 0; t < l; t++) {\n              o = (s = c[e = v[t]].config.value) + \"_label\", i = u.getGraphicalElement(o), g.push(o), i = this.addGraphicalElement(o, h.setAnimation({\n                container: f,\n                el: i || \"text\",\n                attr: c[e].config.props.label.attr,\n                data: {\n                  value: s\n                },\n                component: this,\n                label: \"text\",\n                css: c[e].config.props.label.css\n              }));\n            }\n\n            a = (0, n[\"default\"])(p.labelMap, g);\n          } else a = p.labelMap;\n\n          p.labelMap = g, function (t) {\n            for (e = 0; e < t.length; ++e) {\n              (r = u.getGraphicalElement(t[e])) && u.removeGraphicalElement(r);\n            }\n          }(a);\n        }, t.prototype._getVMaxLabelDimention = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s = this.config,\n              c = this.getFromEnv(\"chart\"),\n              u = this.getFromEnv(\"smartLabel\"),\n              p = this.getFromEnv(\"number-formatter\"),\n              h = s.labels.style,\n              d = 0;\n\n          for (u.useEllipsesOnOverflow(c.config.useEllipsesWhenOverflow), u.setStyle({\n            fontSize: h.fontSize,\n            fontFamily: h.fontFamily,\n            lineHeight: h.lineHeight,\n            fontWeight: h.fontWeight\n          }), i = s.isPercent ? p.percentValue : p.xAxis, s.allTicks = e = m(s.ticks, s.minorTicks), t = e.length, a = 0; a < t; a++) {\n            l = e[a], r = \"\" + i.call(p, l), n = u.getOriSize(r), this.components.labels[a] = {\n              config: {\n                width: n.width,\n                height: n.height,\n                props: {\n                  label: {}\n                }\n              }\n            }, r.length > d && (o = n, d = r.length);\n          }\n\n          return o;\n        }, t.prototype._getHMaxLabelDimention = function () {\n          return this._getVMaxLabelDimention();\n        }, t.prototype.getCleanValue = function (e) {\n          var t = null;\n          return (e = Math.abs(e)) > 0 && (t = this.getFromEnv(\"number-formatter\").getCleanValue(e)), t;\n        }, t;\n      }(a[\"default\"]);\n\n      v.prototype.getTrendLineLimits = l.getTrendLineLimits, t[\"default\"] = v;\n    },\n    827: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(828),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    828: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(824)),\n          r = i(o(449)),\n          n = o(551);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.defaultPlotShadow = 1, o;\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"LogMSLine\";\n        }, t.prototype.getName = function () {\n          return \"LogMSLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Multi-series Line Chart\", t.defaultDatasetType = \"line\", t.zeroplanethickness = 1, t.enablemousetracking = !0, t.zeroplanealpha = 40, t.showzeroplaneontop = 0, t.enablemousetracking = !0, t.defaultcrosslinethickness = 1, n._setDefaultConfig.call(this);\n        }, t.prototype.getDSGroupdef = function () {}, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    829: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(830),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    830: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = n(o(823)),\n          r = n(o(525));\n\n      function n(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function i(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var l = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return i(t, e), t.getName = function () {\n          return \"LogStackedColumn2d\";\n        }, t.prototype.getName = function () {\n          return \"LogStackedColumn2d\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Stacked Log Column Chart\", t.isstacked = !0;\n        }, t.prototype.getDSGroupdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = l;\n    },\n    831: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(832),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    832: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = i(o(516)),\n          n = i(o(833));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.showValues = 0, o.isErrorChart = !0, o.eiMethods = {}, o;\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"ErrorBar2D\";\n        }, t.prototype.getName = function () {\n          return \"ErrorBar2D\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Error Bar Chart\", t.hasLegend = !0, t.defaultDatasetType = \"errorbar2d\", t.enablemousetracking = !0;\n        }, t.prototype.getDSGroupdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    833: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t._checkPointerOverPlot = t._checkPointerOverErrorBar = t._firePlotEvent = t._rolloutResponseSetter = t._rolloverResponseSetter = t.removePlots = t._getHoveredPlot = undefined;\n      var a = o(125),\n          r = l(o(432)),\n          n = o(132),\n          i = l(o(834));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c,\n          u,\n          p,\n          h,\n          d,\n          f = a.preDefStr.colors.AAAAAA,\n          g = a.preDefStr.ROUND,\n          m = a.preDefStr.PERCENTAGESTRING,\n          v = a.preDefStr.pStr,\n          b = a.preDefStr.sStr,\n          y = function y(e, t, o, a) {\n        var r = t.graphics,\n            n = t.errorBarHovered,\n            i = r && r.element,\n            l = e.getFromEnv(\"animationManager\"),\n            s = i && i.getData();\n        !n && i && 0 !== s.showHoverEffect && (l.setAnimationState(\"mouseOver\"), l.setAnimation({\n          el: i,\n          label: \"rect\",\n          component: a,\n          attr: i.getData().setRolloverAttr,\n          doNotRemove: !0\n        })), i && e.plotEventHandler(i, o, \"DataPlotRollOver\");\n      },\n          x = function x(e, t, o, a) {\n        var r = t.graphics,\n            n = t.errorBarHovered,\n            i = r && r.element,\n            l = e.getFromEnv(\"animationManager\"),\n            s = i && i.getData();\n        !n && i && 0 !== s.showHoverEffect && (l.setAnimationState(\"mouseOut\"), l.setAnimation({\n          el: i,\n          label: \"rect\",\n          component: a,\n          attr: i.getData().setRolloutAttr,\n          doNotRemove: !0\n        })), i && e.plotEventHandler(i, o, \"DataPlotRollOut\");\n      };\n\n      (0, n.addDep)({\n        name: \"errorbar2DColumnAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"].column\n      }), (0, n.addDep)({\n        name: \"errorbar2DErrorAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"].error\n      });\n\n      var k = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"errorBar2D\";\n        }, t.prototype.ErrorValueConfigure = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              g,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O = this.config,\n              V = O.JSONData,\n              M = V.data,\n              F = M && M.length,\n              I = this.getFromEnv(\"chart-attrib\"),\n              B = this.components.data,\n              R = (0, a.parseUnsafeString)(I.yaxisname),\n              j = (0, a.parseUnsafeString)(I.xaxisname),\n              G = (0, a.pluckNumber)(I.seriesnameintooltip, 1),\n              H = (0, a.parseUnsafeString)((0, a.pluck)(I.tooltipsepchar, \", \")),\n              W = this.getFromEnv(\"number-formatter\"),\n              z = -Infinity,\n              U = Infinity,\n              J = this.getFromEnv(\"xAxis\").getTicksLen(),\n              K = Math.min(J, F),\n              q = function q(t) {\n            var r;\n            return O.showTooltip ? null === h ? r = !1 : void 0 !== t ? (l = [1, 2, 3, 4, 5, 6, 7, 99, 100, 101, 102, 120, 121], s = {\n              yaxisName: R,\n              xaxisName: j,\n              formattedValue: o.toolTipValue,\n              errorValue: p,\n              errorDataValue: o.errorToolTipValue,\n              errorPercentValue: o.errorPercentValue,\n              errorPercentDataValue: o.errorPercentValue,\n              positiveErrorValue: o.positiveErrorToolTipValue,\n              negativeErrorValue: o.negativeErrorToolTipValue,\n              label: o.label\n            }, r = (0, a.parseTooltext)(t, l, s, e, I, V)) : (G && (n = (0, a.getFirstValue)(V && V.seriesname)), r = n ? n + H : \"\", r += o.label ? o.label + H : \"\") : r = !1, r;\n          };\n\n          for (O.showTooltip = (0, a.pluckNumber)(I.showtooltip, 1), O.errorInPercent = i = (0, a.pluckNumber)(V.errorinpercent, I.errorinpercent), O.showValues = (0, a.pluckNumber)(V.showvalues, I.showvalues, 0), O.errorBarShadow = g = (0, a.pluckNumber)(I.errorbarshadow, I.showshadow, 1), O.ignoreEmptyDatasets = (0, a.pluckNumber)(V.ignoreemptydatasets, 0), N = (0, a.pluckNumber)(I.halferrorbar, 1), O.notHalfErrorBar = !(0, a.pluckNumber)(I.halferrorbar, 1), u = (0, a.getFirstAlpha)((0, a.pluck)(V.errorbaralpha, I.errorbaralpha, O.plotfillalpha)), O.errorBarWidthPercent = (0, a.pluckNumber)(V.errorbarwidthpercent, I.errorbarwidthpercent, 70), O.errorBarColor = (0, a.convertColor)((0, a.getFirstColor)((0, a.pluck)(V.errorbarcolor, I.errorbarcolor, f)), u), O.errorBarThickness = (0, a.pluckNumber)(V.errorbarthickness, I.errorbarthickness, 1), O.shadowOpacity = g ? u / 250 : 0, O.parentYAxis = y = (0, a.pluck)(V.parentyaxis && V.parentyaxis.toLowerCase(), v) === b ? 1 : 0, O.cumulativeValueOnErrorBar = (0, a.pluckNumber)(V.cumulativevalueonerrorbar, I.cumulativevalueonerrorbar, 1), P = 0; P < K; P++) {\n            (t = B[P]) && (e = M && M[P], o = t && t.config, T = void 0, L = void 0, void 0 !== (0, a.pluckNumber)(e.value) && (t || (t = B[P] = {\n              graphics: {}\n            }), t.config || (o = B[P].config = {}), x = o.setValue, o.setErrorValue = p = W.getCleanValue(e.errorvalue), o.errorInPercent = (0, a.pluckNumber)(e.errorinpercent, i, 0), o.errorInPercent && (o.setErrorValue = p = (0, a.pluckNumber)((p / 100 * x).toFixed(2))), o.cumulativeValueOnErrorBar = (0, a.pluckNumber)(e.cumulativevalueonerrorbar, O.cumulativeValueOnErrorBar, 1), o.positiveErrorValue = W.getCleanValue((0, a.pluckNumber)(e.positiveerrorvalue, e.errorvalue)), o.errorInPercent && o.positiveErrorValue && (o.positiveErrorValue = (0, a.pluckNumber)((o.positiveErrorValue / 100 * x).toFixed(2))), o.positiveCumulativeErrorValue = x + (0, a.pluckNumber)(o.positiveErrorValue, o.setErrorValue), o.negativeErrorValue = W.getCleanValue((0, a.pluckNumber)(e.negativeerrorvalue, e.errorvalue)), o.errorInPercent && o.negativeErrorValue && (o.negativeErrorValue = (0, a.pluckNumber)((o.negativeErrorValue / 100 * x).toFixed(2))), o.negativeCumulativeErrorValue = x - (0, a.pluckNumber)(o.negativeErrorValue, o.setErrorValue), o.errorToolTipValue = W.dataLabels(p, y), o.negativeErrorToolTipValue = W.dataLabels(o.negativeErrorValue, y), o.negativeCumulativeErrorTooltipValue = W.dataLabels(o.negativeCumulativeErrorValue, y), o.positiveErrorToolTipValue = W.dataLabels(o.positiveErrorValue, y), o.positiveCumulativeErrorTooltipValue = W.dataLabels(o.positiveCumulativeErrorValue, y), o.errorPercentValue = Math.round(p / x * a.HUNDREDSTRING * a.HUNDREDSTRING) / a.HUNDREDSTRING + m, E = o.cumulativeValueOnErrorBar, o.notHalfErrorBar = O.notHalfErrorBar, o.halfErrorBar = N, o.showValue = (0, a.pluckNumber)(e.showvalue, O.showValues), o.hasErrorValue = void 0 !== (0, a.pluckNumber)(e.errorvalue) ? 1 : 0, k = o.errorValue = p, c = o.errorToolTipValue, h = c, r = q(d = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, V.errorplottooltext, I.errorplottooltext, h)))), T = L = void 0, (d = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, V.errorplottooltext, I.errorplottooltext, o.positiveErrorToolTipValue)))) && o.positiveErrorToolTipValue && (T = q(d)), (d = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, V.errorplottooltext, I.errorplottooltext, o.negativeErrorToolTipValue)))) && o.negativeErrorToolTipValue && (L = q(d)), E && ((d = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, V.errorplottooltext, I.errorplottooltext, o.positiveCumulativeErrorTooltipValue)))) && o.positiveCumulativeErrorTooltipValue && (D = q(d)), (d = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, V.errorplottooltext, I.errorplottooltext, o.negativeCumulativeErrorTooltipValue)))) && o.negativeCumulativeErrorTooltipValue && (_ = q(d))), S = o.positiveErrorValue, A = o.negativeErrorValue, (e.positiveerrorvalue || e.negativeerrorvalue) && (o.halfErrorBar = 0, o.notHalfErrorBar = !0), w = x + (null !== S ? S : p), C = x - (o.halfErrorBar ? 0 : A < 0 && x < 0 ? 0 : null !== A ? A : p), z = Math.max(z, w, C), U = Math.min(U, w, C), o.errorValueArr = [], null === o.positiveErrorValue && (o.positiveErrorValue = void 0), k = -o.positiveErrorValue, o.errorValueArr.push({\n              errorValue: k,\n              tooltext: E ? D : T || r,\n              errorEdgeBar: !0\n            }), o.errorValueArr.push({\n              errorValue: k,\n              tooltext: T || r\n            }), o.notHalfErrorBar && (k = o.negativeErrorValue, o.errorValueArr.push({\n              errorValue: k,\n              tooltext: E ? _ : L || r,\n              errorEdgeBar: !0\n            }), o.errorValueArr.push({\n              errorValue: k,\n              tooltext: L || r\n            })), o.toolText = q(o.setTooltext)));\n          }\n\n          O.maxValue = z, O.minValue = U;\n        }, t.prototype.drawErrorValue = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V = this.getJSONIndex(),\n              M = this.config,\n              F = this.getState(\"visible\"),\n              I = this.getFromEnv(\"chart\"),\n              B = this.getFromEnv(\"yAxis\"),\n              R = this.components.data,\n              j = M.errorBarThickness,\n              G = M.errorBarWidthPercent,\n              H = M.errorBarColor,\n              W = M.shadowOpacity,\n              z = this.getContainer(\"errorPlotGroup\"),\n              U = this.getContainer(\"errorShadowGroup\"),\n              J = M.scrollMinVal,\n              K = M.scrollMaxVal,\n              q = function q(e) {\n            return function () {\n              \"disappearing\" === e ? this.hide() : this.show();\n            };\n          },\n              Y = this.getFromEnv(\"animationManager\");\n\n          for (t = J; t < K; t++) {\n            if ((l = R[t]) && (L = l.trackerConfig, (O = l.errorTrackerConfig = {}).errorTrackerArr = [], s = (c = l && l.config) && c.setValue, void 0 !== l)) if (l && (void 0 === s || null === s || \"\" === c.errorValue || void 0 === c.errorValue || null === c.errorValue && null === c.positiveErrorValue && null === c.negativeErrorValue)) for (k = l.graphics.error && l.graphics.error.length, o = 0; o < k; o++) {\n              l.graphics.error && l.graphics.error[o] && (Y.setAnimation({\n                el: l.graphics.error[o],\n                label: \"path\",\n                callback: q(\"disappearing\")\n              }), l.graphics.error[o].shadow({\n                opacity: 0\n              }));\n            } else {\n              for (l.errorBar && delete l.errorBar, v = c.errorValueArr, O.errorLen = k = v.length, !l.graphics.error && (l.graphics.error = []), C = V + \"_\" + t, r = c.setLink, S = s < 0, A = l._xPos, E = l._yPos, D = l._width, _ = l._height, i = S ? E + _ : E, n = A + D / 2, l.errorBar || (l.errorBar = []); k--;) {\n                N = null, O.errorTrackerArr[k] = {}, b = v[k], O.errorTrackerArr[k].tooltext = b.tooltext, T = b.errorStartValue, x = isNaN(T) ? i : B.getPixel(T), null === (y = b.errorValue) || isNaN(y) ? l.graphics.error && l.graphics.error[k] && Y.setAnimation({\n                  el: l.graphics.error[k],\n                  label: \"path\",\n                  doNotRemove: !0,\n                  callback: q(\"disappearing\")\n                }).shadow({\n                  opacity: 0\n                }) : (w = D * (G / 100) / 2, m = F ? -1 : 0, f = B.getPixel(B.getValue(isNaN(T) ? E : x) + y * m, {\n                  wrtVisible: !0\n                }), S && (f += _), p = f, h = n, P = (j = (0, a.pluckNumber)(b.errorBarThickness, j)) > 5 ? j / 2 : 2.5, p = Math.round(f) + j % 2 / 2, h = Math.round(n) + j % 2 / 2, l.errorBar[k] || (l.errorBar[k] = []), b.errorEdgeBar ? (d = [\"M\", h - w, p, \"H\", h + w], l.errorBar[k][1] = {\n                  _xPos: h - w - P,\n                  _yPos: p - P,\n                  _height: 2 * P,\n                  _width: 2 * (w + P),\n                  _toolText: b.tooltext\n                }) : (d = [\"M\", h, x, \"V\", p], l.errorBar[k][0] = {\n                  _xPos: h - P,\n                  _yPos: p < x ? p : x,\n                  _height: Math.abs(x - p),\n                  _width: 2 * P,\n                  _toolText: b.tooltext\n                }), e = {\n                  path: d,\n                  stroke: H = (0, a.pluck)(b.errorBarColor, H),\n                  \"stroke-width\": j,\n                  cursor: r ? \"pointer\" : \"\",\n                  \"stroke-linecap\": g\n                }, u = !l.graphics.error[k] && F ? \"appearing\" : F ? \"updating\" : \"disappearing\", N = l.graphics.error[k] = Y.setAnimation({\n                  el: l.graphics.error[k] || \"path\",\n                  container: z,\n                  component: this,\n                  attr: e,\n                  label: \"path\",\n                  state: u,\n                  callback: q(u)\n                }).shadow({\n                  opacity: W\n                }, U), I.config.enablemousetracking && N.data(\"groupId\", C).data(\"eventArgs\", L.eventArgs));\n              }\n\n              if (!c.notHalfErrorBar) for (o = 2; o < 4; o++) {\n                l.graphics.error && l.graphics.error[o] && Y.setAnimation({\n                  el: l.graphics.error[o],\n                  label: \"path\",\n                  doNotRemove: !0,\n                  callback: q(\"disappearing\")\n                }).shadow({\n                  opacity: 0\n                });\n              }\n            }\n          }\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          var a = this.getFromEnv(\"chart\"),\n              r = this.components.data[t],\n              n = this.getFromEnv(\"toolTipController\"),\n              i = r.graphics.element,\n              l = r.errorBarHovered,\n              s = r.config.setLink;\n          if (i) switch (e) {\n            case \"fc-mouseover\":\n              this._decideTooltipType(t, o), y(a, r, o, this), s && (i.node.style.cursor = \"pointer\");\n              break;\n\n            case \"fc-mouseout\":\n              n.hide(this.config.currentToolTip), x(a, r, o, this), s && (i.node.style.cursor = \"default\");\n              break;\n\n            case \"fc-click\":\n              a.plotEventHandler(i, o);\n              break;\n\n            case \"fc-mousemove\":\n              this._decideTooltipType(t, o), l && !r._isRollover ? (0 !== i.showHoverEffect && i.attr(i.getData().setRolloutAttr), r._isRollover = !0, r._isRollout = !1) : l || r._isRollout || (0 !== i.showHoverEffect && i.attr(i.getData().setRolloverAttr), r._isRollover = !1, r._isRollout = !0);\n          }\n        }, t.prototype._checkPointerOverErrorBar = function (e, t, o) {\n          var a,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d = this.components.data,\n              f = d[e];\n          if (f && (r = f.errorBar)) for (i = r && r.length; i--;) {\n            for (l = (n = r[i]) && n.length; l--;) {\n              if (n[l] && n[l]._xPos && (c = n[l]._xPos, u = n[l]._yPos, p = n[l]._height, h = n[l]._width, s = n[l]._toolText, a = t >= c && t <= c + h && o >= u && o <= u + p)) return {\n                pointIndex: e,\n                hovered: a,\n                pointObj: d[e],\n                toolText: s\n              };\n            }\n          }\n        }, t.prototype._checkPointerOverPlot = function (e, t, o) {\n          var a,\n              r,\n              n = this.components.data,\n              i = this.getFromEnv(\"chart-attrib\"),\n              l = this.config.JSONData,\n              s = n[e],\n              c = s && s.config;\n          if (s) return a = l.plottooltext || i.plottooltext ? \"\" : c.toolTipValue, (r = this._checkPointerOverErrorBar(e, t, o)) ? (s.errorBarHovered = !0, c.finalTooltext = r.toolText) : (r = this._checkPointerOverColumn(e, t, o), s.errorBarHovered = !1, r && (c.finalTooltext = !1 !== c.toolText && c.toolText + a)), r;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o, a;\n          return o = this.getFromEnv(\"xAxis\").getValue(e), (a = Math.round(o)) - o > 0 ? this._checkPointerOverPlot(a, e, t) || this._checkPointerOverPlot(a - 1, e, t) : this._checkPointerOverPlot(a + 1, e, t) || this._checkPointerOverPlot(a, e, t);\n        }, t.prototype.removePlots = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.components,\n              n = r.removeDataArr,\n              i = r.pool || (r.pool = {\n            element: [],\n            hotElement: [],\n            label: []\n          }),\n              l = n.length,\n              s = this.getFromEnv(\"animationManager\");\n\n          for (o = 0; o < l; o++) {\n            if (e = n[0], n.splice(0, 1), e && e.graphics) {\n              for ((t = e.graphics).element && t.element.hide() && t.element.shadow({\n                opacity: 0\n              }), a = 0; a < 4; a++) {\n                t.error && t.error[a] && s.setAnimation({\n                  el: t.error[a],\n                  label: \"path\"\n                });\n              }\n\n              e.graphics.element && (i.element = i.element.concat(e.graphics.element)), e.graphics.hotElement && (i.hotElement = i.hotElement.concat(e.graphics.hotElement)), e.graphics.label && (i.label = i.label.concat(e.graphics.label));\n            }\n          }\n\n          r.pool = i;\n        }, t;\n      }(r[\"default\"]);\n\n      t.removePlots = c = k.prototype.removePlots, t._getHoveredPlot = u = k.prototype._getHoveredPlot, t._firePlotEvent = p = k.prototype._firePlotEvent, t._checkPointerOverPlot = h = k.prototype._checkPointerOverPlot, t._checkPointerOverErrorBar = d = k.prototype._checkPointerOverErrorBar, t._getHoveredPlot = u, t.removePlots = c, t._rolloverResponseSetter = y, t._rolloutResponseSetter = x, t._firePlotEvent = p, t._checkPointerOverErrorBar = d, t._checkPointerOverPlot = h, t[\"default\"] = k;\n    },\n    834: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(433),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        column: {\n          \"initial.dataset.errorBar2D\": n[\"default\"][\"initial.dataset.column\"]\n        },\n        error: {\n          \"initial.dataset.errorBar2D\": function initialDatasetErrorBar2D() {\n            return {\n              \"path.appearing\": [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }]\n            };\n          }\n        }\n      };\n    },\n    835: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(836),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    836: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = o(551),\n          n = i(o(837));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.useErrorGroup = !0, o.isErrorChart = !0, o.hasAnchor = !0, o.defaultPlotShadow = 1, o.axisPaddingLeft = 0, o.axisPaddingRight = 0, o.canvasPaddingModifiers = [\"anchor\", \"errorbar\"], o;\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"ErrorLine\";\n        }, t.prototype.getName = function () {\n          return \"ErrorLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Error Line Chart\", t.defaultDatasetType = \"errorline\", r._setDefaultConfig.call(this), this.zeroplanethickness = 1, this.zeroplanealpha = 40, t.showzeroplaneontop = 0, t.defaultcrosslinethickness = 1, t.enablemousetracking = !0;\n        }, t.prototype.getDSGroupdef = function () {}, t.prototype.getDSdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    837: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(125),\n          r = o(833),\n          n = c(o(449)),\n          i = o(132),\n          l = c(o(838)),\n          s = c(o(839));\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = a.preDefStr.colors.AAAAAA,\n          h = a.preDefStr.ROUND,\n          d = a.preDefStr.PERCENTAGESTRING,\n          f = \"rgba(192,192,192,\" + (a.isIE ? .002 : 1e-6) + \")\",\n          g = Math,\n          m = g.round,\n          v = g.min,\n          b = g.max,\n          y = g.abs,\n          x = a.hasTouch ? a.TOUCH_THRESHOLD_PIXELS : a.CLICK_THRESHOLD_PIXELS;\n      (0, i.addDep)({\n        name: \"errorlineErrorAnimation\",\n        type: \"animationRule\",\n        extension: l[\"default\"]\n      }), (0, i.addDep)({\n        name: \"errorlineLineAnimation\",\n        type: \"animationRule\",\n        extension: s[\"default\"]\n      });\n\n      var k = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return u(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"errorLine\";\n        }, t.prototype.ErrorValueConfigure = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              h,\n              f,\n              g,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L = this.getFromEnv(\"chart\"),\n              P = this.config,\n              O = L.config,\n              V = P.parentYAxis,\n              M = P.JSONData,\n              F = M.data,\n              I = L.getFromEnv(\"dataSource\").chart,\n              B = this.getFromEnv(\"xAxis\").getTicksLen(),\n              R = this.components.data,\n              j = this.getFromEnv(\"number-formatter\"),\n              G = P.linethickness,\n              H = -Infinity,\n              W = Infinity,\n              z = (0, a.parseUnsafeString)(I.yaxisname),\n              U = (0, a.parseUnsafeString)(I.xaxisname),\n              J = (0, a.pluck)(I.tooltipsepchar, \", \"),\n              K = (0, a.pluckNumber)(I.seriesnameintooltip, 1),\n              q = function q(t) {\n            var r;\n            return O.showtooltip ? null === s ? r = !1 : void 0 !== t ? (S = [1, 2, 3, 4, 5, 6, 7, 99, 100, 101, 102], A = {\n              yaxisName: z,\n              xaxisName: U,\n              formattedValue: o.toolTipValue,\n              errorValue: l,\n              errorDataValue: o.errorToolTipValue,\n              errorPercentValue: o.errorPercentValue,\n              errorPercentDataValue: o.errorPercentValue,\n              label: o.label\n            }, r = (0, a.parseTooltext)(t, S, A, e, I, M)) : (K && (E = (0, a.getFirstValue)(M && M.seriesname)), r = E ? E + J : \"\", r += o.label ? o.label + J : \"\") : r = !1, r;\n          };\n\n          for (P.errorBarShadow = y = (0, a.pluckNumber)(I.errorbarshadow, I.showshadow, 1), P.ignoreEmptyDatasets = (0, a.pluckNumber)(M.ignoreemptydatasets, 0), P.notHalfErrorBar = !(0, a.pluckNumber)(I.halferrorbar, 1), n = (0, a.getFirstAlpha)((0, a.pluck)(M.errorbaralpha, I.errorbaralpha, P.alpha)), P.errorBarWidth = (0, a.pluckNumber)(M.errorbarwidth, I.errorbarwidth, 5), P.errorBarColor = (0, a.convertColor)((0, a.getFirstColor)((0, a.pluck)(M.errorbarcolor, I.errorbarcolor, p)), n), i = (0, a.pluckNumber)(M.errorbarthickness, I.errorbarthickness, 1), P.errorBarThickness = i > G ? G : i, P.shadowOpacity = y ? n / 250 : 0, P.errorInPercent = D = (0, a.pluckNumber)(M.errorinpercent, I.errorinpercent), P.cumulativeValueOnErrorBar = (0, a.pluckNumber)(M.cumulativevalueonerrorbar, I.cumulativevalueonerrorbar, 1), T = 0; T < B; T++) {\n            e = F && F[T], F && e && (t = R[T], o = t && t.config, t || (t = R[T] = {\n              graphics: {}\n            }), t.config || (o = R[T].config = {}), w = o.setValue, o.notHalfErrorBar = P.notHalfErrorBar, l = j.getCleanValue(e.errorvalue), o.errorToolTipValue = j.dataLabels(l, V), o.setErrorValue = o.errorValue = C = l, o.hasErrorValue = void 0 !== (0, a.pluckNumber)(e.errorvalue) ? 1 : 0, r = o.errorToolTipValue, s = r, _ = q(c = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, M.errorplottooltext, I.errorplottooltext, s)))), o.errorInPercent = (0, a.pluckNumber)(e.errorinpercent, D, 0), o.errorInPercent && (o.setErrorValue = l = (0, a.pluckNumber)((l / 100 * w).toFixed(2))), o.cumulativeValueOnErrorBar = N = (0, a.pluckNumber)(e.cumulativevalueonerrorbar, P.cumulativeValueOnErrorBar, 1), o.positiveErrorValue = j.getCleanValue((0, a.pluckNumber)(e.positiveerrorvalue, e.errorvalue)), o.errorInPercent && o.positiveErrorValue && (o.positiveErrorValue = (0, a.pluckNumber)((o.positiveErrorValue / 100 * w).toFixed(2))), o.positiveCumulativeErrorValue = w + (0, a.pluckNumber)(o.positiveErrorValue, o.setErrorValue), o.negativeErrorValue = j.getCleanValue((0, a.pluckNumber)(e.negativeerrorvalue, e.errorvalue)), o.errorInPercent && o.negativeErrorValue && (o.negativeErrorValue = (0, a.pluckNumber)((o.negativeErrorValue / 100 * w).toFixed(2))), o.negativeCumulativeErrorValue = w - (0, a.pluckNumber)(o.negativeErrorValue, o.setErrorValue), o.errorToolTipValue = j.dataLabels(l, V), o.negativeErrorToolTipValue = j.dataLabels(o.negativeErrorValue, V), o.negativeCumulativeErrorTooltipValue = j.dataLabels(o.negativeCumulativeErrorValue, V), o.positiveErrorToolTipValue = j.dataLabels(o.positiveErrorValue, V), o.positiveCumulativeErrorTooltipValue = j.dataLabels(o.positiveCumulativeErrorValue, V), o.errorPercentValue = m(l / w * a.HUNDREDSTRING * a.HUNDREDSTRING) / a.HUNDREDSTRING + d, f = g = void 0, (c = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, M.errorplottooltext, I.errorplottooltext, o.positiveErrorToolTipValue)))) && o.positiveErrorToolTipValue && (f = q(c)), (c = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, M.errorplottooltext, I.errorplottooltext, o.negativeErrorToolTipValue)))) && o.negativeErrorToolTipValue && (g = q(c)), (e.positiveerrorvalue || e.negativeerrorvalue) && (o.halfErrorBar = 0, o.notHalfErrorBar = !0), N && ((c = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, M.errorplottooltext, I.errorplottooltext, o.positiveCumulativeErrorTooltipValue)))) && o.positiveCumulativeErrorTooltipValue && (u = q(c)), (c = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(e.errorplottooltext, M.errorplottooltext, I.errorplottooltext, o.negativeCumulativeErrorTooltipValue)))) && o.negativeCumulativeErrorTooltipValue && (h = q(c))), x = w + (null !== o.positiveErrorValue ? o.positiveErrorValue : l), k = w - (o.halfErrorBar ? 0 : o.negativeErrorValue < 0 && w < 0 ? 0 : null !== o.negativeErrorValue ? o.negativeErrorValue : l), H = b(H, x, k), W = v(W, x, k), null === l && (l = void 0), o.errorValueArr = [], null === o.positiveErrorValue && (o.positiveErrorValue = void 0), C = -o.positiveErrorValue, o.errorValueArr.push({\n              errorValue: C,\n              tooltext: N ? u : f || _,\n              errorEdgeBar: !0\n            }), o.errorValueArr.push({\n              errorValue: C,\n              tooltext: f || _\n            }), o.notHalfErrorBar && (C = o.negativeErrorValue, o.errorValueArr.push({\n              errorValue: C,\n              tooltext: N ? h : g || _,\n              errorEdgeBar: !0\n            }), o.errorValueArr.push({\n              errorValue: C,\n              tooltext: g || _\n            })), o.toolText = q(o.setTooltext));\n          }\n\n          P.maxValue = H, P.minValue = W;\n        }, t.prototype._show = function () {\n          var e = this.chart,\n              t = this.yAxis,\n              o = this.graphics && this.graphics.container,\n              a = this.graphics && this.graphics.dataLabelContainer,\n              r = this.graphics && this.graphics.errorGroupContainer,\n              n = this.graphics && this.graphics.errorShadowContainer;\n          e._chartAnimation(), o.lineGroup.show(), o.anchorGroup.show(), o.anchorShadowGroup.show(), o.lineShadowGroup.show(), a.show(), this.setState(\"visible\", !0), r && r.show(), n && n.show(), this._conatinerHidden = !1, e._setAxisLimits(), t.draw(), e._drawDataset();\n        }, t.prototype._hide = function () {\n          var e = this.chart,\n              t = this.yAxis;\n          e._chartAnimation(), this.setState(\"visible\", !1), e._setAxisLimits(), t.draw(), e._drawDataset();\n        }, t.prototype.draw = function () {\n          e.prototype.draw.call(this), this.drawErrorValue();\n        }, t.prototype.drawErrorValue = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              d,\n              g,\n              v,\n              b,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L = this.config,\n              P = this.getFromEnv(\"xAxis\").getTicksLen(),\n              O = this.getState(\"visible\"),\n              V = this.getFromEnv(\"yAxis\"),\n              M = this.components.data,\n              F = L.errorBarThickness,\n              I = L.errorBarWidth,\n              B = L.errorBarColor,\n              R = L.shadowOpacity,\n              j = this.getContainer(\"errorPlotGroup\"),\n              G = this.getContainer(\"errorShadowGroup\"),\n              H = F > 5 ? F / 2 : 2.5,\n              W = this.getFromEnv(\"animationManager\"),\n              z = function z(e) {\n            return function () {\n              \"disappearing\" === e && this.hide();\n            };\n          };\n\n          for (t = 0; t < P; t++) {\n            if (c = (u = (s = M[t]) && s.config) && u.setValue, void 0 !== s && void 0 !== c && null !== c) {\n              if ((T = s.errorTrackerConfig = {}).errorTrackerArr = [], k = u.errorValueArr, T.errorLen = S = k.length, !s.graphics.error && (s.graphics.error = []), !s.graphics.errorTracker && (s.graphics.errorTracker = []), \"\" === u.errorValue || void 0 === u.errorValue || null === u.errorValue && null === u.positiveErrorValue && null === u.negativeErrorValue) for (a = 0; a < S; a++) {\n                s.graphics.error && s.graphics.error[a] && W.setAnimation({\n                  el: s.graphics.error[a] || \"path\",\n                  label: \"path\",\n                  component: this,\n                  callback: z(\"disappearing\")\n                }).shadow({\n                  opacity: 0\n                });\n              } else {\n                for (n = u.setLink, D = s._xPos, l = _ = s._yPos, i = D, s.errorBar && delete s.errorBar, s.errorBar = []; S--;) {\n                  E = null, T.errorTrackerArr[S] = {}, w = k[S], T.errorTrackerArr[S].tooltext = w.tooltext, N = l, null === (C = w.errorValue) || isNaN(C) ? s.graphics.error && s.graphics.error[S] && (s.graphics.error[S].hide(), s.graphics.error[S].shadow({\n                    opacity: 0\n                  })) : (A = I / 2, b = O ? 1 : 0, p = v = _ + (V.getPixel(0) - V.getPixel(1)) * C * b, d = i, p = m(v) + F % 2 / 2, d = m(i) + F % 2 / 2, s.errorBar[S] || (s.errorBar[S] = []), w.errorEdgeBar ? (g = [\"M\", d - A, p, \"H\", d + A], s.errorBar[S][1] = {\n                    _xPos: d - A - H,\n                    _yPos: p - H,\n                    _height: 2 * H,\n                    _width: 2 * (A + H),\n                    _toolText: w.tooltext\n                  }) : (g = [\"M\", d, N, \"V\", p], s.errorBar[S][0] = {\n                    _xPos: d - H,\n                    _yPos: p < N ? p : N,\n                    _height: y(N - p),\n                    _width: 2 * H,\n                    _toolText: w.tooltext\n                  }), e = {\n                    path: g,\n                    stroke: B,\n                    \"stroke-width\": F,\n                    cursor: n ? \"pointer\" : \"\",\n                    \"stroke-linecap\": h\n                  }, r = !s.graphics.error[S] && O ? \"appearing\" : O ? \"updating\" : \"disappearing\", E = s.graphics.error[S] = W.setAnimation({\n                    el: s.graphics.error[S] || \"path\",\n                    state: r,\n                    attr: e,\n                    label: \"path\",\n                    component: this,\n                    container: j,\n                    callback: z(r)\n                  }), \"disappearing\" !== r && E.show(), E && E.shadow({\n                    opacity: R\n                  }, G), T.errorTrackerArr[S].attr = {\n                    path: g,\n                    stroke: f,\n                    \"stroke-width\": F < x ? x : F,\n                    cursor: n ? \"pointer\" : \"\"\n                  });\n                }\n\n                if (!u.notHalfErrorBar) for (a = 2; a < 4; a++) {\n                  s.graphics.error && s.graphics.error[a] && W.setAnimation({\n                    el: s.graphics.error[a] || \"path\",\n                    label: \"path\",\n                    component: this,\n                    doNotRemove: !0,\n                    callback: z(\"disappearing\")\n                  }).shadow({\n                    opacity: 0\n                  });\n                }\n              }\n            } else if (s && s.graphics.error) for (o = 0; o < s.graphics.error.length; o++) {\n              s.graphics.error && s.graphics.error[o] && W.setAnimation({\n                el: s.graphics.error[o] || \"path\",\n                label: \"path\",\n                component: this,\n                doNotRemove: !0,\n                callback: z(\"disappearing\")\n              }).shadow({\n                opacity: 0\n              });\n            }\n          }\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          r._firePlotEvent.call(this, e, t, o);\n        }, t.prototype._checkPointerOverErrorBar = function (e, t, o) {\n          return r._checkPointerOverErrorBar.call(this, e, t, o);\n        }, t.prototype._checkPointerOverPlot = function (e, t, o) {\n          var a,\n              r = this.components.data[e],\n              n = r && r.config;\n          if (r) return (a = this.isWithinShape(r, e, t, o)) ? (r.errorBarHovered = !1, n.finalTooltext = !1 !== n.toolText && n.toolText) : (a = this._checkPointerOverErrorBar(e, t, o)) && (r.errorBarHovered = !0, n.finalTooltext = a.toolText), a;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          return r._getHoveredPlot.call(this, e, t);\n        }, t.prototype.getCanvasPadding = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l = .5 * this.config.errorBarWidth,\n              s = this.components || {},\n              c = this.getFromEnv(\"chart\"),\n              u = c.config.dataLabelStyle,\n              p = s.data || [],\n              h = p[0],\n              d = p[p.length - 1],\n              f = {},\n              g = c.getFromEnv(\"smartLabel\"),\n              m = {\n            paddingLeft: 0,\n            paddingRight: 0\n          };\n          return h && (i = (e = h.config).showValue, o = e && e.anchorProps || {}, i && (t = e.displayValue, g.useEllipsesOnOverflow(c.config.useEllipsesWhenOverflow), g.setStyle(u), f = g.getOriSize(t)), e.setValue && (r = b((0, a.pluckNumber)(o.radius, 0), l) + (0, a.pluckNumber)(o.borderThickness, 0), n = (f.width || 0) / 2), m.paddingLeft = b(r, n)), d && (i = (e = d.config).showValue, o = e && e.anchorProps || {}, i && (t = e.displayValue, g.setStyle(u), f = g.getOriSize(t)), e.setValue && (r = b((0, a.pluckNumber)(o.radius, 0), l) + (0, a.pluckNumber)(o.borderThickness, 0), n = (f.width || 0) / 2), m.paddingRight = b(r, n)), m;\n        }, t.prototype.removePlots = function () {\n          r.removePlots.call(this);\n        }, t;\n      }(n[\"default\"]);\n\n      t[\"default\"] = k;\n    },\n    838: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.errorLine\": function initialDatasetErrorLine() {\n          return {\n            \"path.appearing\": function pathAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                startEnd: {\n                  start: .5,\n                  end: 1\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"*\": null\n          };\n        }\n      };\n    },\n    839: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.errorLine\": n[\"default\"][\"*.dataset.line\"]\n      };\n    },\n    840: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(841),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    841: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = n(o(534)),\n          r = n(o(842));\n\n      function n(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function i(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var l = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.isXY = !0, o.defaultZeroPlaneHighlighted = !1, o.useErrorGroup = !0, o.isErrorChart = !0, o.hasAnchor = !0, o.initAnimation = !0, o;\n        }\n\n        return i(t, e), t.getName = function () {\n          return \"ErrorScatter\";\n        }, t.prototype.getName = function () {\n          return \"ErrorScatter\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Error Scatter Chart\", t.defaultDatasetType = \"errorscatter\", t.enablemousetracking = !0;\n        }, t.prototype.getDSGroupdef = function () {}, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = l;\n    },\n    842: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = c(o(538)),\n          r = o(125),\n          n = c(o(539)),\n          i = o(132),\n          l = c(o(843)),\n          s = c(o(844));\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = r.preDefStr.colors.AAAAAA,\n          h = r.preDefStr.ROUND,\n          d = r.preDefStr.PERCENTAGESTRING,\n          f = \"M\";\n      (0, i.addDep)({\n        name: \"errorscatterAnimation\",\n        type: \"animationRule\",\n        extension: l[\"default\"]\n      }), (0, i.addDep)({\n        name: \"errorscatterErrorAnimation\",\n        type: \"animationRule\",\n        extension: s[\"default\"]\n      });\n\n      var g = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return u(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"errorScatter\";\n        }, t.prototype.ErrorValueConfigure = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              h,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H,\n              W,\n              z,\n              U,\n              J,\n              K,\n              q,\n              Y,\n              X,\n              Q,\n              Z,\n              $,\n              ee,\n              te,\n              oe = this.getFromEnv(\"chart\"),\n              ae = this.config,\n              re = ae.JSONData,\n              ne = this.getFromEnv(\"dataSource\").categories && this.getFromEnv(\"dataSource\").categories[0].category,\n              ie = this.getFromEnv(\"chart-attrib\"),\n              le = re.data,\n              se = le && le.length || 0,\n              ce = this.components.data,\n              ue = this.getFromEnv(\"number-formatter\"),\n              pe = (0, r.pluck)(ie.tooltipsepchar, \", \"),\n              he = (0, r.parseUnsafeString)(ie.yaxisname),\n              de = (0, r.parseUnsafeString)(ie.xaxisname),\n              fe = ae.parentYAxis,\n              ge = -Infinity,\n              me = +Infinity,\n              ve = ge,\n              be = me,\n              ye = me,\n              xe = ge,\n              ke = function ke(t, a) {\n            var n;\n            return ae.showTooltip ? null === C ? n = !1 : void 0 !== t ? (E = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], D = {\n              yaxisName: he,\n              xaxisName: de,\n              yDataValue: C,\n              xDataValue: o.label,\n              formattedValue: o.toolTipValue,\n              horizontalErrorValue: b,\n              horizontalErrorDataValue: x,\n              verticalErrorValue: y,\n              verticalErrorDataValue: k,\n              horizontalErrorPercentValue: S,\n              verticalErrorPercentValue: A,\n              label: o.label,\n              errorValue: a,\n              errorDataValue: a,\n              errorPercentValue: o.errorPercentValue,\n              errorPercentDataValue: o.errorPercentValue\n            }, n = (0, r.parseTooltext)(t, E, D, e, ie, re)) : null === C ? n = !1 : (ae.seriesNameInTooltip && (_ = (0, r.getFirstValue)(re && re.seriesname)), n = _ ? _ + pe : \"\", n += w.x ? ue.xAxis(w.x) + pe : \"\", n += o.toolTipValue) : n = !1, n;\n          };\n\n          for (ae.errorBarShadow = n = (0, r.pluckNumber)(ie.errorbarshadow, ie.showshadow, 0), ae.ignoreEmptyDatasets = (0, r.pluckNumber)(re.ignoreemptydatasets, 0), ae.notHalfErrorBar = !(0, r.pluckNumber)(ie.halferrorbar, 1), ae.errorBarAlpha = (0, r.getFirstAlpha)((0, r.pluck)(re.errorbaralpha, ie.errorbaralpha)), ae.errorBarWidth = i = (0, r.pluckNumber)(re.errorbarwidth, ie.errorbarwidth, 5), ae.errorBarColor = l = (0, r.convertColor)((0, r.getFirstColor)((0, r.pluck)(re.errorbarcolor, ie.errorbarcolor, p)), void 0), ae.errorBarThickness = a = (0, r.pluckNumber)(re.errorbarthickness, ie.errorbarthickness, 1), ae.shadowOpacity = n ? NaN : 0, ae.halfHorizontalErrorBar = s = (0, r.pluckNumber)(ie.halfhorizontalerrorbar, 1), ae.halfVerticalErrorBar = c = (0, r.pluckNumber)(ie.halfverticalerrorbar, 1), void 0 === ae.initAnimation && (ae.initAnimation = oe.initAnimation), u = (0, r.pluck)(re.horizontalerrorbaralpha, re.errorbaralpha, ie.horizontalerrorbaralpha, void 0), h = (0, r.pluckNumber)(re.verticalerrorbaralpha, re.errorbaralpha, ie.verticalerrorbaralpha, void 0), f = (0, r.convertColor)((0, r.pluck)(re.horizontalerrorbarcolor, re.errorbarcolor, ie.horizontalerrorbarcolor, l), u), g = (0, r.convertColor)((0, r.pluck)(re.verticalerrorbarcolor, re.errorbarcolor, ie.verticalerrorbarcolor, l), h), m = (0, r.pluckNumber)(re.horizontalerrorbarthickness, re.errorbarthickness, ie.horizontalerrorbarthickness, a), v = (0, r.pluckNumber)(re.verticalerrorbarthickness, re.errorbarthickness, ie.verticalerrorbarthickness, a), ae.horizontalErrorBarWidth = (0, r.pluckNumber)(re.horizontalerrorbarwidth, ie.horizontalerrorbarwidth, i), ae.verticalErrorBarWidth = (0, r.pluckNumber)(re.verticalerrorbarwidth, ie.verticalerrorbarwidth, i), ae.cumulativeValueOnErrorBar = (0, r.pluckNumber)(re.cumulativevalueonerrorbar, ie.cumulativevalueonerrorbar, 1), te = 0; te < se; te++) {\n            le && (e = le && le[te], t = ce[te], o = t && t.config, t || (t = ce[te] = {\n              graphics: {}\n            }), t.config || (o = ce[te].config = {}), w = o.setValue, o.errorValue = e.errorvalue, o.cumulativeValueOnErrorBar = Z = (0, r.pluckNumber)(e.cumulativevalueonerrorbar, ae.cumulativeValueOnErrorBar, 1), o.hErrorValue = b = ue.getCleanValue((0, r.pluck)(e.horizontalerrorvalue, e.errorvalue)), x = ue.xAxis(b), o.vErrorValue = y = ue.getCleanValue((0, r.pluck)(e.verticalerrorvalue, e.errorvalue)), k = ue.dataLabels(y), o.hPositiveErrorValue = F = ue.getCleanValue((0, r.pluck)(e.horizontalpositiveerrorvalue, e.positiveerrorvalue, b)), o.hNegativeErrorValue = M = ue.getCleanValue((0, r.pluck)(e.horizontalnegativeerrorvalue, e.negativeerrorvalue, b)), o.vPositiveErrorValue = V = ue.getCleanValue((0, r.pluck)(e.verticalpositiveerrorvalue, e.positiveerrorvalue, y)), o.vNegativeErrorValue = J = ue.getCleanValue((0, r.pluck)(e.verticalnegativeerrorvalue, e.negativeerrorvalue, y)), S = Math.round(b / w.x * r.HUNDREDSTRING * r.HUNDREDSTRING) / r.HUNDREDSTRING + d, A = Math.round(y / w.y * r.HUNDREDSTRING * r.HUNDREDSTRING) / r.HUNDREDSTRING + d, B = ue.dataLabels(F, fe), I = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, B))), G = ue.dataLabels(M, fe), z = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, G))), W = ue.dataLabels(V, fe), Y = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, W))), ee = ue.dataLabels(J, fe), $ = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, ee))), R = X = Q = K = void 0, Z && (j = ue.dataLabels(w.x + F, fe), R = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, j))), H = ue.dataLabels(w.x - M, fe), X = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, H))), U = ue.dataLabels(w.y + V, fe), Q = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, U))), q = ue.dataLabels(w.y - J, fe), K = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(e.errorplottooltext, re.errorplottooltext, ie.errorplottooltext, q)))), ne && ne[te] && (o.label = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(ne[te].tooltext, ne[te].label)))), e.horizontalpositiveerrorvalue || e.positiveerrorvalue || e.horizontalnegativeerrorvalue || e.negativeerrorvalue ? o.halfHorizontalErrorBar = s = 0 : o.halfHorizontalErrorBar = s = ae.halfHorizontalErrorBar, e.verticalpositiveerrorvalue || e.positiveerrorvalue || e.verticalnegativeerrorvalue || e.negativeerrorvalue ? o.halfVerticalErrorBar = c = 0 : o.halfVerticalErrorBar = c = ae.halfVerticalErrorBar, null !== w.x && (T = w.x + Number(F), L = w.x - (s ? 0 : Number(M)), xe = Math.max(xe, T, L), ye = Math.min(ye, T, L)), null !== w.y && (T = w.y + Number(V), L = w.y - (c ? 0 : Number(J)), ve = Math.max(ve, T, L), be = Math.min(be, T, L)), o.useHorizontalErrorBar = (0, r.pluckNumber)(e.usehorizontalerrorbar, re.usehorizontalerrorbar, ie.usehorizontalerrorbar, 0), o.useVerticalErrorBar = (0, r.pluckNumber)(e.useverticalerrorbar, re.useverticalerrorbar, ie.useverticalerrorbar, 1), o.errorValueConf = {}, (P = o.errorValueConf.horizontal = {}).mandatory = {}, P.mandatory.marker = {\n              errorValue: -(null === F ? void 0 : F),\n              tooltext: ke(I, B),\n              errorBarColor: f,\n              isHorizontal: !0,\n              errorBarThickness: m,\n              shadowOpacity: n ? u / 250 : 0\n            }, P.mandatory.limit = {\n              errorValue: -(null === F ? void 0 : F),\n              tooltext: Z ? ke(R, j) : ke(I, B),\n              errorBarColor: f,\n              isHorizontal: !0,\n              errorBarThickness: m,\n              shadowOpacity: n ? u / 250 : 0,\n              errorEdgeBar: !0\n            }, P.optional = {}, P.optional.marker = {\n              errorValue: M,\n              tooltext: ke(z, G),\n              errorBarColor: f,\n              isHorizontal: !0,\n              errorBarThickness: m,\n              shadowOpacity: n ? u / 250 : 0\n            }, P.optional.limit = {\n              errorValue: M,\n              tooltext: Z ? ke(X, H) : ke(z, G),\n              errorBarColor: f,\n              isHorizontal: !0,\n              errorBarThickness: m,\n              shadowOpacity: n ? u / 250 : 0,\n              errorEdgeBar: !0\n            }, (O = o.errorValueConf.vertical = {}).mandatory = {}, O.mandatory.marker = {\n              errorValue: -(null === V ? void 0 : V),\n              tooltext: ke(Y, W),\n              errorBarColor: g,\n              errorBarThickness: v,\n              shadowOpacity: n ? h / 250 : 0\n            }, O.mandatory.limit = {\n              errorValue: -(null === V ? void 0 : V),\n              tooltext: Z ? ke(Q, U) : ke(Y, W),\n              errorBarColor: g,\n              errorBarThickness: v,\n              shadowOpacity: n ? h / 250 : 0,\n              errorEdgeBar: !0\n            }, O.optional = {}, O.optional.marker = {\n              errorValue: J,\n              tooltext: ke($, ee),\n              errorBarColor: g,\n              errorBarThickness: v,\n              shadowOpacity: n ? h / 250 : 0\n            }, O.optional.limit = {\n              errorValue: J,\n              tooltext: Z ? ke(K, q) : ke($, ee),\n              errorBarColor: g,\n              errorBarThickness: v,\n              shadowOpacity: n ? h / 250 : 0,\n              errorEdgeBar: !0\n            }, w = o.setValue, C = o.formatedVal, ae.showTooltip ? void 0 !== o.setTooltext ? (E = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], D = {\n              yaxisName: he,\n              xaxisName: de,\n              yDataValue: C,\n              xDataValue: o.label,\n              formattedValue: o.toolTipValue,\n              horizontalErrorValue: b,\n              horizontalErrorDataValue: x,\n              verticalErrorValue: y,\n              verticalErrorDataValue: k,\n              horizontalErrorPercentValue: S,\n              verticalErrorPercentValue: A,\n              label: o.label,\n              errorValue: o.errorValue,\n              errorDataValue: ue.dataLabels(o.errorValue, ae.parentYAxis)\n            }, N = (0, r.parseTooltext)(o.setTooltext, E, D, e, ie, re)) : null === C ? N = !1 : (ae.seriesNameInTooltip && (_ = (0, r.getFirstValue)(re && re.seriesname)), N = _ ? _ + pe : \"\", N += w.x ? ue.xAxis(w.x) + pe : \"\", N += o.toolTipValue) : N = !1, o.toolText = N);\n          }\n\n          ae.xMax = xe, ae.xMin = ye, ae.yMin = be, ae.yMax = ve;\n        }, t.prototype.drawErrorValue = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              d,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H,\n              W,\n              z,\n              U,\n              J = this.config.JSONData,\n              K = this.config,\n              q = J.data,\n              Y = q && q.length,\n              X = this.getState(\"visible\"),\n              Q = this.getFromEnv(\"xAxis\"),\n              Z = this.getFromEnv(\"yAxis\"),\n              $ = this.components.data,\n              ee = K.shadowOpacity,\n              te = this.getContainer(\"errorPlotGroup\"),\n              oe = this.getContainer(\"errorShadowGroup\"),\n              ae = this.getFromEnv(\"animationManager\"),\n              re = [],\n              ne = function ne(e) {\n            return function () {\n              \"disappearing\" === e && this.hide();\n            };\n          };\n\n          for (t = 0; t < Y; t++) {\n            if ((U = (d = $[t]).errorTrackerConfig = {}).errorTrackerArr = [], g = (v = d && d.config) && v.setValue, G = v.errorValueConf, void 0 !== d && void 0 !== g && null !== g && G) {\n              if (z = Object.keys(a = d.graphics), null === v.vErrorValue && null === v.vPositiveErrorValue && null === v.vNegativeErrorValue) for (j = 0; j < z.length; j++) {\n                z[j].match(/error-horizontal-/) && (ae.setAnimation({\n                  el: a[z[j]],\n                  state: \"disappearing\",\n                  callback: ne(\"disappearing\")\n                }), a[z[j]].shadow({\n                  opacity: 0\n                }));\n              }\n              if (null === v.hErrorValue && null === v.hPositiveErrorValue && null === v.vPositiveErrorValue) for (j = 0; j < z.length; j++) {\n                z[j].match(/error-vertical-/) && (ae.setAnimation({\n                  el: a[z[j]],\n                  state: \"disappearing\",\n                  callback: ne(\"disappearing\")\n                }), a[z[j]].shadow({\n                  opacity: 0\n                }));\n              }\n              if (!(null === v.hErrorValue && null === v.vErrorValue && v.hPositiveErrorValue && v.hNegativeErrorValue && v.vPositiveErrorValue && v.vNegativeErrorValue)) for (H in c = v.setLink, F = d._xPos, p = d._yPos, u = F, G) {\n                if (G.hasOwnProperty(H)) for (E in D = G[H]) {\n                  if (D.hasOwnProperty(E)) for (L in _ = D[E]) {\n                    if (_.hasOwnProperty(L)) {\n                      if (m = void 0, T = _[L], e = {}, M = null, (U.errorTrackerArr[0] = {}).tooltext = T.tooltext, O = p, P = T.errorValue, b = !v.useHorizontalErrorBar && \"horizontal\" === H, y = !v.useVerticalErrorBar && \"vertical\" === H, x = v.halfHorizontalErrorBar && \"horizontal\" === H && \"optional\" === E, k = v.halfVerticalErrorBar && \"vertical\" === H && \"optional\" === E, b || y || x || k) m = \"disappearing\";else if (null === P || void 0 === P || isNaN(P)) m = \"disappearing\";else {\n                        if (s = T.errorBarColor, r = T.isHorizontal, i = T.errorBarThickness, l = r ? K.horizontalErrorBarWidth : K.verticalErrorBarWidth, V = X ? l / 2 : 0, A = X ? -1 : 0, W = i > 5 ? i / 2 + .5 : 2.75, r) {\n                          if (w = S = Q.getPixel(d.config._x + P * A), C = u, w = Math.round(O) + i % 2 / 2, C = Math.round(S) + i % 2 / 2, T.errorEdgeBar) for (N = [f, C, w - V, \"V\", w + V], I = 2 * V, B = w - V, R = W; R < I; R += 2 * W) {\n                            re.push({\n                              x: C,\n                              y: B + R,\n                              r: W,\n                              index: t,\n                              data: d,\n                              toolText: T.tooltext,\n                              barType: \"h\"\n                            });\n                          } else for (N = [f, u, w, \"H\", C], I = Math.abs(u - C), B = u > C ? C : u, R = W; R < I; R += 2 * W) {\n                            re.push({\n                              x: B + R,\n                              y: w,\n                              r: W,\n                              index: t,\n                              data: d,\n                              toolText: T.tooltext,\n                              barType: \"h\"\n                            });\n                          }\n                        } else if (w = S = Z.getPixel(d.config._y + P * A), C = u, w = Math.round(S) + i % 2 / 2, C = Math.round(u) + i % 2 / 2, T.errorEdgeBar) for (N = [f, C - V, w, \"H\", C + V], I = 2 * V, B = C - V, R = W; R <= I; R += 2 * W) {\n                          re.push({\n                            x: B + R,\n                            y: w,\n                            r: W,\n                            index: t,\n                            data: d,\n                            toolText: T.tooltext,\n                            barType: \"v\"\n                          });\n                        } else for (N = [f, C, O, \"V\", w], I = Math.abs(O - w), B = O > w ? w : O, R = W; R <= I; R += 2 * W) {\n                          re.push({\n                            x: C,\n                            y: B + R,\n                            r: W,\n                            index: t,\n                            data: d,\n                            toolText: T.tooltext,\n                            barType: \"v\"\n                          });\n                        }\n                        e = {\n                          path: N,\n                          \"stroke-width\": X ? i : 0,\n                          stroke: s,\n                          cursor: c ? \"pointer\" : \"\",\n                          \"stroke-linecap\": h\n                        };\n                      }\n                      o = [\"error\", H, E, L].join(\"-\"), m || (m = a[o] ? \"updating\" : \"appearing\"), (a[o] || \"disappearing\" !== m) && (M = a[o] = ae.setAnimation({\n                        el: a[o] || \"path\",\n                        container: te,\n                        component: this,\n                        attr: e,\n                        state: m,\n                        label: \"path\",\n                        callback: ne(m)\n                      }), \"disappearing\" !== m && M.show(), M.shadow({\n                        opacity: \"disappearing\" === m ? 0 : ee\n                      }, oe));\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          re.length && (this.config.dataTreeB = new n[\"default\"]().buildKdTree(re)), K.initAnimation = !1;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o, a, r, n, i, l;\n          return (o = this.config.dataTree.getNeighbour({\n            x: e,\n            y: t\n          }, !0)) ? (r = o.data.config.toolText, o.data.config.finalTooltext = r, i = o.data.config.hoverEffects, (l = o.data.graphics.element).data(\"hoverEnabled\", i.enabled), i.enabled && l.attr(l.getData().setRolloverAttr), {\n            pointIndex: o.index,\n            hovered: !0,\n            pointObj: o.data\n          }) : (a = this.config.dataTreeB && this.config.dataTreeB.getNeighbour({\n            x: e,\n            y: t\n          }, !0)) ? (\"h\" === a.barType ? n = a.toolText : \"v\" === a.barType && (n = a.toolText), a.data.config.finalTooltext = n, (l = a.data.graphics.element).data(\"hoverEnabled\", !1), l.attr(l.getData().setRolloutAttr), {\n            pointIndex: a.index,\n            hovered: !0,\n            pointObj: a.data\n          }) : void 0;\n        }, t.prototype.removePlots = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.components,\n              n = r.removeDataArr,\n              i = r.pool || (r.pool = {\n            element: [],\n            hotElement: [],\n            label: []\n          }),\n              l = this.getFromEnv(\"animationManager\"),\n              s = n.length,\n              c = function c() {\n            this.hide(), this.shadow({\n              opacity: 0\n            });\n          };\n\n          for (o = 0; o < s; o++) {\n            if (e = n[0], n.splice(0, 1), e && e.graphics) {\n              for (a in t = e.graphics) {\n                t.hasOwnProperty(a) && l.setAnimation({\n                  el: t[a],\n                  component: this,\n                  attr: {},\n                  state: \"disappering\",\n                  callback: c\n                });\n              }\n\n              e.graphics.element && (i.element = i.element.concat(e.graphics.element)), e.graphics.label && (i.label = i.label.concat(e.graphics.label));\n            }\n          }\n\n          r.pool = i;\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = g;\n    },\n    843: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.dataset.errorScatter\": n[\"default\"][\"initial.dataset.line\"]\n      };\n    },\n    844: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(839),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.dataset.errorScatter\": n[\"default\"][\"initial.dataset.errorLine\"]\n      };\n    },\n    845: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(846),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    846: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = i(o(450)),\n          n = o(551);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"InverseMSArea\";\n        }, t.prototype.getName = function () {\n          return \"InverseMSArea\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Inverted Y-Axis Multi-series Area Chart\", t.defaultDatasetType = \"area\", t.isInverse = !0, t.zeroplanethickness = 2, t.zeroplanealpha = 80, t.showzeroplaneontop = 1, t.enablemousetracking = !0, t.defaultcrosslinethickness = 1, n._setDefaultConfig.call(this);\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSGroupdef = function () {}, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    847: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(848),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    848: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = i(o(432)),\n          n = i(o(516));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"InverseMSColumn2d\";\n        }, t.prototype.getName = function () {\n          return \"InverseMSColumn2d\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Inverted Y-Axis Multi-series Column Chart\", t.defaultDatasetType = \"column\", t.isInverse = !0, t.enablemousetracking = !0;\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSGroupdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    849: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(850),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    850: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = i(o(449)),\n          n = o(551);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.defaultPlotShadow = 1, o;\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"InverseMSLine\";\n        }, t.prototype.getName = function () {\n          return \"InverseMSLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Inverted Y-Axis Multi-series Line Chart\", t.defaultDatasetType = \"line\", t.isInverse = !0, t.zeroplanethickness = 1, t.zeroplanealpha = 4, t.showzeroplaneontop = 0, t.enablemousetracking = !0, t.defaultcrosslinethickness = 1, n._setDefaultConfig.call(this);\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSGroupdef = function () {}, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    851: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(852),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    852: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(853)),\n          r = s(o(856)),\n          n = s(o(858)),\n          i = s(o(859)),\n          l = s(o(861));\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.registerFactory(\"limitUpdater\", i[\"default\"], [\"axis\"]), o.registerFactory(\"dragTracker\", l[\"default\"], [\"canvas\"]), o;\n        }\n\n        return c(t, e), t.prototype.getName = function () {\n          return \"DragColumn2D\";\n        }, t.getName = function () {\n          return \"DragColumn2D\";\n        }, t.prototype.getDSGroupdef = function () {\n          return n[\"default\"];\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this), this.config.isDrag = !0;\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = u;\n    },\n    853: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = c(o(518)),\n          r = o(125),\n          n = o(132),\n          i = c(o(854)),\n          l = o(136),\n          s = o(855);\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = (0, n.getDepsByType)(\"transcoder\"),\n          h = r.preDefStr.UNDERSCORE,\n          d = r.BLANKSTRING,\n          f = 0,\n          g = function g(e) {\n        var t = e.sender.apiInstance,\n            o = t.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0],\n            a = t.config,\n            r = void 0,\n            n = e.data,\n            i = n && n.endValue,\n            l = n && n.startValue;\n        (i > a.yMax || i < a.yMin || l === a.yMin || l === a.yMax) && (r = o.getDataLimits(), a.yMax = r.max, a.yMin = r.min);\n      },\n          m = function m(e) {\n        return e.toString().toLowerCase();\n      },\n          v = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.eiMethods.getDataWithId = function () {\n            for (var e, t, o, a, r, n, i, l, s, c, u = this.apiInstance && this.apiInstance.getJSONData(), p = [[d]], f = u.dataset, g = u.categories && u.categories[0] && u.categories[0].category, m = f && f.length || 0, v = 0; m--;) {\n              if (r = f[m]) for (p[0][m + 1] = r.id || r.seriesname, i = r.id || m + 1, c = (a = r.data) && a.length || 0, s = 0; s < c; s += 1) {\n                if (!p[n = s + 1]) {\n                  for (o = g && g[s + v] || {}; o.vline;) {\n                    o = g[s + (v += 1)] || {};\n                  }\n\n                  t = o.label || o.name || d, p[n] = [t];\n                }\n\n                e = p[n], l = a[s].id || n + h + i, e[m + 1] = [l, Number(a[s].value)];\n              }\n            }\n\n            return p;\n          }, o.eiMethods.getData = function (e) {\n            var t,\n                o,\n                a = this.apiInstance && this.apiInstance.getJSONData(),\n                r = a.dataset,\n                n = r && r.length || 0,\n                l = 0;\n            if (e) o = m(e), t = /^json$/gi.test(o) ? a : p[o]().fromJSON(a, this).data;else for ((t = i[\"default\"].call(this.apiInstance)).unshift([d]); l < n;) {\n              t[0][l + 1] = r[l++].seriesname;\n            }\n            return t;\n          }, o.eiMethods.setUpperLimit = function (e, t) {\n            var o,\n                a = this.apiInstance;\n            if (!t) return a.changeUpperLimits(e);\n            a.addJob(\"setUpperLimitId\" + f++, function () {\n              o = a.changeUpperLimits(e), \"function\" == typeof t && t(o);\n            }, l.priorityList.postRender);\n          }, o.eiMethods.setLowerLimit = function (e, t) {\n            var o,\n                a = this.apiInstance;\n            if (!t) return a.changeLowerLimits(e);\n            a.addJob(\"setLowerLimitId\" + f++, function () {\n              o = a.changeLowerLimits(e), \"function\" == typeof t && t(o);\n            }, l.priorityList.postRender);\n          }, o.eiMethods.getLowerLimit = function (e) {\n            var t = this.apiInstance,\n                o = t.getChildren(\"yAxis\")[0];\n\n            if (o) {\n              if (!e) return o.config.axisRange.min;\n              t.addJob(\"getLowerLimitId\" + f++, function () {\n                \"function\" == typeof e && e(o.config.axisRange.min);\n              }, l.priorityList.postRender);\n            }\n          }, o.eiMethods.getUpperLimit = function (e) {\n            var t = this.apiInstance,\n                o = t.getChildren(\"yAxis\")[0];\n\n            if (o) {\n              if (!e) return o.config.axisRange.max;\n              t.addJob(\"getUpperLimitId\" + f++, function () {\n                \"function\" == typeof e && e(o.config.axisRange.max);\n              }, l.priorityList.postRender);\n            }\n          }, o;\n        }\n\n        return u(t, e), t.prototype.getName = function () {\n          return \"DragBase\";\n        }, t.prototype.configureAttributes = function (t) {\n          e.prototype.configureAttributes.call(this, t), \"DragNode\" !== this.getName() && this.getFromEnv(\"chartInstance\").addEventListener(\"dataplotdragend\", g);\n        }, t.prototype.mouseoutHandler = function (e, t, o) {\n          var a = this.config.datasetOrder || this.getDatasets(),\n              n = this.getChildren(\"mouseTracker\")[0];\n          a[t] && a[t].components.data[o] ? a[t]._firePlotEvent(r.MOUSEOUT, o, e) : this.getFromEnv(\"toolTipController\").hideAll(), delete n._lastDatasetIndex, delete n._lastPointIndex;\n        }, t.getName = function () {\n          return \"DragBase\";\n        }, t.prototype._mouseEvtHandler = function (e, t) {\n          var o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u = this,\n              p = t.mouseTracker,\n              h = e.originalEvent,\n              d = u.config.datasetOrder || u.getDatasets(),\n              f = (0, r.getMouseCoordinate)(u.getFromEnv(\"chart-container\"), h, u),\n              g = f.chartX,\n              m = f.chartY,\n              v = !1,\n              b = d.length,\n              y = p._lastDatasetIndex,\n              x = p._lastPointIndex;\n          if (void 0 !== x && d[y] && d[y].components.data[x] && (s = d[y].components.data[x].config.dragStart), !s) for (; b-- && !v;) {\n            (o = d[b]) && o.getState(\"visible\") && (a = o._getHoveredPlot && o._getHoveredPlot(g, m)) && a.hovered && (v = !0, a.datasetIndex = b, l = p.getMouseEvents(e, a.datasetIndex, a.pointIndex));\n          }\n          if (s && void 0 !== y && (c = e.type === r.MOUSEOUT ? r.MOUSEMOVE : e.type, d[y] && d[y]._firePlotEvent && d[y]._firePlotEvent(c, x, e)), !s && (!v || l && l.fireOut) && void 0 !== y && d[y] && d[y]._firePlotEvent && (l && !l.events.length ? p.mouseoutTimer = setTimeout(function () {\n            u.mouseoutHandler(e, y, x);\n          }, 20) : (u.mouseoutHandler(e, y, x), clearTimeout(p.mouseoutTimer))), v) for ((i = l.events && l.events.length) && (p._lastDatasetIndex = a.datasetIndex, x = p._lastPointIndex = a.pointIndex), n = 0; n < i; n += 1) {\n            o && o._firePlotEvent && o._firePlotEvent(l.events[n], x, e);\n          }\n        }, t.prototype.parseChartAttr = function (t) {\n          e.prototype.parseChartAttr.call(this, t);\n          var o,\n              a = this.getFromEnv(\"dataSource\").chart;\n          (o = this.config).formAction = (0, r.getValidValue)(a.formaction), a.submitdataasxml !== r.ZEROSTRING || a.formdataformat || (a.formdataformat = p.csv().format), o.formDataFormat = (0, r.pluck)(a.formdataformat, p.xml().format), o.formTarget = (0, r.pluck)(a.formtarget, \"_self\"), o.formMethod = (0, r.pluck)(a.formmethod, \"POST\"), o.submitFormAsAjax = (0, r.pluckNumber)(a.submitformusingajax, 1), o.restoreBtnTitle = (0, r.pluck)(a.restoretext, a.restorebtntitle, \"Restore\"), o.submitBtnTitle = (0, r.pluck)(a.submittext, a.formbtntitle, \"Submit\"), o.showFormBtn = (0, r.pluckNumber)(a.enablesubmit, a.showformbtn, 1) && o.formAction, o.showRestoreBtn = (0, r.pluckNumber)(a.enablerestore, a.showrestorebtn, 1), o.formBtnTitle = (0, r.pluck)(a.formbtntitle, \"Submit\"), o.formBtnStyle = {\n            fontSize: o.style.outCanfontSize,\n            fontFamily: o.style.outCanfontFamily,\n            fontWeight: \"bold\"\n          }, o.restoreBtnWidth = (0, r.pluckNumber)(a.restorebtnwidth, 0), o.allowAxisChange = (0, r.pluckNumber)(a.allowaxischange, 1), a.toolbary || a.toolbarx ? o.spaceHardCoded = !0 : delete o.spaceHardCoded, o.drawTrendRegion = (0, r.pluckNumber)(a.drawcrossline, 0);\n        }, t.prototype._storeIntialLimit = function (e, t) {\n          this.config.axisInitialLimit = {\n            min: e,\n            max: t\n          };\n        }, t.prototype._createToolBox = function () {\n          e.prototype._createToolBox.call(this), this.addConfigureOptions();\n        }, t.prototype.addConfigureOptions = function () {\n          var e,\n              t,\n              o = this,\n              a = o.getFromEnv(\"toolbar\"),\n              r = a.getChild(\"hamburgerMenu-\" + a.getId() + \"-\" + o.getId() + \"-0\"),\n              n = o.config,\n              i = n.allowAxisChange,\n              l = n.submitBtnTitle,\n              c = n.restoreBtnTitle,\n              u = [{\n            name: \"Increase Upper Limit\",\n            handler: function handler() {\n              var e = o.getChildren(\"yAxis\")[0].getLimit(),\n                  t = e.max,\n                  a = e.tickInterval;\n              o.changeUpperLimits(t + a);\n            },\n            action: \"click\"\n          }, {\n            name: \"Increase Lower Limit\",\n            handler: function handler() {\n              var e = o.getChildren(\"yAxis\")[0].getLimit(),\n                  t = e.min,\n                  a = e.tickInterval;\n              o.changeLowerLimits(t + a);\n            },\n            action: \"click\"\n          }, {\n            name: \"Decrease Upper Limit\",\n            handler: function handler() {\n              var e = o.getChildren(\"yAxis\")[0].getLimit(),\n                  t = e.max,\n                  a = e.tickInterval;\n              o.changeUpperLimits(t - a);\n            },\n            action: \"click\"\n          }, {\n            name: \"Decrease Lower Limit\",\n            handler: function handler() {\n              var e = o.getChildren(\"yAxis\")[0].getLimit(),\n                  t = e.min,\n                  a = e.tickInterval;\n              o.changeLowerLimits(t - a);\n            },\n            action: \"click\"\n          }];\n          n.showFormBtn && (t = {\n            name: l,\n            handler: function handler() {\n              s.submitData.call(o);\n            },\n            action: \"click\"\n          }, u.push(t)), n.showRestoreBtn && (e = {\n            name: c,\n            handler: function handler() {\n              o.restoreData();\n            },\n            action: \"click\"\n          }, u.push(e)), i && r.appendInMenu(u);\n        }, t.prototype.restoreData = function () {\n          var e = this.getChildren(\"yAxis\")[0],\n              t = this.getFromEnv(\"chart-attrib\"),\n              o = this.config.axisInitialLimit;\n          this.iterateComponents(function (e) {\n            var t = void 0;\n            (t = e.getChildren(\"dataset\")) && t.forEach(function (e) {\n              e.restore();\n            });\n          }), e.resetStoredLimits(), e.setAxisConfig({\n            axisMaxValue: t.yaxismaxvalue,\n            axisMinValue: t.yaxisminvalue\n          }), e.setDataLimit(o.max, o.min), this.fireChartInstanceEvent(\"dataRestored\", {}), this._manageInteractiveSpace();\n        }, t.prototype.changeLowerLimits = function (e) {\n          var t = this.getChildren(\"yAxis\")[0],\n              o = t.getLimit(),\n              a = o.min,\n              n = o.min,\n              i = this.config,\n              l = (0, r.safeMin)([i.yMin, t.getTrendLineLimits()[0]]),\n              s = !1,\n              c = i.allowAxisChange,\n              u = o.max;\n          return this.getFromEnv(\"animationManager\").setAnimationState(\"update\"), void 0 !== e && e < l && e !== n && c && (a = e, s = !0), s && (t.resetStoredLimits(), t.setAxisConfig({\n            axisMaxValue: u,\n            axisMinValue: a,\n            showLowerLimit: !0\n          }), t.setDataLimit(u, a), this._manageInteractiveSpace()), s;\n        }, t.prototype.changeUpperLimits = function (e) {\n          var t,\n              o = this.getChildren(\"yAxis\")[0],\n              a = o.getLimit(),\n              n = a.min,\n              i = a.max,\n              l = this.config,\n              s = (0, r.safeMax)([l.yMax, o.getTrendLineLimits()[1]]),\n              c = !1,\n              u = l.allowAxisChange;\n          return this.getFromEnv(\"animationManager\").setAnimationState(\"update\"), void 0 !== e && e > s && e !== i && u && (t = e, c = !0), c && (o.resetStoredLimits(), o.setAxisConfig({\n            axisMaxValue: t,\n            axisMinValue: n,\n            showUpperLimit: !0\n          }), o.setDataLimit(t, n), this._manageInteractiveSpace()), c;\n        }, t.prototype.getJSONData = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s = this.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0],\n              c = this.getFromEnv(\"dataSource\"),\n              u = [];\n          if (s.iterateComponents(function (t) {\n            \"group\" === t.getType() && (e = t);\n          }), e) u = e.getJSONData && e.getJSONData();else for (i = (o = this.getDatasets()).length, n = 0; n < i; n++) {\n            a = {\n              seriesname: (t = o[n]).config.seriesname,\n              data: t.getJSONData().data\n            }, u.push(a);\n          }\n          return (l = (0, r.extend2)({}, c)).dataset = u, l;\n        }, t;\n      }(a[\"default\"]);\n\n      v.prototype._manageInteractiveSpace = r._manageInteractiveSpace, t[\"default\"] = v;\n    },\n    855: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t.submitData = undefined;\n      var a,\n          r = o(176),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      },\n          i = o(132),\n          l = o(125);\n      var s = void 0,\n          c = (0, i.getDepsByType)(\"transcoder\");\n\n      t.submitData = function () {\n        var e,\n            t,\n            o,\n            a,\n            r,\n            i = this,\n            u = new n[\"default\"](),\n            p = i.config,\n            h = c.json(),\n            d = c.csv && c.csv() || \"csv\",\n            f = c.xml(),\n            g = p.formAction,\n            m = i.getFromEnv(\"chartInstance\"),\n            v = p.submitFormAsAjax;\n        p.formDataFormat === h.format ? (e = h.format, i.getJSONData && (t = JSON.stringify(i.getJSONData())), i.getCollatedData && (t = JSON.stringify(i.getCollatedData()))) : p.formDataFormat && p.formDataFormat === d.format ? (e = d.format, (t = i.getCSVString && i.getCSVString()) !== s && \"\" !== t || (i.getJSONData && (t = d.fromJSON(i.getJSONData()).data), i.getCollatedData && (t = d.fromJSON(i.getCollatedData()).data))) : (e = f.format, i.getCollatedData && (t = f.fromJSON(i.getCollatedData()).data), i.getJSONData && (t = f.fromJSON(i.getJSONData()).data)), i.fireChartInstanceEvent(\"beforeDataSubmit\", {\n          data: t\n        }, s, function () {\n          v ? (u.onError = function (e, o, a, r) {\n            i.fireChartInstanceEvent(\"dataSubmitError\", {\n              xhrObject: o.xhr,\n              url: r,\n              statusText: e,\n              httpStatus: o.xhr && o.xhr.status ? o.xhr.status : -1,\n              data: t\n            }, [m.id, e, o.xhr && o.xhr.status]);\n          }, u.onSuccess = function (e, o, a, r) {\n            i.fireChartInstanceEvent(\"dataSubmitted\", {\n              xhrObject: u,\n              response: e,\n              url: r,\n              data: t\n            }, [m.id, e]);\n          }, (o = {})[\"str\" + e.toUpperCase()] = t, u.open && u.abort(), u.post(g, o)) : ((a = window.document.createElement(\"span\")).innerHTML = '<form style=\"display:none\" action=\"' + g + '\" method=\"' + p.formMethod + '\" target=\"' + p.formTarget + '\"> <input type=\"hidden\" name=\"strXML\" value=\"' + (0, l.xssEncode)(t) + '\"><input type=\"hidden\" name=\"dataFormat\" value=\"' + e.toUpperCase() + '\" /></form>', r = a.removeChild(a.firstChild), window.document.body.appendChild(r), r.submit && r.submit(), r.parentNode.removeChild(r), a = r = null);\n        }, function () {\n          i.fireChartInstanceEvent(\"dataSubmitCancelled\", {\n            data: t\n          });\n        });\n      };\n    },\n    856: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t.updateDataValue = t._restore = t._getJSONData = undefined;\n      var a = l(o(432)),\n          r = o(125),\n          n = l(o(857)),\n          i = o(132);\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c,\n          u,\n          p = r.preDefStr.setRolloverAttrStr,\n          h = r.preDefStr.setRolloutAttrStr,\n          d = r.preDefStr.DATAPLOTCLICK,\n          f = r.hasSVG ? \"ns-resize\" : \"n-resize\",\n          g = function g(e, t) {\n        var o,\n            a = t.getChildren(\"yAxis\")[0],\n            n = t.getFromEnv(\"chart-container\"),\n            i = this.data(\"eventArgs\");\n        o = (0, r.getMouseCoordinate)(n, e, t), i.value = a.getValue(o.chartY), this.data(\"eventArgs\", i);\n      };\n\n      (0, i.addDep)({\n        name: \"dragColumnAnimation\",\n        type: \"animationRule\",\n        extension: n[\"default\"]\n      });\n\n      var m = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"dragColumn\";\n        }, t.prototype.configureAttributes = function (t) {\n          var o = this.config,\n              a = this.getFromEnv(\"chart-attrib\"),\n              n = o.JSONData;\n          o.allowDrag = (0, r.pluckNumber)(n.allowdrag, 1), o.allowNegDrag = (0, r.pluckNumber)(n.allownegativedrag, 1), o.allowAxisChange = (0, r.pluckNumber)(a.allowaxischange, 1), o.snapToDivOnly = (0, r.pluckNumber)(a.snaptodivonly, 0), o.snapToDiv = o.snapToDivOnly ? 1 : (0, r.pluckNumber)(a.snaptodiv, 1), o.doNotSnap = (0, r.pluckNumber)(a.donotsnap, 0), o.snapToDivRelaxation = (0, r.pluckNumber)(a.snaptodivrelaxation, 10), o.doNotSnap && (o.snapToDiv = o.snapToDivOnly = 0), e.prototype.configureAttributes.call(this, t);\n        }, t.prototype._plotConfigure = function (t, o) {\n          var a = this.config,\n              n = this.components.data,\n              i = void 0;\n          e.prototype._plotConfigure.call(this, t, o), (i = n[t].config).allowDrag = (0, r.pluckNumber)(o.allowdrag, a.allowDrag), i.allowNegDrag = (0, r.pluckNumber)(o.allownegativedrag, a.allowNegDrag);\n        }, t.prototype.drag = function (e, t, o, a) {\n          var n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              d,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _ = this.config,\n              T = this.getFromEnv(\"chart\"),\n              L = T.config,\n              P = L.canvasTop,\n              O = L.canvasBottom,\n              V = this.getFromEnv(\"toolTipController\"),\n              M = this.getFromEnv(\"number-formatter\"),\n              F = this.components.data,\n              I = this.getFromEnv(\"paper\").canvas.style,\n              B = this.getFromEnv(\"yAxis\"),\n              R = B.yBasePos,\n              j = L.yaxisname,\n              G = {\n            xaxisName: L.xaxisname,\n            yaxisName: j\n          },\n              H = L.dragTolerance + 1,\n              W = _.JSONData,\n              z = this.getFromEnv(\"chart-attrib\"),\n              U = L.useplotgradientcolor,\n              J = L.useroundedges,\n              K = this.getFromEnv(\"chart-container\");\n\n          switch (a = a || (0, r.getMouseCoordinate)(K, t), e) {\n            case \"dragstart\":\n              i = (S = F[o]).config, n = S.graphics.element, u = S._yPos, m = S._height, l = i.setValue < 0 ? u + m : u, D = i.allowDrag, y = a.chartY, D && y >= l - H && y <= l + H ? (i.dragStart = !0, i._pointerDy = 0, i._dragStartY = y, i._dragBuffer = l - y, S.startValue = i.setValue, S.name = _.seriesname, S.datasetIndex = _.index, S.dragged = !0) : i.dragStart = !1;\n              break;\n\n            case \"dragmove\":\n              (i = (S = F[o]).config).dragStart && (n = S.graphics.element, w = i.plotIndex, b = i.allowNegDrag ? O : R, y = a.chartY, i._rollOverResponseSetterFire = !1, I.cursor = f, i._pointerDy++, (y += i._dragBuffer) < P ? y = P : y > b && (y = b), u = R < y ? R : y, m = (0, r.mathAbs)(R - y), S._yPos = u, S._height = m, l = u >= R ? u + m : u, i._y = s = i.setValue = B.getValue(l), c = M.dataLabels(s), i.toolTipValue = c, i.displayValue = (0, r.pluck)(i.setDisplayValue, c), U && !J && (i.colorArr[0].FCcolor.angle = d = u < R ? 90 : 270), n.attr({\n                y: S._yPos,\n                height: S._height,\n                fill: (0, r.toRaphaelColor)(i.colorArr[0])\n              }), this.parseLabelAttributes(S), this.drawLabel(w, w + 1), S.graphics.element = n, V.hide(_.currentToolTip), 1 === i._pointerDy && (C = {\n                dataIndex: o,\n                datasetIndex: S.datasetIndex,\n                startValue: S.startValue,\n                datasetName: S.name\n              }, T.fireChartInstanceEvent(\"dataplotDragStart\", C)));\n              break;\n\n            case \"dragend\":\n              (i = (S = F[o]).config).dragStart && (u = S._yPos, n = S.graphics.element, A = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(S.tooltext, W.plottooltext, z.plottooltext))), y = a.chartY, this.setMaxMin(S), C = {\n                dataIndex: o,\n                datasetIndex: S.datasetIndex,\n                startValue: S.startValue,\n                endValue: i.setValue,\n                datasetName: S.name\n              }, N = [T.getFromEnv(\"chartInstance\").id, C.dataIndex, C.datasetIndex, C.datasetName, C.startValue, C.endValue], g.call(n, t, T), i._pointerDy && (T.fireChartInstanceEvent(\"dataplotDragEnd\", C), T.fireChartInstanceEvent(\"chartupdated\", C, N)), U && !J && (d = u >= R ? 90 : 270, (v = n.data(p)) && v.fill && ((x = (x = v.fill).split(\"-\"))[0] = d, v.fill = x.join(\"-\")), (k = n.data(h)) && k.fill && ((x = (x = k.fill).split(\"-\"))[0] = d, k.fill = x.join(\"-\"))), i._dragBuffer = 0, i._pointerDy = 0, void 0 !== A && (G.formattedValue = i.toolTipValue, G.label = i.label, E = (0, r.parseTooltext)(A, [1, 2, 3, 4, 5, 6, 7], G, {\n                value: i.toolTipValue\n              }, void 0, W), i.setTooltext = E, A = E, i.toolText = E), E = i.finalTooltext = !1 !== i.toolText ? i.toolText + (A ? \"\" : i.toolTipValue) : \"\", y >= l - H && y <= l + H || (I.cursor = \"default\"), i.dragStart = !1);\n          }\n        }, t.prototype._firePlotEvent = function (e, o, a) {\n          var n,\n              i,\n              l = this.getFromEnv(\"chart\"),\n              s = this.config,\n              c = s.currentToolTip,\n              u = this.getFromEnv(\"chartConfig\"),\n              p = u.drawTrendRegion,\n              h = this.getFromEnv(\"paper\").canvas.style,\n              g = this.getFromEnv(\"toolTipController\"),\n              m = this.components.data[o],\n              v = m.config,\n              b = m.graphics.element,\n              y = v.finalTooltext || v.toolText,\n              x = a.originalEvent,\n              k = (0, r.getMouseCoordinate)(this.getFromEnv(\"chart-container\"), x).chartY,\n              w = m._yPos,\n              C = m._height,\n              N = this.getFromEnv(\"yAxis\").yBasePos,\n              S = v.allowDrag,\n              A = w,\n              E = w + C;\n          if (n = u.dragTolerance + 1, i = w >= N ? w + C : w, b) switch (e) {\n            case \"fc-mouseover\":\n              k <= E - n && k >= A + n && !p && y && (c ? g.draw(x, y, c) : c = s.currentToolTip = g.draw(x, y)), !v._rollOverResponseSetterFire && k <= E && k >= A && (t._rolloverResponseSetter(l, b, a, this), v._rollOverResponseSetterFire = !0);\n              break;\n\n            case \"fc-mouseout\":\n              h.cursor = \"default\", v._rollOverResponseSetterFire && t._rolloutResponseSetter(l, b, a, this), v._rollOverResponseSetterFire = !1, g.hide(s.currentToolTip);\n              break;\n\n            case \"fc-click\":\n              l.plotEventHandler(b, a, d);\n              break;\n\n            case \"fc-mousemove\":\n              v.dragStart || (i = v.setValue < 0 ? w + C : w, S && k >= i - n && k <= i + n ? (h.cursor = f, g.hide(s.currentToolTip)) : (h.cursor = \"default\", v._rollOverResponseSetterFire && !p && y && (c ? g.draw(x, y, c) : c = s.currentToolTip = g.draw(x, y))), !v._rollOverResponseSetterFire && k <= E && k >= A ? (t._rolloverResponseSetter(l, b, a), v._rollOverResponseSetterFire = !0) : !v._rollOverResponseSetterFire || k <= E && k >= A || (g.hide(s.currentToolTip), v._rollOverResponseSetterFire = !1, t._rolloutResponseSetter(l, b, a, this)));\n          }\n        }, t._rolloverResponseSetter = function (e, t, o, a) {\n          var r = t && t.getData(),\n              n = e.getFromEnv(\"animationManager\");\n          t && 0 !== r.showHoverEffect && !0 !== r.draged && t && (n.setAnimationState(\"mouseOver\"), n.setAnimation({\n            el: t,\n            label: \"rect\",\n            component: a,\n            attr: t.getData().setRolloverAttr\n          }), e.plotEventHandler(t, o, \"DataPlotRollOver\"));\n        }, t._rolloutResponseSetter = function (e, t, o, a) {\n          var r = t && t.getData(),\n              n = e.getFromEnv(\"animationManager\");\n          t && 0 !== r.showHoverEffect && !0 !== r.draged && (n.setAnimationState(\"mouseOut\"), n.setAnimation({\n            el: t,\n            label: \"rect\",\n            component: a,\n            attr: t.getData().setRolloutAttr\n          }), e.plotEventHandler(t, o, \"DataPlotRollOut\"));\n        }, t.prototype.getJSONData = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n = this.config.JSONData.data,\n              i = this.components.data,\n              l = [],\n              s = {};\n\n          for (r = 0, a = n.length; r < a; r++) {\n            for (o in t = n[r], e = i[r], s = {}, t) {\n              s[o] = \"value\" === o ? e.config.setValue : t[o];\n            }\n\n            l.push(s);\n          }\n\n          return {\n            data: l\n          };\n        }, t.prototype.restore = function () {\n          this.setData(this.config.JSONData, !0);\n        }, t;\n      }(a[\"default\"]);\n\n      t._getJSONData = c = m.prototype.getJSONData, t._restore = u = m.prototype.restore, t[\"default\"] = m, t._getJSONData = c, t._restore = u, t.updateDataValue = g;\n    },\n    857: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(433),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.dataset.dragColumn\": n[\"default\"][\"initial.dataset.column\"]\n      };\n    },\n    858: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(516),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      },\n          i = o(125);\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return l(t, e), t.prototype.getJSONData = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.getFromEnv(\"dataSource\").dataset,\n              n = this.getChildren(\"dataset\"),\n              l = [],\n              s = n.length;\n\n          for (a = 0; a < s; a++) {\n            e = n[a], delete (o = (0, i.extend2)({}, r[a])).data, t = e.getJSONData(), l.push((0, i.extend2)(o, t));\n          }\n\n          return l;\n        }, t;\n      }(n[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    859: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o = e.config.allowAxisChange,\n            a = e.getChildren(\"yAxis\")[0],\n            n = void 0;\n        (0, r.componentFactory)(a, i[\"default\"], \"limitUpdater\", o ? 1 : 0), (n = (t = a.getChildren(\"limitUpdater\")) && t[0]) && n.configure();\n      };\n      var a,\n          r = o(125),\n          n = o(860),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      };\n    },\n    860: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(138),\n          n = o(127),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      },\n          l = o(125);\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = 13,\n          u = 27,\n          p = void 0;\n\n      function h() {\n        this.justFocussed && (this.justFocussed = !1, l.hasTouch || this.select());\n      }\n\n      function d(e, t, o) {\n        var a = p.getLinkedParent();\n        if (e !== t + \"\") return o ? a.changeUpperLimits && a.changeUpperLimits(Number(e)) : a.changeLowerLimits && a.changeLowerLimits(Number(e));\n      }\n\n      function f() {\n        var e,\n            t = {\n          opacity: 1,\n          filter: \"alpha(opacity=100)\",\n          color: (0, l.rgbaToHex)(this.axisLabel.attr(\"fill\"))\n        };\n\n        for (e in t) {\n          this.style[e] = t[e];\n        }\n\n        this.value = this.dataValue, this.justFocussed = !0, this.hasFocus = !0, this.axisLabel && this.axisLabel.hide();\n      }\n\n      function g() {\n        d(this.value, this.oldValue, this.isMaxLabel), this.style.opacity = 0, this.style.filter = \"alpha(opacity=0)\", this.axisLabel && this.axisLabel.show(), l.isIE && document.getElementsByTagName(\"body\")[0].focus && document.getElementsByTagName(\"body\")[0].focus(), this.justFocussed = !1, this.hasFocus = !1;\n      }\n\n      function m(e) {\n        var t = function (e) {\n          return \"number\" == typeof e.which ? e.which : e.keyCode;\n        }(e.originalEvent),\n            o = this.value,\n            a = this.oldValue,\n            r = this.isMaxLabel;\n\n        t === c ? !1 === d(o, a, r) ? this.style.color = \"#dd0000\" : i[\"default\"].fire(this, \"blur\", e) : t === u && (this.value = a, i[\"default\"].fire(this, \"blur\", e));\n      }\n\n      function v(e) {\n        return function (t) {\n          e.parentNode && i[\"default\"].fire(e, \"blur\", t);\n        };\n      }\n\n      function b(e) {\n        return function (t) {\n          t.target !== e && e.hasFocus && i[\"default\"].fire(e, \"blur\", t);\n        };\n      }\n\n      function y(e, t) {\n        return function () {\n          i[\"default\"].unlisten(p.getLinkedParent(), \"defaultprevented\", t), e.parentNode.removeChild(e);\n        };\n      }\n\n      function x(e, t) {\n        return function () {\n          i[\"default\"].unlisten(p.getLinkedParent().getLinkedItem(\"container\"), \"mousedown\", t), e.parentNode.removeChild(e);\n        };\n      }\n\n      var k = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.configureAttributes = function () {\n          this.config.linkedAxis = this.getLinkedParent(), p = this.config.linkedAxis;\n        }, t.prototype.getType = function () {\n          return \"helper\";\n        }, t.prototype.getName = function () {\n          return \"limitUpdater\";\n        }, t.prototype.draw = function () {\n          var e = this.getFromEnv(\"chartConfig\"),\n              t = this.config.linkedAxis,\n              o = t.getAxisConfig(\"extremeLabels\"),\n              a = t.getLimit(),\n              r = this.getFromEnv(\"chart-container\"),\n              n = this.getFromEnv(\"style\").inCanvasStyle,\n              s = (0, l.extend2)({\n            outline: \"none\",\n            \"-webkit-appearance\": \"none\",\n            filter: \"alpha(opacity=0)\",\n            position: \"absolute\",\n            background: \"transparent\",\n            border: \"1px solid #cccccc\",\n            textAlign: \"right\",\n            top: 0,\n            left: 0,\n            width: 50,\n            zIndex: 20,\n            opacity: 0,\n            borderRadius: 0,\n            display: \"block\"\n          }, n),\n              c = {\n            max: {\n              element: o.lastLabel.graphic,\n              value: a.max\n            },\n            min: {\n              element: o.firstLabel.graphic,\n              value: a.min\n            }\n          },\n              u = void 0,\n              p = void 0,\n              d = void 0,\n              k = void 0,\n              w = void 0,\n              C = void 0,\n              N = void 0,\n              S = void 0,\n              A = void 0,\n              E = void 0,\n              D = void 0,\n              _ = void 0;\n\n          for (k in s.color = (0, l.hashify)(s.color), s.fontSize = s.fontSize + \"px\", c) {\n            if (c.hasOwnProperty(k)) {\n              if (C = (d = c[k].element) && d.getBBox(), S = c[k].value, N = \"max\" === k, p = k + \"Input\", u = this.getGraphicalElement(p), !C || !d) {\n                u && (u.style.display = \"none\");\n                continue;\n              }\n\n              for (w in u || (u = this.addGraphicalElement(p, (0, l.createElement)(\"input\", {\n                type: \"text\",\n                value: S,\n                id: \"fc-updater-\" + k\n              }, r))), i[\"default\"].listen(u, [\"focus\", \"mouseup\", \"blur\", \"keyup\"], [f, h, g, m]), l.hasSVG ? (i[\"default\"].listen(r, \"defaultprevented\", A = v(u)), i[\"default\"].listen(r, \"destroy\", y(u, A))) : (i[\"default\"].listen(r, \"mousedown\", _ = b(u)), i[\"default\"].listen(r, \"destroy\", x(u, _))), E = C.x + C.width - e.marginLeft, D = e.marginLeft, s.top = C.y + \"px\", s.left = D + \"px\", s.width = E + \"px\", s) {\n                s.hasOwnProperty(w) && (u.style[w] = s[w]);\n              }\n\n              u.dataValue = S, u.value = S, u.oldValue = S, u.name = S || \"\", u.axisLabel = d, u.isMaxLabel = N;\n            }\n          }\n        }, t.prototype.removingDraw = function () {\n          var e = this.getGraphicalElement(),\n              t = void 0,\n              o = void 0;\n\n          for (t in e) {\n            e.hasOwnProperty(t) && ((o = e[t]) && o.parentNode && o.parentNode.removeChild(o), delete e[t]);\n          }\n        }, t;\n      }(r.ComponentInterface);\n\n      t[\"default\"] = k;\n    },\n    861: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        (0, i.componentFactory)(e, n[\"default\"], \"dragTracker\"), e.getChildren(\"dragTracker\")[0].addEvents();\n      };\n      var a,\n          r = o(862),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      },\n          i = o(125);\n    },\n    862: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(138),\n          r = o(125);\n\n      function n(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var i = function i(e) {\n        return function (t) {\n          for (var o = e.getFromEnv(\"chart\"), a = o.config, n = e.config, i = a.datasetOrder || o.getDatasets(), l = (0, r.getMouseCoordinate)(o.getFromEnv(\"chart-container\"), t, o), s = l.chartX, c = l.chartY, u = void 0, p = void 0, h = i.length, d = void 0; h-- && !u;) {\n            (d = i[h]) && d.getState(\"visible\") && (p = d._getHoveredPlot && d._getHoveredPlot(s, c)) && p.hovered && (u = !0, n.dragStart = !0, n.hoveredInfo = p, n.hoveredDS = d, d.drag(\"dragstart\", t, p.pointIndex, l));\n          }\n        };\n      },\n          l = function l(e) {\n        return function (t) {\n          var o = e.config;\n          o.dragStart && o.hoveredDS.drag(\"dragmove\", t, o.hoveredInfo.pointIndex);\n        };\n      },\n          s = function s(e) {\n        return function (t) {\n          var o = e.config;\n          o.dragStart && o.hoveredDS.drag(\"dragend\", t, o.hoveredInfo.pointIndex), o.dragStart = !1;\n        };\n      },\n          c = [\"fc-dragstart\", \"fc-dragmove\", \"fc-dragend\"],\n          u = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.config.eventCb = {\n            \"fc-dragstart\": i(o),\n            \"fc-dragmove\": l(o),\n            \"fc-dragend\": s(o)\n          }, o;\n        }\n\n        return n(t, e), t.prototype.addEvents = function () {\n          var e = this.getFromEnv(\"chart\"),\n              t = this.config.eventCb,\n              o = e.getChildren(\"canvas\");\n          this.removeEvents(), o.forEach(function (e) {\n            c.forEach(function (o) {\n              e.addEventListener(o, t[o]);\n            });\n          });\n        }, t.prototype.removeEvents = function () {\n          var e = this.config.eventCb;\n          this.getFromEnv(\"chart\").getChildren(\"canvas\").forEach(function (t) {\n            c.forEach(function (o) {\n              t.removeEventListener(o, e[o]);\n            });\n          });\n        }, t.prototype._dispose = function () {\n          this.removeEvents(), e.prototype._dispose.call(this);\n        }, t;\n      }(a.ComponentInterface);\n\n      t[\"default\"] = u;\n    },\n    863: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(864),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    864: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = r(o(865));\n\n      function r(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function n(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var i = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.defaultPlotShadow = 1, o;\n        }\n\n        return n(t, e), t.prototype.getName = function () {\n          return \"DragLine\";\n        }, t.getName = function () {\n          return \"DragLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.isDrag = !0, t.zeroplanethickness = 1, t.zeroplanealpha = 40, t.showzeroplaneontop = 0, t.enablemousetracking = !0, t.defaultcrosslinethickness = 1;\n        }, t.prototype.getDSdef = function () {\n          return a[\"default\"];\n        }, t;\n      }(r(o(869))[\"default\"]);\n\n      t[\"default\"] = i;\n    },\n    865: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = c(o(449)),\n          r = o(866),\n          n = o(125),\n          i = o(856),\n          l = o(132),\n          s = c(o(868));\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      (0, l.addDep)({\n        name: \"dragLineAnimation\",\n        type: \"animationRule\",\n        extension: s[\"default\"]\n      });\n\n      var p = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return u(t, e), t.prototype._firePlotEvent = function () {\n          r.__firePlotEvent.apply(this, arguments);\n        }, t.prototype.updateImage = function (e) {\n          r._updateImage.call(this, e);\n        }, t.prototype.drag = function () {\n          r._drag.apply(this, arguments);\n        }, t.prototype.configureAttributes = function () {\n          r.configurer.apply(this, arguments);\n        }, t.prototype._plotConfigure = function (t, o) {\n          var a = this.config,\n              r = this.components.data,\n              i = void 0;\n          e.prototype._plotConfigure.call(this, t, o), (i = r[t].config).allowDrag = (0, n.pluckNumber)(o.allowdrag, a.allowDrag), i.allowNegDrag = (0, n.pluckNumber)(o.allownegativedrag, a.allowNegDrag);\n        }, t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"dragLine\";\n        }, t.prototype.restore = function () {\n          i._restore.call(this);\n        }, t.prototype.getJSONData = function () {\n          return i._getJSONData.call(this);\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = p;\n    },\n    866: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t._drag = t._updateImage = t.configurer = t.__firePlotEvent = undefined;\n      var a = s(o(450)),\n          r = o(125),\n          n = o(856),\n          i = s(o(867)),\n          l = o(132);\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u,\n          p,\n          h,\n          d,\n          f = \"DataPlotRollOut\",\n          g = r.hasSVG ? \"ns-resize\" : \"n-resize\",\n          m = Math.min,\n          v = Math.max;\n      (0, l.addDep)({\n        name: \"dragAreaAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var b = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return c(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"dragArea\";\n        }, t.prototype.configureAttributes = function (t) {\n          var o = this.config,\n              a = this.getFromEnv(\"chart-attrib\"),\n              n = o.JSONData;\n          o.allowDrag = (0, r.pluckNumber)(n.allowdrag, 1), o.allowNegDrag = (0, r.pluckNumber)(n.allownegativedrag, 1), o.allowAxisChange = (0, r.pluckNumber)(a.allowaxischange, 1), o.snapToDivOnly = (0, r.pluckNumber)(a.snaptodivonly, 0), o.doNotSnap = (0, r.pluckNumber)(a.donotsnap, 0), o.snapToDiv = (0, r.pluckNumber)(a.snaptodiv, 1), o.snapToDivRelaxation = (0, r.pluckNumber)(a.snaptodivrelaxation, 10), o.doNotSnap && (o.snapToDiv = o.snapToDivOnly = 0), e.prototype.configureAttributes.call(this, t);\n        }, t.prototype._plotConfigure = function (t, o) {\n          var a = this.config,\n              n = this.components.data,\n              i = void 0;\n          e.prototype._plotConfigure.call(this, t, o), (i = n[t].config).allowDrag = (0, r.pluckNumber)(o.allowdrag, a.allowDrag), i.allowNegDrag = (0, r.pluckNumber)(o.allownegativedrag, a.allowNegDrag);\n        }, t.updateImage = function (e) {\n          var t,\n              o = e.graphics,\n              a = o.image || o.element,\n              n = e.config,\n              i = n.anchorProps,\n              l = n.hoverEffects,\n              s = a && a.data(\"imgRef\"),\n              c = i.imageScale,\n              u = s.height * c * .01,\n              p = s.width * c * .01,\n              h = e._xPos,\n              d = e._yPos,\n              f = l.imageHoverScale,\n              g = s.width * f * .01,\n              v = s.height * f * .01,\n              b = i.isAnchorRadius,\n              y = i.radius = b ? i.radius : m(p, u) / 2,\n              x = i.imagePadding,\n              k = y - x - .5 * i.borderThickness,\n              w = l.radius - x - .5 * l.anchorBorderThickness,\n              C = i.symbol[1],\n              N = (0, r.polyPathToPath)([C || 2, h, d, w > 0 ? w : 0, l.startAngle, l.dip]),\n              S = (0, r.polyPathToPath)([C || 2, h, d, k > 0 ? k : 0, i.startAngle, 0]),\n              A = {\n            x: h - s.width * c * .005,\n            y: d - s.height * c * .005,\n            width: p,\n            height: u,\n            alpha: 100\n          };\n          A[\"clip-path\"] = S, (t = {\n            x: h - s.width * f * .005,\n            y: d - s.height * f * .005,\n            width: g,\n            height: v,\n            alpha: 100\n          })[\"clip-path\"] = N, a.attr(A), a.data(\"setRolloverAttr\", t), a.data(\"setRolloutAttr\", A);\n        }, t.prototype.drag = function (e, o, a, i) {\n          var l = this.config,\n              s = l.index,\n              c = this.getFromEnv(\"chart\"),\n              u = c.config,\n              p = u.canvasTop,\n              h = u.canvasBottom,\n              d = void 0,\n              f = void 0,\n              m = void 0,\n              v = this.getFromEnv(\"toolTipController\"),\n              b = this.getFromEnv(\"number-formatter\"),\n              y = this.components.data,\n              x = void 0,\n              k = void 0,\n              w = void 0,\n              C = void 0,\n              N = void 0,\n              S = void 0,\n              A = this.getFromEnv(\"paper\").canvas.style,\n              E = this.getFromEnv(\"yAxis\"),\n              D = void 0,\n              _ = u.yaxisname,\n              T = {\n            xaxisName: u.xaxisname,\n            yaxisName: _\n          },\n              L = void 0,\n              P = this.getGraphicalElement().lineElement,\n              O = void 0,\n              V = u.dragTolerance + 1,\n              M = E.yBasePos,\n              F = void 0,\n              I = void 0,\n              B = void 0,\n              R = void 0,\n              j = void 0,\n              G = void 0,\n              H = void 0,\n              W = void 0,\n              z = void 0,\n              U = void 0,\n              J = void 0,\n              K = void 0,\n              q = void 0,\n              Y = void 0,\n              X = this.getFromEnv(\"chart-attrib\"),\n              Q = \"dragLine\" === this.getName(),\n              Z = l.JSONData,\n              $ = this.getFromEnv(\"chart-container\");\n\n          switch (i = i || (0, r.getMouseCoordinate)($, o), e) {\n            case \"dragstart\":\n              m = (d = y[a]).config, w = d._yPos, R = d._xPos, B = m.allowDrag, S = i.chartY, O = i.chartX, B && S >= w - V && S <= w + V && O <= R + V && O >= R - V ? (m.dragStart = !0, m._pointerDy = 0, m._dragStartY = S, m._dragBuffer = w - S, d.dragged = !0, d.startValue = m.setValue, d.name = l.seriesname, d.datasetIndex = l.index, D = {\n                dataIndex: NaN,\n                datasetIndex: d.datasetIndex,\n                startValue: d.startValue,\n                datasetName: d.name\n              }, m.dragStart = !0) : m.dragStart = !1;\n              break;\n\n            case \"dragmove\":\n              (m = (d = y[a]).config).dragStart && (S = i.chartY, m.allowDrag && (A.cursor = g), f = d.graphics.element, m._pointerDy++, G = d.graphics.image, R = d._xPos, U = f, S += m._dragBuffer, N = m.allowNegDrag ? h : M, q = (L = m.anchorProps).startAngle || 90, K = m.hoverEffects, J = m.hoverEffects && m.hoverEffects.enabled, L.imageUrl, S < p ? S = p : S > N && (S = N), d._yPos = w = S, m._y = x = m.setValue = E.getValue(w), m._Py = E.getPixel(m._y), k = b.dataLabels(x), m.toolTipValue = k, m.displayValue = k, this.parseLabelAttributes(d, void 0), this.drawLabel(void 0, NaN), d.graphics.element = f, v.hide(l.currentToolTip), J && (C = U.data(\"setRolloverAttr\")) && (C.path = (0, r.polyPathToPath)([K.anchorSides || 2, R, w, K.anchorRadius, K.startAngle, K.dip])), J && (j = U.data(\"setRolloutAttr\")) && (j.path = (0, r.polyPathToPath)([L.symbol[1] || 2, R, w, L.radius, L.startAngle, m.dip || 0])), U && U.attr(j || {\n                path: (0, r.polyPathToPath)([L.symbol[1] || 2, R, w, L.radius, q, 0])\n              }), G && t.updateImage(d), Q && this.drawCommonElements(), P && (l = this.config, H = m.pathStartIndex, W = m.pathEndIndex, z = m.lastPath, z = this.getLinePath(y, {\n                begin: H,\n                end: W\n              }), P.attr({\n                path: z.getPathArr()\n              })), 1 === m._pointerDy && (D = {\n                dataIndex: a,\n                datasetIndex: s,\n                startValue: d.startValue,\n                datasetName: d.name\n              }, c.fireChartInstanceEvent(\"dataplotDragStart\", D)));\n              break;\n\n            case \"dragend\":\n              (m = (d = y[a]).config).dragStart && (this.setMaxMin(d), D = {\n                dataIndex: a,\n                datasetIndex: s,\n                startValue: d.startValue,\n                endValue: m.setValue,\n                datasetName: d.name\n              }, Y = [c.getFromEnv(\"chartInstance\").id, D.dataIndex, D.datasetIndex, D.datasetName, D.startValue, D.endValue], f && n.updateDataValue.call(f, o, c), m._pointerDy && (c.fireChartInstanceEvent(\"dataplotDragEnd\", D), c.fireChartInstanceEvent(\"chartupdated\", D, Y)), void 0 !== (F = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(d.tooltext, Z.plottooltext, X.plottooltext)))) && (T.formattedValue = m.toolTipValue, T.label = m.label, I = (0, r.parseTooltext)(F, [1, 2, 3, 4, 5, 6, 7], T, {\n                value: m.toolTipValue\n              }, void 0, Z), m.setTooltext = I, F = I, m.toolText = I), I = m.finalTooltext = !1 !== m.toolText ? F || m.toolText.substring(0, m.toolText.indexOf(m.formatedVal)) + m.toolTipValue : \"\", S >= w - V && S <= w + V && O <= R + V && O >= R - V || (A.cursor = \"default\"), m._dragBuffer = 0, m._pointerDy = 0, m.dragStart = !1);\n          }\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          var a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              m,\n              b,\n              y,\n              x = this.config,\n              k = this.getFromEnv(\"chart\"),\n              w = this.getFromEnv(\"chartConfig\").drawTrendRegion,\n              C = this.getFromEnv(\"paper\"),\n              N = this.getFromEnv(\"toolTipController\"),\n              S = C.canvas.style,\n              A = this.components.data[t],\n              E = x.currentToolTip,\n              D = o.originalEvent;\n          if (\"touchend\" === e && (b = D.changedTouches[0], D.pageX = b && b.pageX, D.pageY = b && b.pageY), i = (n = (0, r.getMouseCoordinate)(k.getFromEnv(\"chart-container\"), D)).chartY, l = n.chartX, A) switch (u = A.graphics.element, y = (m = A.config).anchorProps, h = m.finalTooltext, p = m.hoverEffects.enabled, d = m.eventArgs, s = A._yPos, c = A._xPos, m.dragTolerance = m.dragTolerance < y.markerRadius ? y.markerRadius + .5 : m.dragTolerance, a = v(m.dragTolerance, m.hoverEffects.anchorRadius || 0) + 1, e) {\n            case \"fc-mouseover\":\n              m.allowDrag && (S.cursor = g), m.dragStart || !h || m.dragStart || w || (E ? N.draw(D, h, E) : E = x.currentToolTip = N.draw(D, h)), m.dragStart || (p && this._hoverPlotAnchor(A, \"DataPlotRollOver\"), u && k.plotEventHandler(u, o, \"DataPlotRollOver\", d));\n              break;\n\n            case \"fc-mouseout\":\n              S.cursor = \"default\", p && this._hoverPlotAnchor(A, f), u && k.plotEventHandler(u, o, f, d), N.hide(x.currentToolTip);\n              break;\n\n            case \"fc-mousemove\":\n              !m.dragStart && h && i >= s - a && i <= s + a && l <= c + a && l >= c - a ? (m.allowDrag && (S.cursor = g), E ? N.draw(D, h, E) : E = x.currentToolTip = N.draw(D, h)) : N.hide(x.currentToolTip);\n              break;\n\n            case \"fc-click\":\n              u && k.plotEventHandler(u, o, \"dataplotclick\", d);\n          }\n        }, t.prototype.restore = function () {\n          n._restore.call(this);\n        }, t.prototype.getJSONData = function () {\n          return n._getJSONData.call(this);\n        }, t;\n      }(a[\"default\"]);\n\n      t._updateImage = u = b.prototype.updateImage, t.__firePlotEvent = h = b.prototype._firePlotEvent, t.configurer = p = b.prototype.configureAttributes, t._drag = d = b.prototype.drag, t.__firePlotEvent = h, t.configurer = p, t._updateImage = u, t._drag = d, t[\"default\"] = b;\n    },\n    867: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(451),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.dragArea\": n[\"default\"][\"*.dataset.area\"]\n      };\n    },\n    868: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.dragLine\": n[\"default\"][\"*.dataset.line\"]\n      };\n    },\n    869: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(852)),\n          r = l(o(866)),\n          n = o(125),\n          i = o(551);\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getName = function () {\n          return \"DragArea\";\n        }, t.getName = function () {\n          return \"DragArea\";\n        }, t.prototype.getDSGroupdef = function () {}, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          i._setDefaultConfig.call(this), t.isDrag = !0, t.anchoralpha = n.HUNDREDSTRING, t.enablemousetracking = !0, t.defaultcrosslinethickness = 1;\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = c;\n    },\n    870: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(871),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    871: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(872)),\n          r = i(o(875)),\n          n = o(125);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"Kagi\";\n        }, t.prototype.getName = function () {\n          return \"Kagi\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Kagi Chart\", t.singleseries = !0, t.hasLegend = !1, t.defaultDatasetType = \"kagi\", t.setAdaptiveMin = !0, t.anchorborderthickness = 1, t.anchorimageurl = void 0, t.anchorimagepadding = 1, t.anchorsides = 1, t.anchoralpha = void 0, t.anchorbgalpha = \"100\", t.anchorimagealpha = \"100\", t.anchorimagescale = 100, t.anchorstartangle = 90, t.anchorshadow = 0, t.anchorbgcolor = void 0, t.anchorbordercolor = void 0, t.anchorradius = 3, t.showvalues = 1, t.plotfillalpha = \"70\", t.linedashlen = 5, t.linedashgap = 4, t.linedashed = void 0, t.linealpha = \"100\", t.linethickness = 2, t.drawfullareaborder = 1, t.connectnulldata = 0, t.zeroplanethickness = 1, t.enablemousetracking = !0, t.zeroplanealpha = 40, t.showzeroplaneontop = 0;\n        }, t.prototype._getDataset = function () {\n          var e = [];\n          return this.iterateComponents(function (t) {\n            t.getType && \"dataset\" === t.getType() && e.push(t);\n          }), e;\n        }, t.prototype._postSpaceManagement = function () {\n          var e,\n              t = this.config,\n              o = this.getChildren(\"xAxis\")[0],\n              a = this.getChildren(\"yAxis\")[0],\n              r = this.getChildren(\"canvas\")[0],\n              i = r.config,\n              l = i.canvasBorderWidth,\n              s = (0, n.pluckNumber)(i.canvasPadding, 15),\n              c = i.canvasPaddingTop,\n              u = i.canvasPaddingBottom,\n              p = i.canvasPaddingLeft,\n              h = i.canvasPaddingRight,\n              d = this.getFromEnv(\"dataSource\").chart,\n              f = this._getDataset()[0].config,\n              g = f && f.shiftCount,\n              m = (0, n.pluckNumber)(o.getAxisConfig(\"axisMinValue\"), 0),\n              v = (0, n.pluckNumber)(o.getAxisConfig(\"axisMaxValue\"), g - 1),\n              b = this.config.canvasWidth,\n              y = (0, n.pluckNumber)(d.maxhshiftpercent, 10),\n              x = b - 2 * s;\n\n          a && a.setAxisDimention({\n            x: t.canvasLeft - l,\n            y: t.canvasTop + c,\n            opposite: t.canvasRight + l,\n            axisLength: t.canvasHeight - c - u\n          }), this._setPosition(), f && (y = y <= 0 ? 10 : y, e = f.xShiftLength = Math.min(x / g, y * x / 100), v = Math.max(v, 1)), r.setCanvasPadding(), o && o.setAxisConfig({\n            canvasPaddingLeft: Math.max(p, s) + e / 2,\n            canvasPaddingRight: Math.max(h, s) + e / 2\n          }), o && o.setAxisDimention({\n            x: this.config.canvasLeft + s + e / 2,\n            axisLength: e * (v - m),\n            y: t.canvasBottom + (t.shift || 0) + l,\n            opposite: t.canvasTop - l\n          }), this.allocateDimensionOfChartMenuBar();\n        }, t.prototype._setPosition = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c = this.getFromEnv(\"dataSource\"),\n              u = this._getDataset()[0],\n              p = c.data || u && u[0] && u[0].data,\n              h = u.components.data,\n              d = h && h.length,\n              f = this.getChildren(\"yAxis\")[0],\n              g = 0,\n              m = g,\n              v = [];\n\n          for (e = 0; e < d; e++) {\n            o = (t = h[e].config).setValue, (c = h[e]) || (c = h[e] = {\n              graphics: {}\n            }), t.isDefined || (o = t.plotValue), o = (0, n.pluck)(t.plotValue, o), t.plotY = (0, n.toPrecision)(f.getPixel(t.setValue), 2), t.graphY = o && (0, n.toPrecision)(f.getPixel(o), 2), t.plotX = m, t.isShift ? (m = g += 1, p && v.push(p[e])) : e === d - 1 && p && v.push(p[e]), e && (s = h[e - 1].config, a = t && t.objParams && t.objParams.isRally, r = t && t.objParams && t.objParams.lastHigh, i = t && t.objParams && t.objParams.lastLow, l = t && t.objParams && t.objParams.isRallyInitialised, s && l && s.isRally !== t.isRally ? (t.isChanged = !0, t.ty = (0, n.toPrecision)(f.getPixel(a ? r : i), 2)) : t.isChanged = !1);\n          }\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    872: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = n(o(359)),\n          r = n(o(873));\n\n      function n(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function i(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var l = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return i(t, e), t.getName = function () {\n          return \"WaterFall2D\";\n        }, t.prototype.getName = function () {\n          return \"WaterFall2D\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Waterfall Chart\", t.singleseries = !0, t.hasLegend = !1, t.defaultDatasetType = \"Waterfall2D\", t.enablemousetracking = !0;\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = l;\n    },\n    873: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(125),\n          r = l(o(432)),\n          n = o(132),\n          i = l(o(874));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      (0, n.addDep)({\n        name: \"waterFall2DAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var c = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"waterFall2D\";\n        }, t.prototype.configure = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H,\n              W,\n              z,\n              U,\n              J,\n              K,\n              q,\n              Y,\n              X,\n              Q,\n              Z,\n              $,\n              ee,\n              te,\n              oe,\n              ae,\n              re,\n              ne,\n              ie,\n              le = this.getFromEnv(\"chart\"),\n              se = this.config,\n              ce = this.config.JSONData,\n              ue = ce.data,\n              pe = ue && ue.length,\n              he = this.getFromEnv(\"xAxis\").getTicksLen(),\n              de = Math.min(he, pe),\n              fe = le.getFromEnv(\"dataSource\").chart,\n              ge = this.getFromEnv(\"color-manager\"),\n              me = this.index || this.positionIndex,\n              ve = ge.getPlotColor(me),\n              be = (0, a.pluckNumber)(ce.dashed, fe.plotborderdashed),\n              ye = (0, a.pluckNumber)(fe.useplotgradientcolor, 1),\n              xe = (0, a.pluckNumber)(fe.showtooltip, 1),\n              ke = (0, a.parseUnsafeString)(fe.yaxisname),\n              we = (0, a.parseUnsafeString)(fe.xaxisname),\n              Ce = (0, a.parseUnsafeString)((0, a.pluck)(fe.tooltipsepchar, \", \")),\n              Ne = this.components.data,\n              Se = this.getFromEnv(\"number-formatter\"),\n              Ae = {},\n              Ee = Ae.dataObj || (Ae.dataObj = {}),\n              De = Ee.chart || (Ee.chart = {}),\n              _e = (0, a.pluck)(fe.connectorthickness, 1),\n              Te = -Infinity,\n              Le = Infinity,\n              Pe = 0,\n              Oe = 0,\n              Ve = 0;\n\n          for (this.setState(\"visible\", 1 === (0, a.pluckNumber)(ce.visible, !Number(ce.initiallyhidden), 1)), r = se.showplotborder = (0, a.pluckNumber)(fe.showplotborder, 1), se.plotBorderThickness = h = r ? (0, a.pluckNumber)(fe.plotborderthickness, 1) : 0, se.isRoundEdges = d = (0, a.pluckNumber)(fe.useroundedges, 0), se.plotBorderAlpha = y = r ? (0, a.pluck)(fe.plotborderalpha, m, \"100\") : 0, se.plotBorderColor = x = (0, a.pluck)(fe.plotbordercolor, ge.getColor(\"plotBorderColor\").split(\",\")[0]), se.plotgradientcolor = b = ye ? (0, a.getDefinedColor)(fe.plotgradientcolor, ge.getColor(\"plotGradientColor\")) : \"\", se.plotDashLen = u = (0, a.pluckNumber)(fe.plotborderdashlen, 6), se.plotDashGap = p = (0, a.pluckNumber)(fe.plotborderdashgap, 3), se.use3DLighting = (0, a.pluckNumber)(fe.use3dlighting, 1), se.showSum = Y = (0, a.pluckNumber)(fe.showsumatend, 1), se.plotColor = ve = (0, a.pluck)(ce.color, ve), se.plotfillAngle = g = (0, a.pluckNumber)(360 - fe.plotfillangle, 90), se.showShadow = d ? (0, a.pluckNumber)(fe.showshadow, 1) : (0, a.pluckNumber)(fe.showshadow, ge.getColor(\"showShadow\")), se.showHoverEffect = f = (0, a.pluckNumber)(fe.plothovereffect, fe.showhovereffect, void 0), se.plotFillAlpha = m = (0, a.pluck)(ce.alpha, fe.plotfillalpha, \"100\"), se.plotRadius = (0, a.pluckNumber)(fe.useRoundEdges, se.isRoundEdges ? 1 : 0), se.plotFillRatio = v = (0, a.pluck)(ce.ratio, fe.plotfillratio), se.plotBorderDashStyle = w = be ? (0, a.getDashStyle)(u, p) : \"none\", se.showValues = (0, a.pluckNumber)(ce.showvalues, fe.showvalues, 1), se.valuePadding = (0, a.pluckNumber)(fe.valuepadding, 2), se.enableAnimation = W = (0, a.pluckNumber)(fe.animation, fe.defaultanimation, 1), se.animation = !!W && {\n            duration: 1e3 * (0, a.pluckNumber)(fe.animationduration, 1)\n          }, De.transposeAnimation = se.transposeAnimation = (0, a.pluckNumber)(fe.transposeanimation, De.transposeAnimation, W), se.transposeAnimDuration = 1e3 * (0, a.pluckNumber)(fe.transposeanimduration, .2), se.showTooltip = (0, a.pluckNumber)(fe.showtooltip, 1), se.stack100Percent = (0, a.pluckNumber)(le.stack100percent, fe.stack100percent, 0), se.definedGroupPadding = Math.max((0, a.pluckNumber)(fe.plotspacepercent), 0), se.plotSpacePercent = Math.max((0, a.pluckNumber)(fe.plotspacepercent, 20) % 100, 0), se.maxColWidth = (0, a.pluckNumber)(fe.maxcolwidth, 50), se.showPercentValues = (0, a.pluckNumber)(fe.showpercentvalues, 0), se.showPercentInToolTip = (0, a.pluckNumber)(fe.showpercentintooltip, 0), se.plotPaddingPercent = (0, a.pluckNumber)(fe.plotpaddingpercent), se.rotateValues = (0, a.pluckNumber)(fe.rotatevalues) ? 270 : 0, se.placeValuesInside = (0, a.pluckNumber)(fe.placevaluesinside, 0), se.parentYAxis = z = \"s\" === (0, a.pluck)(ce.parentyaxis && ce.parentyaxis.toLowerCase(), \"p\") ? 1 : 0, se.defaultPadding = {\n            left: .5,\n            right: .5\n          }, this.setState(\"dirty\", !0), Ne || (Ne = this.components.data = []), se.zLine = te = {\n            step: !0,\n            data: [],\n            dashStyle: \"1\" === fe.connectordashed ? (0, a.getDashStyle)((0, a.pluckNumber)(fe.connectordashlen, 2), (0, a.pluckNumber)(fe.connectordashgap, 2)) : \"none\",\n            useForwardSteps: !0,\n            color: (0, a.convertColor)((0, a.pluck)(fe.connectorcolor, \"000000\"), (0, a.pluck)(fe.connectoralpha, 100)),\n            lineWidth: _e\n          }, q = 0; q < de; q += 1) {\n            C = ue[q], Z = Se.getCleanValue(C.value), ee = (0, a.pluckNumber)(C.issum, 0), C.vline || ee ? delete C._value : (Pe += Z, C._value = Z);\n          }\n\n          for ($ = Se.dataLabels(Pe), Y && (Y = !0, de += 1, re = {\n            label: (0, a.getFirstValue)(fe.sumlabel, \"Total\"),\n            _value: Pe,\n            value: Pe,\n            issum: 1,\n            cumulative: 1\n          }), q = 0, ne = 0; q < de; q += 1) {\n            C = ue[q], A = (S = Ne[q]) && S.config, S || (S = Ne[q] = {\n              graphics: {}\n            }), S.config || (A = Ne[q].config = {}), !C && Y && (C = ue[q] = re), ve = (0, a.pluck)(C.color, ge.getPlotColor(q)), S.vline || (Z = C._value, delete C._value, A.issum = ee = (0, a.pluckNumber)(C.issum, 0), ae = A.isCumulative = (0, a.pluckNumber)(C.cumulative, 1), ee ? (Z = ae ? Oe : Oe === Ve ? Oe : Oe - Ve, A.lastComTotal = Ve, Ve = Oe, te.data.push({\n              y: null,\n              x: ne - .5\n            })) : Oe += Z, Te = Math.max(Te, Oe), Le = Math.min(Le, Oe), A.total = Oe, Q = A.showLabel = (0, a.pluckNumber)(C.showlabel, fe.showlabels, 1), X = A.dataLabel = (0, a.parseUnsafeString)(Q ? (0, a.getFirstValue)(C.label, C.name) : \"\"), Z > 0 ? (oe = (0, a.pluck)(C.color, fe.positivecolor, ve), 0 !== f && (D = (0, a.pluck)(C.positivehovercolor, fe.positivehovercolor, fe.plotfillhovercolor, fe.columnhovercolor, oe))) : (oe = (0, a.pluck)(C.color, fe.negativecolor, ve), 0 !== f && (D = (0, a.pluck)(C.negativehovercolor, fe.negativehovercolor, fe.plotfillhovercolor, fe.columnhovercolor, oe))), ie = Z < 0 ? 360 - g : g, m = (0, a.pluck)(C.alpha, se.plotFillAlpha), U = (0, a.pluckNumber)(C.dashed, be), J = (0, a.pluckNumber)(C.dashlen, u), K = p = (0, a.pluckNumber)(C.dashgap, p), A.showValue = (0, a.pluckNumber)(C.showvalue, se.showValues), A.setValue = N = Z, A.setLink = (0, a.pluck)(C.link), A.toolTipValue = G = Se.dataLabels(N, z), A.setDisplayValue = H = (0, a.getValidValue)((0, a.parseUnsafeString)(C.displayvalue)), A.displayValue = (0, a.pluck)(H, G), A.plotBorderDashStyle = k = 1 === U ? (0, a.getDashStyle)(J, K) : 0 === U ? \"none\" : w, A.shadow = {\n              opacity: se.showShadow ? m / 100 : 0\n            }, A.colorArr = E = (0, a.getColumnColor)(oe + \",\" + b.replace(/,+?$/, \"\"), m, v, ie, d, x, y.toString(), 0, !1), 0 !== f && (_ = (0, a.pluck)(C.alpha, C.hoveralpha, ce.hoveralpha, fe.plotfillhoveralpha, fe.columnhoveralpha, m), !(T = (0, a.pluck)(C.hovergradientcolor, ce.hovergradientcolor, fe.plothovergradientcolor, b)) && (T = \"\"), L = (0, a.pluck)(C.hoverratio, ce.hoverratio, C.ratio, fe.plothoverratio, v), P = (0, a.pluckNumber)(360 - C.hoverangle, 360 - ce.hoverangle, 360 - fe.plothoverangle, ie), O = (0, a.pluck)(C.borderhovercolor, ce.borderhovercolor, fe.plotborderhovercolor, x), V = (0, a.pluck)(C.borderhoveralpha, ce.borderhoveralpha, fe.plotborderhoveralpha, y, m), M = (0, a.pluckNumber)(C.borderhoverthickness, ce.borderhoverthickness, fe.plotborderhoverthickness, h), F = (0, a.pluckNumber)(C.borderhoverdashed, ce.borderhoverdashed, fe.plotborderhoverdashed), I = (0, a.pluckNumber)(C.borderhoverdashgap, ce.borderhoverdashgap, fe.plotborderhoverdashgap, u), B = (0, a.pluckNumber)(C.borderhoverdashlen, ce.borderhoverdashlen, fe.plotborderhoverdashlen, p), R = F ? (0, a.getDashStyle)(B, I) : k, 1 === f && D === ve && (D = (0, a.getLightColor)(D, 70)), j = (0, a.getColumnColor)(D + \",\" + T, _, L, P, d, O, V.toString(), 0, !1), A.setRolloutAttr = {\n              fill: (0, a.toRaphaelColor)(E[0]),\n              stroke: r && (0, a.toRaphaelColor)(E[1]),\n              \"stroke-width\": h,\n              \"stroke-dasharray\": k\n            }, A.setRolloverAttr = {\n              fill: (0, a.toRaphaelColor)(j[0]),\n              stroke: r && (0, a.toRaphaelColor)(j[1]),\n              \"stroke-width\": M,\n              \"stroke-dasharray\": R\n            }), n = A.toolTipValue, A.origToolText = l = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(C.tooltext, ce.plottooltext, fe.plottooltext))), xe ? void 0 !== l ? (s = [1, 2, 3, 5, 6, 7, 20, 21, 24, 25], i = {\n              formattedValue: n,\n              label: X,\n              yaxisName: ke,\n              xaxisName: we,\n              cumulativeValue: Oe,\n              cumulativeDataValue: Se.dataLabels(Oe),\n              sum: $,\n              unformattedSum: Pe\n            }, c = (0, a.parseTooltext)(l, s, i, C, fe, ce)) : c = null !== n && (\"\" !== X ? X + Ce : \"\") : c = !1, te.data.push({\n              y: null === Z ? null : Oe,\n              x: ne\n            }), ne += 1, A.originalPlotColor = ve, A.toolText = c, A.setTooltext = c, A._x = q, A._y = N);\n          }\n\n          for (se.maxValue = Te, se.minValue = Le, se.connectNullData = (0, a.pluckNumber)(fe.connectnulldata, 0), se.showConnectors = (0, a.pluckNumber)(fe.showconnectors, 1), t = ce.catData, q = 0; q < t.length; q += 1) {\n            o = t[q], ue.splice(o.index, 0, o.data);\n          }\n\n          this.getFromEnv(\"xAxis\").setTickValues(ue), this.config.maxminFlag = !1;\n        }, t.prototype.createCoordinates = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s = this.components.data,\n              c = this.getFromEnv(\"chart\").isBar,\n              u = this.getFromEnv(\"yAxis\"),\n              p = this.getFromEnv(\"xAxis\"),\n              h = u.getAxisBase(),\n              d = u.getPixel(h),\n              f = p.config.isVertical,\n              g = this.getFromEnv(\"chartConfig\"),\n              m = g.xDepth || 0,\n              v = g.yDepth || 0,\n              b = s.length,\n              y = this.components,\n              x = this.groupManager,\n              k = x && x.stackConf,\n              w = y.data;\n\n          for (!c && (m = -m), c && (v = -v), a = 0; a < b; a++) {\n            t = (e = w[a]) && e.config, void 0 !== e && (l = t._y, t.issum ? t.isCumulative ? o = null : (o = t.lastComTotal, l += t.lastComTotal) : (o = w[a - 1] && w[a - 1].config.total) && (l += o), r = p.getPixel(k && k[a].x || t._x) + m, n = u.getPixel(l) + v, i = (o ? u.getPixel(o) : d) + v, f ? (t._Px = n, t._Py = r, t._Pby = r, t._Pbx = i) : (t._Px = r, t._Py = n, t._Pby = i, t._Pbx = r));\n          }\n        }, t.prototype.getDataLimits = function () {\n          var e,\n              t,\n              o = this.components.data,\n              a = this.config,\n              r = o.length,\n              n = -Infinity,\n              i = +Infinity;\n\n          for (e = 0; e < r; e++) {\n            o[e] && void 0 !== (t = o[e].config.total) && (n = Math.max(n, t), i = Math.min(i, t));\n          }\n\n          return a.maxValue = n, a.minValue = i, {\n            max: a.maxValue,\n            min: a.minValue\n          };\n        }, t.prototype.drawPlots = function (t) {\n          e.prototype.drawPlots.call(this, t), this.config.showConnectors ? this.drawLine() : this.getContainer(\"commonElemsGroup\").hide();\n        }, t.prototype.drawLine = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c = this.config,\n              u = this.getFromEnv(\"xAxis\"),\n              p = this.getFromEnv(\"yAxis\"),\n              h = p.getAxisBase(),\n              d = p.getPixel(h),\n              f = this.getContainer(\"commonElemsGroup\"),\n              g = this.getFromEnv(\"columnWidth\") / 2,\n              m = this.getFromEnv(\"animationManager\"),\n              v = c.zLine,\n              b = c.connectNullData,\n              y = v.data,\n              x = y.length,\n              k = this._graphics,\n              w = v.dashStyle,\n              C = v.color,\n              N = v.lineWidth,\n              S = k.zLine,\n              A = null,\n              E = [],\n              D = [];\n\n          for (p.yBasePos = d, f.toFront().show(), e = 0; e < x; e += 1) {\n            null === (n = (r = y[e]).y) ? (D.length = 0, 0 === b && (A = null)) : (i = (0, a.pluckNumber)(r.x, e), t = p.getPixel(n), o = u.getPixel(i), o = (0, a.getCrispValue)(o, N, N).position, t = (0, a.getCrispValue)(t, N, N).position, null !== A ? (D.length && (E = E.concat(D), D.length = 0), E.push(\"M\", l, A, \"m\", -g, 0, \"H\", o, \"h\", g, \"m\", 0, t - A)) : D.push(\"M\", o, t), l = o, A = t);\n          }\n\n          s = m.setAnimation({\n            el: S || \"path\",\n            attr: {\n              path: E,\n              \"stroke-linecap\": \"round\",\n              \"stroke-opacity\": 1,\n              \"stroke-dasharray\": w,\n              stroke: C,\n              \"stroke-linejoin\": N >= 2 ? \"round\" : \"miter\",\n              \"stroke-width\": N\n            },\n            container: f,\n            component: this,\n            label: \"path\"\n          }), S || this.addGraphicalElement(\"zLine\", s);\n        }, t;\n      }(r[\"default\"]);\n\n      t[\"default\"] = c;\n    },\n    874: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(433),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.dataset.waterFall2D\": n[\"default\"][\"initial.dataset.column\"]\n      };\n    },\n    875: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(449)),\n          r = o(125),\n          n = o(132),\n          i = l(o(876));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = function c(e) {\n        return void 0 !== e && null !== e;\n      },\n          u = \"M\",\n          p = r.hasTouch ? r.TOUCH_THRESHOLD_PIXELS : r.CLICK_THRESHOLD_PIXELS;\n\n      (0, n.addDep)({\n        name: \"kagiAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var h = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.manageSpace = function () {}, o.drawCommonElements = function () {}, o;\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"kagi\";\n        }, t.prototype._parseShadowOptions = function () {\n          var e = this.getFromEnv(\"chart\"),\n              t = this.config,\n              o = e.getFromEnv(\"dataSource\").chart;\n          return {\n            opacity: (0, r.pluckNumber)(o.showshadow, 1) ? t.alpha / 100 : 0\n          };\n        }, t.prototype.configureAttributes = function (t) {\n          e.prototype.configureAttributes.call(this, t);\n\n          var o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H = this.getFromEnv(\"chart\"),\n              W = this.getFromEnv(\"xAxis\"),\n              z = 0,\n              U = [],\n              J = 0;\n\n          for (o = this.components, n = o.data, i = this.config, l = this.config.JSONData.data, s = H.getFromEnv(\"dataSource\").chart, u = i.maxValue, p = i.minValue, a = o.removeDataArr || (o.removeDataArr = []), h = !1, d = 0, f = (0, r.pluckNumber)(s.reversalvalue, -1), g = (0, r.pluckNumber)(s.reversalpercentage, 5), C = 0; C < n.length; C += 1) {\n            n[C].config.__nullCount = J, null === n[C].config.setValue && (a.push(n.splice(C, 1)[0]), J++, C -= 1);\n          }\n\n          if (n.length) {\n            for (i.rallyColor = (0, r.pluck)(s.rallycolor, \"FF0000\"), i.rallyAlpha = (0, r.pluckNumber)(s.rallyalpha, s.linealpha, 100), i.declineColor = (0, r.pluck)(s.declinecolor, \"0000FF\"), i.declineAlpha = (0, r.pluckNumber)(s.declinealpha, s.linealpha, 100), i.canvasPadding = (0, r.pluckNumber)(s.canvaspadding, 15), i.maxHShiftPercent = (0, r.pluckNumber)(s.maxhshiftpercent, 10), i.rallyThickness = (0, r.pluckNumber)(s.rallythickness, s.linethickness, 2), m = (0, r.pluckNumber)(s.rallydashlen, s.linedashlen, 5), v = (0, r.pluckNumber)(s.rallydashgap, s.linedashgap, 4), i.declineThickness = (0, r.pluckNumber)(s.declinethickness, s.linethickness, 2), b = (0, r.pluckNumber)(s.declinedashlen, s.linedashlen, 5), y = (0, r.pluckNumber)(s.declinedashgap, s.linedashgap, 4), i.lineDashed = {\n              \"true\": (0, r.pluckNumber)(s.rallydashed, s.linedashed, 0),\n              \"false\": (0, r.pluckNumber)(s.declinedashed, s.linedashed, 0)\n            }, i.rallyDashed = (0, r.pluckNumber)(s.rallydashed, s.linedashed, 0) ? (0, r.getDashStyle)(m, v) : \"none\", i.declineDashed = (0, r.pluckNumber)(s.declinedashed, s.linedashed, 0) ? (0, r.getDashStyle)(b, y) : \"none\", i.canvasPadding = (0, r.pluckNumber)(s.canvaspadding, this.canvasPadding, 15), f = f > 0 ? f : g * (u - p) / 100, x = n[0].config.setValue, k = function k(e, t) {\n              for (var o, a = 1, r = n[0].config.setValue; a < e;) {\n                o = n[a].config.setValue, t ? o <= r && (n[a].config.isDefined = !1) : o >= r && (n[a].config.isDefined = !1), a += 1;\n              }\n\n              n[0].config.vAlign = t ? \"bottom\" : \"top\", n[0].config.align = \"center\";\n            }, w = l.length, C = 0, N = 0; N < w; N += 1, C += 1) {\n              if ((!(S = l[N]) || !S.vline) && (_ = n[C] && n[C].config, A && (A = !1), _ && (_.isDefined = !0), C && _)) {\n                if (_.isShift = void 0, E = n[C - 1].config, _.vAlign = \"middle\", _.align = \"right\", _.showLabel = !1, D = null, P = _.setValue, T = n[C + 1] && n[C + 1].config.setValue, L = Math.abs(x - P), h ? P < V && O ? O = !1 : P > M && !O && (O = !0) : (P > x && L > f ? (V = x, M = null, F = !0, h = !0, k(C, O = !0)) : P < x && L > f ? (V = null, M = x, F = !1, h = !0, k(C, O = !1)) : (O = null, F = null, h = !1), c(E) && (E.isRally = O), null !== O && (n[0].config.isRally = O)), _.isRally = O, (F && P < x || !F && P > x) && (D = x), B = D || P, L = Math.abs(B - T), I = null === F ? null : F ? B > T && L >= f : B < T && L >= f, E && E.isShift) for (F ? (V = x, j = \"bottom\") : F || (M = x, j = \"top\"), G = \"center\", R = C; R > 1; R -= 1) {\n                  if (n[R].y == x) {\n                    n[R].vAlign = j, n[R].align = G, n[R].showLabel = !0;\n                    break;\n                  }\n                }\n                I ? (d += 1, A = !0, F = !F, _.isShift = !0, x = B, U.push(l[C + _.__nullCount]), z = this._appendCategory(z, C, U, 0)) : F && P > x || !F && P < x ? x = P : D = x, _.plotValue = D, _.objParams = {\n                  isRally: O,\n                  lastHigh: M,\n                  lastLow: V,\n                  isRallyInitialised: h\n                };\n              }\n            }\n\n            this._appendCategory(z, C, U, 1), U.push(S), W.setTickValues(U), i.shiftCount = d + 1;\n          }\n        }, t.prototype._appendCategory = function (e, t, o, a) {\n          var n,\n              i,\n              l,\n              s,\n              c = this.config.JSONData.catData;\n          if (e < c.length) for (n = e; n < c.length; e = n += 1) {\n            if (l = (i = c[n]).data, (s = i.index - (n + 1)) < t) l.lineposition = (0, r.pluckNumber)(l.lineposition, a);else if (s > t) break;\n            o.push(l);\n          }\n          return e;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s = this.getFromEnv(\"xAxis\"),\n              c = this.config,\n              u = c.trackIndex,\n              p = this.components.data,\n              h = p.length;\n\n          for (e += s.getTranslation(), i = Math.floor(Math.max(s.getValue(e - c.maxRadius), 0)), a = Math.ceil(Math.min(s.getValue(e + c.maxRadius), h - 1)); a >= i; a--) {\n            for (o = h = (l = u[a]) && l.length; o >= 0; o--) {\n              if (r = l[o], n = this.isWithinShape(p[r], r, e, t)) return n;\n            }\n          }\n        }, t.prototype.getClip = function (e) {\n          var t = this.getFromEnv(\"chart\").getChildren(\"canvas\")[0].config,\n              o = [t.canvasLeft, t.canvasTop, 0, t.canvasTop + t.canvasHeight];\n          return o[2] += \"init\" === e ? 0 : t.canvasLeft + t.canvasWidth, o;\n        }, t.prototype.parsePlotAttributes = function (e, t) {\n          var o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u = t,\n              h = void 0,\n              d = this.config.JSONData,\n              f = this.config,\n              g = this.getFromEnv(\"xAxis\"),\n              m = void 0,\n              v = this.components.data,\n              b = void 0,\n              y = void 0,\n              x = void 0,\n              k = void 0,\n              w = void 0,\n              C = {},\n              N = void 0,\n              S = this.getState(\"visible\"),\n              A = void 0;\n          e = e.config, N = (b = v[u]).config, h = e.trackerConfig = {}, w = N.hoverEffects, l = N.setValue, s = N.displayValue, o = b._xPos = g.getPixel(e.plotX), a = b._yPos = e.plotY, b._index = e.plotX, c = (C = N.anchorProps).symbol, n = e.finalTooltext = e.toolText, i = N.setLink, void 0 !== a && !isNaN(a) && e.isDefined && ((m = e.eventArgs = e.eventArgs || {}).index = u, m.link = i, m.value = l, m.displayValue = s, m.categoryLabel = N.label, m.toolText = n, m.id = f.userID, m.datasetIndex = 0, m.datasetName = d.seriesname, m.visible = S, y = x = {}, C.imageUrl && (N.anchorImageLoaded = !1), A = {\n            path: (0, r.polyPathToPath)([c[1] || 2, o, a, C.radius, C.startAngle, 0]),\n            fill: (0, r.toRaphaelColor)({\n              color: C.bgColor,\n              alpha: C.bgAlpha\n            }),\n            stroke: (0, r.toRaphaelColor)({\n              color: C.borderColor,\n              alpha: C.borderAlpha\n            }),\n            \"stroke-width\": C.borderThickness,\n            visibility: C.radius ? S : \"hidden\"\n          }, k = Math.max(C.radius, w && w.anchorRadius || 0, p) + C.borderThickness / 2, h.trackerRadius = k, w.enabled && (x = {\n            path: (0, r.polyPathToPath)([w.anchorSides || 2, o, a, w.anchorRadius, w.startAngle, w.dip]),\n            fill: (0, r.toRaphaelColor)({\n              color: w.anchorColor,\n              alpha: w.anchorBgAlpha\n            }),\n            stroke: (0, r.toRaphaelColor)({\n              color: w.anchorBorderColor,\n              alpha: w.anchorBorderAlpha\n            }),\n            \"stroke-width\": w.anchorBorderThickness\n          }, y = {\n            path: (0, r.polyPathToPath)([C.sides, o, a, C.radius, C.startAngle, 0]),\n            fill: (0, r.toRaphaelColor)({\n              color: C.bgColor,\n              alpha: C.bgAlpha\n            }),\n            stroke: (0, r.toRaphaelColor)({\n              color: C.borderColor,\n              alpha: C.borderAlpha\n            }),\n            \"stroke-width\": C.borderThickness\n          }, w.attrs = {\n            hoverEnabled: w.enabled,\n            anchorRadius: C.radius,\n            anchorHoverRadius: w.anchorRadius\n          }, w.attrs.setRolloverAttr = x, w.attrs.setRolloutAttr = y, C.isAnchorHoverRadius = w.attrs.anchorRadius)), e.props = {\n            element: {\n              attr: A\n            }\n          };\n        }, t.prototype.parseLabelAttributes = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k = this.getFromEnv(\"chart\"),\n              w = k.config,\n              C = this.getFromEnv(\"smartLabel\"),\n              N = k.config.dataLabelStyle,\n              S = w.rotatevalues ? 270 : 0,\n              A = w.canvasTop,\n              E = A + w.canvasHeight,\n              D = {},\n              _ = {},\n              T = t,\n              L = this.components.data.length;\n          y = (d = e && e.config) && d.setValue, void 0 !== e && void 0 !== y && null !== y && !0 !== d.labelSkip ? (t > 0 && (_ = {\n            x: this.components.data[T - 1]._xPos,\n            y: this.components.data[T - 1]._yPos\n          }), t < L - 1 && (D = {\n            x: this.components.data[T + 1]._xPos,\n            y: this.components.data[T + 1]._yPos\n          }), h = d.anchorProps, n = e.graphics, m = e._yPos || e.config._Py, g = e._xPos || e.config._Px, b = n.element ? n.image && .5 * n.element.attr(\"height\") || h.radius - 3 : 0, a = w.valuepadding + 2 + b, o = d.displayValue, v = d.showValue, c(o) && \"\" !== o && v && (x = {\n            text: o,\n            fill: N.color,\n            \"text-bound\": [N.backgroundColor, N.borderColor, N.borderThickness, N.borderPadding, N.borderRadius, N.borderDash]\n          }, r = C.getOriSize(o), S ? (d._state = {\n            labelWidth: r.height,\n            labelHeight: r.width\n          }, d._rotated = !0) : (d._state = {\n            labelWidth: r.width,\n            labelHeight: r.height\n          }, d._rotated = !1), i = l = S ? r.width : r.height, i += a, p = .5 * l + a, s = m, u = g, i += 4, f = Number(S) >= 1 ? r.height : r.width, d._valueBelowPoint = 0, D.y > s ? _.y < s ? u -= a + 3 + .5 * f : m - i < A ? (u -= a + 3 + .5 * f, s = A + i / 2) : s -= p : _.y > s ? u -= a + 3 + .5 * f : m + i > E ? (u -= a + 3 + .5 * f, s = E - i / 2) : (s += p + 2, d._valueBelowPoint = 1), x.x = u, x.y = s), d.props = d.props || {}, d.props.label = {\n            attr: x\n          }) : d && delete d.labelSkip;\n        }, t.prototype.allocatePosition = function () {\n          var e,\n              t = void 0,\n              o = this,\n              a = o.config,\n              n = o.components.data,\n              i = n && n.length,\n              l = o.getFromEnv(\"xAxis\"),\n              s = o.components.data,\n              c = void 0,\n              p = void 0,\n              h = l.getPixel(0),\n              d = l.getPixel(1) - h,\n              f = {\n            \"true\": a.rallyThickness,\n            \"false\": a.declineThickness\n          },\n              g = void 0,\n              m = void 0,\n              v = l.getPixel(0),\n              b = n[0] && !!n[0].isRally,\n              y = void 0,\n              x = h - d / 2,\n              k = void 0,\n              w = void 0,\n              C = void 0;\n\n          if (a.imagesLoaded = 0, n.length) {\n            if (g = a.rallyPath = [], m = a.declinePath = [], s = o.components.data = s || [], n[0].config.setValue) k = n[0].config.plotY;else for (t = 1; t < i; t += 1) {\n              if (n[t].config.setValue) {\n                k = n[t].config.plotY;\n                break;\n              }\n            }\n\n            for (b = !!n[0].config.isRally, e = Math.round(k) + f[b] % 2 / 2, b ? g.push(u, x, e, \"H\", v) : m.push(u, x, e, \"H\", v), (0, r.fcEach)(n, function (e, t) {\n              e = e.config, c = s[t], p = c.config, p.setValue, (w = n[t + 1] && n[t + 1].config || {}) && (C = [u, v, k], b = e.isRally, e.isShift && (v += d, k = e.graphY, C.push(\"H\", v), C[2] = Math.round(C[2]) + f[b] % 2 / 2, C = C.toString(), b ? g.push(C) : m.push(C), C = [u, v, k]), w.isChanged && (k = w.ty, C.push(\"V\", k), C[1] = Math.round(C[1]) + f[!!b] % 2 / 2, C = C.toString(), b ? g.push(C) : m.push(C), C = [u, v, k]), y = w.isRally, w.graphY !== C[2] && void 0 !== w.graphY && (C.push(\"V\", w.graphY), C[1] = Math.round(C[1]) + f[!!y] % 2 / 2, C = C.toString(), y ? g.push(C) : m.push(C)), w.graphY && (k = w.graphY)), o.parsePlotAttributes(c, t);\n            }), t = 0; t < n.length; t++) {\n              o.parseLabelAttributes(s[t], t);\n            }\n          }\n        }, t.prototype.drawPlots = function () {\n          var e = void 0,\n              t = this,\n              o = t.getGraphicalElement(),\n              a = t.getFromEnv(\"animationManager\"),\n              n = t.config,\n              i = n.trackIndex = {},\n              l = t.components.data,\n              s = void 0,\n              c = void 0,\n              u = t.components.data,\n              p = void 0,\n              h = void 0,\n              d = n.shadow,\n              f = void 0,\n              g = {},\n              m = void 0,\n              v = n.rallyThickness,\n              b = n.declineThickness,\n              y = {\n            stroke: (0, r.toRaphaelColor)({\n              color: n.rallyColor,\n              alpha: n.rallyAlpha\n            }),\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            \"stroke-width\": v,\n            \"stroke-dasharray\": n.rallyDashed\n          },\n              x = {\n            stroke: (0, r.toRaphaelColor)({\n              color: n.declineColor,\n              alpha: n.declineAlpha\n            }),\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            \"stroke-width\": b,\n            \"stroke-dasharray\": n.declineDashed\n          },\n              k = o.rallyElem,\n              w = void 0,\n              C = o.declineElem,\n              N = void 0,\n              S = void 0,\n              A = t.getContainer(\"commonElemsGroup\"),\n              E = t.getContainer(\"plotGroup\"),\n              D = t.getContainer(\"shadowGroup\"),\n              _ = void 0;\n\n          if (!l.length) return w && w.hide(), void (N && N.hide());\n          w && w.show(), N && N.show(), (0, r.fcEach)(l, function (o, r) {\n            o = o.config, p = u[r], m = p.config, e = p.graphics, _ = e.image, h = m.hoverEffects, s = p._yPos, i[o.plotX] || (i[o.plotX] = []), i[o.plotX].push(r), p._index = o.plotX, g = m.anchorProps, f = g.shadow, void 0 !== s && !isNaN(s) && o.isDefined ? (g.imageUrl ? t.drawAnchorImage(p) : (_ && _.hide(), c = e.element, S = o.props.element.attr, (c = e.element = a.setAnimation({\n              el: c || \"path\",\n              attr: S,\n              container: E,\n              component: t,\n              label: \"anchor\"\n            })).show().shadow(f, D).data(\"anchorRadius\", g.radius).data(\"anchorHoverRadius\", h.anchorRadius).data(\"hoverEnabled\", h.enabled).data(\"eventArgs\", o.eventArgs)), h.enabled && c && c.data(\"anchorRadius\", g.radius).data(\"anchorHoverRadius\", h.anchorRadius).data(\"hoverEnabled\", h.enabled).data(\"setRolloverAttr\", h.attrs.setRolloverAttr).data(\"setRolloutAttr\", h.attrs.setRolloutAttr).data(\"eventArgs\", o.eventArgs)) : (e.element && e.element.hide(), _ && _.hide());\n          }), y.path = n.rallyPath, (w = a.setAnimation({\n            el: k || \"path\",\n            attr: y,\n            container: A,\n            component: t,\n            label: \"line\"\n          })).shadow(v && d, D), k || t.addGraphicalElement(\"rallyElem\", w), x.path = n.declinePath, (N = a.setAnimation({\n            el: C || \"path\",\n            attr: x,\n            container: A,\n            component: t,\n            label: \"line\"\n          })).shadow(b && d, D), C || t.addGraphicalElement(\"declineElem\", N);\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = h;\n    },\n    876: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.kagi\": n[\"default\"][\"*.dataset.line\"]\n      };\n    },\n    877: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(872),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    878: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(879),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    879: function _(e, t, o) {\n      \"use strict\";\n\n      (function (e) {\n        t.__esModule = !0;\n        var a = o(125),\n            r = c(o(534)),\n            n = c(o(880)),\n            i = o(132),\n            l = o(855),\n            s = c(o(251));\n\n        function c(e) {\n          return e && e.__esModule ? e : {\n            \"default\": e\n          };\n        }\n\n        function u(e, t) {\n          if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n          e.prototype = Object.create(t && t.prototype, {\n            constructor: {\n              value: e,\n              enumerable: !1,\n              writable: !0,\n              configurable: !0\n            }\n          }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n            for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n              var r = o[a],\n                  n = Object.getOwnPropertyDescriptor(t, r);\n              n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n            }\n          }(e, t));\n        }\n\n        var p = (0, i.getDep)(\"redraphael\", \"plugin\"),\n            h = \",\",\n            d = \"config\",\n            f = \"rgba(192,192,192,\" + (a.isIE ? .002 : 1e-6) + \")\",\n            g = \"visible\",\n            m = \"hidden\",\n            v = \"round\",\n            b = \"pointer\",\n            y = Math.PI / 180,\n            x = \"M\",\n            k = \"L\",\n            w = \"t\";\n        (0, s[\"default\"])(p), p.addSymbol({\n          resizeIcon: function resizeIcon(e, t, o) {\n            var r,\n                n = (0, a.pluckNumber)(o, 15) / 3,\n                i = [];\n\n            for (n < 0 && (e += (o = -o) - (n = -n) / 2, t += o - n / 2), r = 3; r > 0; r -= 1) {\n              i.push(x, e - n * r, t - 3, k, e - 3, t - n * r);\n            }\n\n            return i;\n          },\n          closeIcon: function closeIcon(e, t, o) {\n            var a = e,\n                r = t,\n                n = 1.3 * o,\n                i = 43 * y,\n                l = 48 * y,\n                s = a + n * Math.cos(i),\n                c = r + n * Math.sin(i),\n                u = .71 * (o - 2),\n                p = .71 * (o - 2),\n                h = function (e, t, o, a, r, n) {\n              return [\"A\", o, a, 0, n, r, e, t];\n            }(a + n * Math.cos(l), r + n * Math.sin(l), n, n, 0, 1);\n\n            return [x, s, c].concat(h).concat([x, e + u, t - p, k, e - u, t + p, x, e - u, t - p, k, e + u, t + p]);\n          },\n          configureIcon: function configureIcon(e, t, o) {\n            var a = .25,\n                r = .71 * (o -= 1),\n                n = .71 * (o + 2),\n                i = e - o,\n                l = t - o,\n                s = e + o,\n                c = t + o,\n                u = e + .5,\n                p = t + .5,\n                h = e - .5,\n                d = t - .5,\n                f = i - 2,\n                g = l - 2,\n                m = s + 2,\n                v = c + 2,\n                b = e + r,\n                y = t + r,\n                w = e - r,\n                C = t - r,\n                N = e + n,\n                S = t + n,\n                A = e - n,\n                E = t - n;\n            return [x, i, p, k, f, p, f, d, i, d, w - a, C + a, A - a, E + a, A + a, E - a, w + a, C - a, h, l, h, g, u, g, u, l, b - a, C - a, N - a, E - a, N + a, E + a, b + a, C + a, s, d, m, d, m, p, s, p, b + a, y - a, N + a, S - a, N - a, S + a, b - a, y + a, u, c, u, v, h, v, h, c, w + a, y + a, A + a, S + a, A - a, S - a, w - a, y - a, \"Z\"];\n          },\n          axisIcon: function axisIcon(e, t, o) {\n            var a = .33 * (o -= 1),\n                r = o / 2,\n                n = e - o,\n                i = t - o,\n                l = e + r,\n                s = t + o,\n                c = e - r,\n                u = t + a,\n                p = t - a;\n            return [x, n, i, k, l, i, l, s, n, s, x, c, u, k, l, u, x, c, p, k, l, p];\n          },\n          loggerIcon: function loggerIcon(e, t, o) {\n            var a = (e -= o -= 1) + 2 * o,\n                r = e + 2,\n                n = a - 2,\n                i = (t -= o) + 2,\n                l = i + o,\n                s = l + 2;\n            return [x, e, t, k, a, t, a, i, n, i, n, l, a, l, a, s, e, s, e, l, r, l, r, i, e, i, e, t];\n          }\n        });\n\n        var C = function (t) {\n          function o() {\n            !function (e, t) {\n              if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n            }(this, o);\n\n            var e = function (e, t) {\n              if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n              return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n            }(this, t.call(this));\n\n            return e.isXY = !0, e.defaultZeroPlaneHighlighted = !1, e.eiMethods = {\n              getData: function getData(e) {\n                var t = this.apiInstance;\n                return t && t.getData(e);\n              },\n              restoreData: function restoreData() {\n                var e = this.apiInstance;\n                return e && e.restoreData();\n              },\n              submitData: function submitData() {\n                var e = this.apiInstance;\n                return e && e.submitData();\n              }\n            }, e;\n          }\n\n          return u(o, t), o.getName = function () {\n            return \"SelectScatter\";\n          }, o.prototype.parseChartAttr = function (e) {\n            t.prototype.parseChartAttr.call(this, e), this.config.formBtnTitle = (0, a.pluck)(e.chart.submittext, e.chart.formbtntitle, \"Submit\"), this.config.restoreBtnTitle = (0, a.pluck)(e.chart.restoretext, e.chart.restorebtntitle, \"Restore\");\n          }, o.prototype.getName = function () {\n            return \"SelectScatter\";\n          }, o.prototype.configureAttributes = function (e) {\n            var o = this.getFromEnv(\"chart\").config,\n                r = this.getFromEnv(\"dataSource\").chart || {};\n            o.formAction = (0, a.getValidValue)(r.formaction), o.enableSubmit = (0, a.pluckNumber)(r.enablesubmit, r.showformbtn, 1) && o.formAction, o.enableRestore = (0, a.pluckNumber)(r.enablerestore, r.showrestorebtn, 1), t.prototype.configureAttributes.call(this, e);\n          }, o.prototype.__setDefaultConfig = function () {\n            t.prototype.__setDefaultConfig.call(this);\n\n            var e = this.config;\n            e.friendlyName = \"Dragable Scatter Chart\", e.hasLegend = !0, e.defaultDatasetType = \"selectScatter\", e.allowreversexaxis = !0, e.enablemousetracking = !0;\n          }, o.prototype._createToolBox = function () {\n            t.prototype._createToolBox.call(this);\n\n            var e,\n                o = this,\n                a = o.getFromEnv(\"chartConfig\"),\n                r = o.getFromEnv(\"toolbar\"),\n                n = r.getChild(\"hamburgerMenu-\" + r.getId() + \"-\" + o.getId() + \"-0\"),\n                i = [];\n            a.enableRestore && i.push({\n              name: a.restoreBtnTitle,\n              handler: function handler() {\n                o.restoreData();\n              },\n              action: \"click\"\n            }), a.enableSubmit && (e = {\n              name: a.formBtnTitle,\n              handler: function handler() {\n                l.submitData.call(o);\n              },\n              action: \"click\"\n            }, i.push(e)), i.length > 0 && n.appendInMenu(i);\n          }, o.prototype.getData = function (t) {\n            var o,\n                r,\n                n,\n                i = this.getCollatedData(),\n                l = [],\n                s = i.dataset,\n                c = s && s.length || 0,\n                u = 0,\n                p = 0;\n            if (t) l = /^json$/gi.test(t) ? i : /^csv$/gi.test(t) ? this.getCSVString() : e.core.transcodeData(i, \"json\", t);else for (; u < c; u += 1) {\n              if (r = s[u]) {\n                for ((n = o = (r = s[u] && s[u].data) && r.length || 0) && (l[p] || (l[p] = [(0, a.getValidValue)(s[u].id, \"null\")])); n--;) {\n                  l[p][n + 1] = (0, a.getValidValue)(r[n].id, \"null\");\n                }\n\n                o && (p += 1);\n              }\n            }\n            return l;\n          }, o.prototype.getCSVString = function () {\n            for (var e = this.getData(), t = e.length; t--;) {\n              e[t] = e[t].join(h);\n            }\n\n            return e.join(\"|\");\n          }, o.prototype.getCollatedData = function (e) {\n            var t,\n                o,\n                r,\n                n,\n                i,\n                l,\n                s,\n                c,\n                u,\n                p,\n                h,\n                d = this.getDatasets(),\n                f = this.config._selectEleArr,\n                g = f && f.length || 0,\n                m = e || this.getFromEnv(\"dataSource\"),\n                v = (0, a.extend2)({}, m),\n                b = v.dataset,\n                y = b && b.length,\n                x = !1,\n                k = [];\n            if (!g || !y) return m;\n\n            for (; g--;) {\n              if (n = f[g]) for (c = n.startX, u = n.endX, p = n.startY, h = n.endY, i = y; i--;) {\n                if (d[i].getState(\"visible\")) for (k[i] || (k[i] = {\n                  data: []\n                }), s = (r = b[i].data) && r.length; s--;) {\n                  t = (l = r[s]).x, o = l.y, t > c && t < u && o < p && o > h && (k[i].data[s] = x = !0);\n                }\n              }\n            }\n\n            for (; y--;) {\n              for (s = (r = b[y].data) && r.length; s--;) {\n                k[y] && k[y].data[s] || r.splice(s, 1);\n              }\n            }\n\n            return x ? v : m;\n          }, o.prototype.createSelectionBox = function (e) {\n            (function (e) {\n              var t,\n                  o = e.chart,\n                  r = o.getFromEnv(\"paper\"),\n                  n = o.config,\n                  i = o.getChildren(\"yAxis\")[0],\n                  l = o.getChildren(\"xAxis\")[0],\n                  s = e.selectionLeft,\n                  c = e.selectionTop,\n                  u = e.selectionWidth,\n                  p = e.selectionHeight,\n                  y = s + u,\n                  x = c + p,\n                  k = u > 15 && p > 15,\n                  C = {\n                resizeEleRadius: 15,\n                canvasTop: n.canvasTop,\n                canvasRight: n.canvasLeft + n.canvasWidth,\n                canvasLeft: n.canvasLeft,\n                canvasBottom: n.canvasTop + n.canvasHeight\n              },\n                  N = o.getChildContainer(\"trackerGroup\"),\n                  S = n._selectEleArr || (n._selectEleArr = []);\n              C.index = S.length, C.id = \"SELECT_\" + C.index, C.selectBoxG = t = r.group(\"selection-box\", N).toFront(), C.selectBoxTracker = r.rect(s, c, u, p, t).attr({\n                \"stroke-width\": 1,\n                stroke: (0, a.toRaphaelColor)(n.selectBorderColor),\n                fill: n.selectFillColor\n              }).css({\n                cursor: \"move\"\n              }), C.selectBoxTracker.node._isTrackerElem = !0, C.selectBoxTracker.data(d, {\n                position: 6,\n                selectEleObj: C,\n                chart: o,\n                xChange: !0,\n                yChange: !0\n              }), C.topTracker = r.rect(s, c - 6, u, 12, t).attr({\n                \"stroke-width\": 0,\n                fill: f\n              }).css(\"cursor\", a.hasSVG ? \"ns-resize\" : \"n-resize\"), C.topTracker.node._isTrackerElem = !0, C.topTracker.data(d, {\n                position: 1,\n                selectEleObj: C,\n                yChange: !0,\n                chart: o\n              }), C.rightTracker = r.rect(s + u - 6, c, 12, p, t).attr({\n                \"stroke-width\": 0,\n                fill: f\n              }).css(\"cursor\", a.hasSVG ? \"ew-resize\" : \"w-resize\"), C.rightTracker.node._isTrackerElem = !0, C.rightTracker.data(d, {\n                position: 2,\n                chart: o,\n                selectEleObj: C,\n                xChange: !0\n              }), C.bottomTracker = r.rect(s, c + p - 6, u, 12, t).attr({\n                \"stroke-width\": 0,\n                fill: f\n              }).css(\"cursor\", a.hasSVG ? \"ns-resize\" : \"n-resize\"), C.bottomTracker.node._isTrackerElem = !0, C.bottomTracker.data(d, {\n                position: 3,\n                chart: o,\n                selectEleObj: C,\n                yChange: !0\n              }), C.leftTracker = r.rect(s - 6, c, 12, p, t).attr({\n                \"stroke-width\": 0,\n                fill: f\n              }).css(\"cursor\", a.hasSVG ? \"ew-resize\" : \"e-resize\"), C.leftTracker.node._isTrackerElem = !0, C.leftTracker.data(d, {\n                position: 4,\n                chart: o,\n                selectEleObj: C,\n                xChange: !0\n              }), C.cornerInnerSymbol = r.symbol(\"resizeIcon\", 0, 0, 15, t).attr({\n                transform: w + y + h + x,\n                \"stroke-width\": 1,\n                visibility: k ? g : m,\n                stroke: \"#999999\"\n              }), C.cornerInnerSymbol.node._isTrackerElem = !0, C.cornerOuterSymbol = r.symbol(\"resizeIcon\", 0, 0, -12, t).attr({\n                transform: w + y + h + x,\n                strokeWidth: 1,\n                visibility: k ? m : g,\n                stroke: \"#777777\"\n              }), C.cornerOuterSymbol.node._isTrackerElem = !0, C.resizeTracker = r.circle(y, x, 12, t).attr({\n                \"stroke-width\": 1,\n                stroke: f,\n                fill: f\n              }).css(\"cursor\", a.hasSVG ? \"nwse-resize\" : \"nw-resize\"), C.resizeTracker.node._isTrackerElem = !0, C.resizeTracker.data(d, {\n                position: 5,\n                chart: o,\n                selectEleObj: C,\n                yChange: !0,\n                xChange: !0\n              }), C.closeButton = r.symbol(\"closeIcon\", 0, 0, 6, t).attr({\n                transform: \"t\" + y + h + c,\n                \"stroke-width\": 2,\n                stroke: n.selectionCancelButtonBorderColor,\n                fill: n.selectionCancelButtonFillColor,\n                \"stroke-linecap\": v,\n                \"stroke-linejoin\": v\n              }).css({\n                cursor: b,\n                _cursor: \"hand\"\n              }).on(\"fc-click\", function () {\n                o.deleteSelection(this, o);\n              }), C.closeButton.node._isTrackerElem = !0, C.closeButton.data(d, {\n                chart: o,\n                index: C.index\n              }), C.startX = l.getValue(s), C.startY = i.getValue(c), C.endX = l.getValue(y), C.endY = i.getValue(x), C.isVisible = !0, S.push(C), o.bindDragEvent(C);\n            }).call(this, e);\n          }, o.prototype._deleteAllSelection = function () {\n            var e,\n                t,\n                o,\n                a,\n                r,\n                n = this.config._selectEleArr;\n\n            if (n) {\n              for (t = 0, o = n.length; t < o; t++) {\n                for (r in e = n[t]) {\n                  e.hasOwnProperty(r) && ((a = e[r]).remove && a.remove(), delete e[r]);\n                }\n              }\n\n              delete this.config._selectEleArr;\n            }\n          }, o.prototype.deleteSelection = function (e, t) {\n            (function (e, t) {\n              var o,\n                  a,\n                  r,\n                  n,\n                  i,\n                  l = e.data(d).index,\n                  s = t.config._selectEleArr,\n                  c = t.getChildren(\"xAxis\")[0],\n                  u = t.getChildren(\"yAxis\")[0];\n\n              for (r in i = {\n                selectionLeft: (n = (o = s.find(function (e) {\n                  return e.index === l;\n                })).selectBoxTracker.getBBox()).x,\n                selectionTop: n.y,\n                selectionWidth: n.width,\n                selectionHeight: n.height,\n                startXValue: c.getValue(n.x, 1),\n                startYValue: u.getValue(n.y, 1),\n                endXValue: c.getValue(n.x + n.width, 1),\n                endYValue: u.getValue(n.y + n.height, 1),\n                data: t.getCollatedData(),\n                id: o.id\n              }, o) {\n                o.hasOwnProperty(r) && ((a = o[r]).remove && a.remove(), delete o[r]);\n              }\n\n              s = s.filter(function (e) {\n                return Object.keys(e).length;\n              }), t.fireChartInstanceEvent(\"selectionRemoved\", i);\n            }).call(this, e, t);\n          }, o.prototype.bindDragEvent = function (e) {\n            var t;\n\n            for (t in e) {\n              /Tracker/.test(t) && e[t].drag(this.move, this.start, this.up);\n            }\n          }, o.prototype.start = function () {\n            var e = this.data(d).selectEleObj,\n                t = e.topTracker,\n                o = e.rightTracker,\n                a = e.bottomTracker,\n                r = e.leftTracker,\n                n = e.resizeTracker,\n                i = t.data(d),\n                l = o.data(d),\n                s = a.data(d),\n                c = r.data(d),\n                u = n.data(d),\n                p = e.selectBoxTracker.data(d),\n                h = e.selectBoxTracker.getBBox();\n            i.ox = h.x, i.oy = h.y, l.ox = h.x2, l.oy = h.y, s.ox = h.x, s.oy = h.y2, c.ox = h.x, c.oy = h.y, i.ox = h.x, i.oy = h.y, u.ox = h.x2, u.oy = h.y2, p.ox = h.x, p.oy = h.y, p.ow = h.width, p.oh = h.height, p.ox2 = h.x2, p.oy2 = h.y2, e.selectBoxG.toFront(), t.hide(), o.hide(), a.hide(), r.hide(), n.hide(), this.show();\n          }, o.prototype.move = function (e) {\n            var t,\n                o,\n                a,\n                r,\n                n = this.data(d),\n                i = n.selectEleObj,\n                l = n.chart,\n                s = i.topTracker,\n                c = i.rightTracker,\n                u = i.bottomTracker,\n                p = i.leftTracker,\n                h = i.resizeTracker,\n                f = i.selectBoxTracker,\n                g = i.canvasLeft,\n                m = i.canvasRight,\n                v = i.canvasTop,\n                b = i.canvasBottom,\n                y = l.getChildren(\"xAxis\")[0],\n                x = l.getChildren(\"yAxis\")[0],\n                k = f.data(d),\n                w = {},\n                C = e.data[0],\n                N = e.data[1];\n\n            switch (C = n.xChange ? C : 0, N = n.yChange ? N : 0, a = C + n.ox, r = N + n.oy, a = Math.min(m - (n.ow || 0), Math.max(a, g)), r = Math.min(b - (n.oh || 0), Math.max(r, v)), n.position) {\n              case 1:\n                w.y = Math.min(k.oy2, r), w.height = Math.abs(k.oy2 - r) || 1, s.attr({\n                  y: r + -6\n                });\n                break;\n\n              case 2:\n                w.x = Math.min(k.ox, a), w.width = Math.abs(k.ox - a) || 1, c.attr({\n                  x: a + -6\n                });\n                break;\n\n              case 3:\n                w.y = Math.min(k.oy, r), w.height = Math.abs(k.oy - r) || 1, u.attr({\n                  y: r + -6\n                });\n                break;\n\n              case 4:\n                w.x = Math.min(k.ox2, a), w.width = Math.abs(k.ox2 - a) || 1, p.attr({\n                  x: a + -6\n                });\n                break;\n\n              case 5:\n                w.x = Math.min(k.ox, a), w.width = Math.abs(k.ox - a) || 1, w.y = Math.min(k.oy, r), w.height = Math.abs(k.oy - r) || 1, h.attr({\n                  cx: a,\n                  cy: r\n                });\n                break;\n\n              default:\n                w.x = a, w.y = r;\n            }\n\n            this.data(\"dragStarted\") || (o = {\n              selectionLeft: (t = f.getBBox()).x,\n              selectionTop: t.y,\n              selectionWidth: t.width,\n              selectionHeight: t.height,\n              startXValue: y.getValue(t.x),\n              startYValue: x.getValue(t.y),\n              endXValue: y.getValue(t.x + t.width),\n              endYValue: x.getValue(t.y + t.height),\n              id: i.id\n            }, l.fireChartInstanceEvent(\"BeforeSelectionUpdate\", o), this.data(\"dragStarted\", 1)), f.animate(w), i.isVisible && (i.closeButton.hide(), i.cornerInnerSymbol.hide(), i.cornerOuterSymbol.hide(), i.isVisible = !1);\n          }, o.prototype.up = function () {\n            var e,\n                t,\n                o = this,\n                a = o.data(d),\n                r = a.selectEleObj,\n                n = a.chart,\n                i = n.getChildren(\"xAxis\")[0],\n                l = n.getChildren(\"yAxis\")[0],\n                s = r.topTracker,\n                c = r.rightTracker,\n                u = r.bottomTracker,\n                p = r.leftTracker,\n                f = r.resizeTracker,\n                g = r.selectBoxTracker;\n            setTimeout(function () {\n              e = g.getBBox(), r.startX = i.getValue(e.x), r.startY = l.getValue(e.y), r.endX = i.getValue(e.x2), r.endY = l.getValue(e.y2), s.attr({\n                x: e.x,\n                y: e.y + -6,\n                width: e.width\n              }), c.attr({\n                x: e.x2 + -6,\n                y: e.y,\n                height: e.height\n              }), u.attr({\n                x: e.x,\n                y: e.y2 + -6,\n                width: e.width\n              }), p.attr({\n                x: e.x + -6,\n                y: e.y,\n                height: e.height\n              }), f.attr({\n                cx: e.x2,\n                cy: e.y2\n              }), r.closeButton.transform(w + e.x2 + h + e.y), r.cornerInnerSymbol.transform(w + e.x2 + h + e.y2), r.cornerOuterSymbol.transform(w + e.x2 + h + e.y2), r.closeButton.show(), e.width < 15 || e.height < 15 ? (r.cornerInnerSymbol.hide(), r.cornerOuterSymbol.show()) : (r.cornerInnerSymbol.show(), r.cornerOuterSymbol.hide()), r.isVisible = !0, s.show(), c.show(), u.show(), p.show(), f.show(), o.data(\"dragStarted\") && (t = {\n                selectionLeft: e.x,\n                selectionTop: e.y,\n                selectionWidth: e.width,\n                selectionHeight: e.height,\n                startXValue: i.getValue(e.x),\n                startYValue: l.getValue(e.y),\n                endXValue: i.getValue(e.x + e.width),\n                endYValue: l.getValue(e.y + e.height),\n                data: n.getCollatedData(),\n                id: r.id\n              }, n.fireChartInstanceEvent(\"SelectionUpdated\", t), o.data(\"dragStarted\", 0));\n            }, 100);\n          }, o.prototype.restoreData = function () {\n            var e,\n                t = [];\n\n            for (this.iterateComponents(function (e) {\n              e.getType && \"dataset\" === e.getType() && t.push(e);\n            }), this._deleteAllSelection(), e = 0; e < t.length; e++) {\n              t[e].asyncDraw();\n            }\n\n            return this.fireChartInstanceEvent(\"dataRestored\", {}), !0;\n          }, o.prototype._postSpaceManagement = function () {\n            t.prototype._postSpaceManagement.call(this), this._deleteAllSelection();\n          }, o.prototype.getDSdef = function () {\n            return n[\"default\"];\n          }, o.prototype.getDSGroupdef = function () {}, o;\n        }(r[\"default\"]);\n\n        t[\"default\"] = C;\n      }).call(this, o(118));\n    },\n    880: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(538)),\n          r = o(125),\n          n = o(132),\n          i = l(o(881));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = r.preDefStr.altHGridColorStr,\n          u = r.preDefStr.altHGridAlphaStr;\n      (0, n.addDep)({\n        name: \"selectScatterAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var p = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"selectScatter\";\n        }, t.prototype.configure = function (t) {\n          e.prototype.configure.call(this, t);\n          var o = this.getFromEnv(\"chart\"),\n              a = o.config,\n              i = o.getFromEnv(\"dataSource\").chart,\n              l = this.getFromEnv(\"color-manager\"),\n              s = (0, r.pluck)(i.selectbordercolor, l.getColor(\"canvasBorderColor\")),\n              p = (0, r.pluckNumber)(i.selectborderalpha, l.getColor(\"canvasBorderAlpha\"));\n          a.selectBorderColor = {\n            FCcolor: {\n              color: s,\n              alpha: p\n            }\n          }, a.selectFillColor = (0, r.convertColor)((0, r.pluck)(i.selectfillcolor, l.getColor(c)), (0, r.pluckNumber)(i.selectfillalpha, l.getColor(u))), a.selectionCancelButtonBorderColor = (0, r.convertColor)((0, r.pluck)(i.selectioncancelbuttonbordercolor, s), (0, r.pluckNumber)(i.selectioncancelbuttonborderalpha, p)), a.selectionCancelButtonFillColor = (0, r.convertColor)((0, r.pluck)(i.selectioncancelbuttonfillcolor, \"FFFFFF\"), (0, r.pluckNumber)(i.selectioncancelbuttonfillalpha, 100)), a.connativeZoom = !1, a.zoomType = \"xy\", i.submitdataasxml !== r.ZEROSTRING || i.formdataformat || (i.formdataformat = (0, n.getDepsByType)(\"transcoder\").csv && \"csv\"), a.formDataFormat = (0, r.pluck)(i.formdataformat), a.formTarget = (0, r.pluck)(i.formtarget, \"_self\"), a.formMethod = (0, r.pluck)(i.formmethod, \"POST\"), a.submitFormAsAjax = (0, r.pluckNumber)(i.submitformusingajax, 1);\n        }, t.prototype.draw = function () {\n          e.prototype.draw.call(this);\n          var t = this.getFromEnv(\"chart\"),\n              o = t.getFromEnv(\"chart-container\"),\n              a = this.getFromEnv(\"xAxis\"),\n              n = this.getFromEnv(\"yAxis\");\n          (0, r.bindSelectionEvent)(t, {\n            selectionStart: function selectionStart(e) {\n              var t = (0, r.getMouseCoordinate)(o, e.originalEvent),\n                  i = (0, r.extend2)({\n                selectionLeft: e.selectionLeft,\n                selectionTop: e.selectionTop,\n                selectionWidth: e.selectionWidth,\n                selectionHeight: e.selectionHeight,\n                startXValue: a.getValue(e.selectionLeft, 1),\n                startYValue: n.getValue(e.selectionTop, 1)\n              }, t);\n              e.chart.fireChartInstanceEvent(\"selectionStart\", i);\n            },\n            selectionEnd: function selectionEnd(e) {\n              var t = (0, r.getMouseCoordinate)(o, e.originalEvent),\n                  i = (0, r.extend2)({\n                selectionLeft: e.selectionLeft,\n                selectionTop: e.selectionTop,\n                selectionWidth: e.selectionWidth,\n                selectionHeight: e.selectionHeight,\n                startXValue: a.getValue(e.selectionLeft, 1),\n                startYValue: n.getValue(e.selectionTop, 1),\n                endXValue: a.getValue(e.selectionLeft + e.selectionWidth, 1),\n                endYValue: n.getValue(e.selectionTop + e.selectionHeight, 1)\n              }, t);\n              e.chart.fireChartInstanceEvent(\"selectionEnd\", i), e.chart.createSelectionBox(e);\n            }\n          });\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = p;\n    },\n    881: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.selectScatter\": n[\"default\"][\"*.dataset.line\"]\n      };\n    },\n    882: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(883),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    883: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = n(o(362)),\n          r = n(o(884));\n\n      function n(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function i(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var l = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.defaultPaletteOptions = null, o.registerFactory(\"dataset\", r[\"default\"], [\"canvas\"]), o;\n        }\n\n        return i(t, e), t.getName = function () {\n          return \"MultilevelPie\";\n        }, t.prototype.getName = function () {\n          return \"MultilevelPie\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.is3D = !1, t.friendlyName = \"Multi-level Pie Chart\", t.hasLegend = !1, t.defaultDatasetType = \"multiLevelPie\", t.valuefontbold = 0, t.skipCanvasDrawing = !0;\n        }, t.prototype._checkInvalidSpecificData = function () {\n          var e = this.getFromEnv(\"dataSource\").category,\n              t = e && e[0] && e[0].category;\n          if (!e || !t || !Array.isArray(t)) return !0;\n        }, t.prototype._spaceManager = function () {\n          var e,\n              t = this.config;\n          this._allocateSpace(this._manageActionBarSpace && this._manageActionBarSpace(.225 * t.availableHeight) || {}), e = .7 * t.canvasHeight, this._manageChartMenuBar(e), this.allocateDimensionOfChartMenuBar();\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = l;\n    },\n    884: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o,\n            a = e.getFromEnv(\"dataSource\"),\n            n = void 0,\n            l = {};\n        o = (t = e.config.categories = a.category || []).length, !n && o && (l = t, n = o), o ? (0, r.datasetFactory)(e, i[\"default\"], \"dataset\", n, [l]) : e.setChartMessage();\n      };\n      var a,\n          r = o(125),\n          n = o(885),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      };\n    },\n    885: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = c(o(476)),\n          r = o(125),\n          n = o(132),\n          i = c(o(886)),\n          l = o(136),\n          s = c(o(216));\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = (0, n.getDep)(\"redraphael\", \"plugin\"),\n          h = /^[0-9]+\\%?$|^([0-9]+[.][0-9]+)\\%?$/;\n      (0, n.addDep)({\n        name: \"multilevelpieAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      }), (0, s[\"default\"])(p);\n\n      var d = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.components = {\n            data: []\n          }, o.graphics = {}, o;\n        }\n\n        return u(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"multiLevelPie\";\n        }, t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.config.JSONData = e;\n\n          var t,\n              o,\n              a,\n              n = this.getFromEnv(\"chart\"),\n              i = n.config,\n              l = this.config || (this.config = {}),\n              s = l.dataLabelOptions || (l.dataLabelOptions = {}),\n              c = l.piePlotOptions,\n              u = n.config.style,\n              p = this.config.JSONData,\n              d = n.getFromEnv(\"dataSource\").chart,\n              f = l.enableAnimation = (0, r.pluckNumber)(d.animation, d.defaultanimation, 1),\n              g = (0, r.pluckNumber)(-d.centerangle, 180),\n              m = (0, r.pluckNumber)(d.totalangle, 360),\n              v = function v(e, t) {\n            for (var o = this.data(\"plotItem\"); e.graphics.element;) {\n              e.graphics.element.attr({\n                fill: \"mouseover\" === t ? l.hoverFillColor : (e.config || o).color\n              }), e = e.config.parent;\n            }\n          },\n              b = function x(e, t) {\n            var o,\n                a = this.data(\"plotItem\");\n\n            for (e.graphics.element.attr({\n              fill: \"mouseover\" === t ? l.hoverFillColor : (e.config || a).color\n            }), o = 0; o < (e.components.data && e.components.data.length); o++) {\n              x.call(this, e.components.data[o], t);\n            }\n          },\n              y = function y(e) {\n            if (l.useHoverColor) {\n              var t = this.data(\"plotItem\"),\n                  o = t.selfRef;\n              l.highlightParentPieSlices || l.highlightChildPieSlices ? !l.highlightParentPieSlices && l.highlightChildPieSlices ? b.call(this, o, e) : l.highlightParentPieSlices && !l.highlightChildPieSlices ? v.call(this, o, e) : l.highlightParentPieSlices && l.highlightChildPieSlices && (v.call(this, o, e), b.call(this, o, e)) : o.graphics.element.attr({\n                fill: \"mouseover\" === e ? l.hoverFillColor : (o.config || t).color\n              });\n            }\n          };\n\n          l.animation = !!f && {\n            duration: 1e3 * (0, r.pluckNumber)(d.animationduration, d.moveduration, 1)\n          }, l.showShadow = (0, r.pluckNumber)(d.showshadow, 0), l.useHoverColor = Boolean((0, r.pluckNumber)(d.usehovercolor, 1)), l.hoverFillColor = (0, r.convertColor)((0, r.pluck)(d.hoverfillcolor, \"FF5904\"), (0, r.pluckNumber)(d.hoverfillalpha, 100)), t = (t = (0, r.getFirstValue)(d.valuebordercolor, \"\")) ? (0, r.convertColor)(t, (0, r.pluckNumber)(d.valueborderalpha, d.valuebgalpha, d.valuealpha, 100)) : \"\", !s.style && (s.style = {\n            fontFamily: (0, r.pluck)(d.valuefont, u.fontFamily),\n            fontSize: (0, r.pluckNumber)(d.valuefontsize, (o = u.fontSize, a = 10, parseInt(o, a || 10))) + \"px\",\n            color: (0, r.convertColor)((0, r.pluck)(d.valuefontcolor, u.color), (0, r.pluckNumber)(d.valuefontalpha, d.valuealpha, 100)),\n            fontWeight: (0, r.pluckNumber)(d.valuefontbold) ? \"bold\" : \"normal\",\n            fontStyle: (0, r.pluckNumber)(d.valuefontitalic) ? \"italic\" : \"normal\",\n            backgroundColor: d.valuebgcolor ? (0, r.convertColor)(d.valuebgcolor, (0, r.pluckNumber)(d.valuebgalpha, d.valuealpha, 100)) : \"\",\n            border: t || d.valuebgcolor ? (0, r.pluckNumber)(d.valueborderthickness, 1) + \"px solid\" : \"\",\n            borderPadding: (0, r.pluckNumber)(d.valueborderpadding, 2),\n            borderThickness: (0, r.pluckNumber)(d.valueborderthickness, u.borderThickness, 1),\n            borderRadius: (0, r.pluckNumber)(d.valueborderradius, u.borderRadius, 0),\n            borderColor: t,\n            borderDash: (0, r.pluckNumber)(d.valueborderdashed, 0) ? (0, r.getDashStyle)((0, r.pluckNumber)(d.valueborderdashlen, 4), (0, r.pluckNumber)(d.valueborderdashgap, 2)) : \"none\"\n          }), !c && (c = l.piePlotOptions = {}), c.allowPointSelect = !1, l.borderColor = (0, r.convertColor)((0, r.pluck)(d.plotbordercolor, d.piebordercolor, \"FFFFFF\"), d.showplotborder != r.ZEROSTRING ? (0, r.pluck)(d.plotborderalpha, d.pieborderalpha, 100) : 0), l.showTooltip = (0, r.pluckNumber)(d.showtooltip, 1), l.borderWidth = (0, r.pluckNumber)(d.pieborderthickness, d.plotborderthickness, 1), c.startingAngle = 0, c.size = \"100%\", l.highlightParentPieSlices = (0, r.pluckNumber)(d.highlightparentpieslices, d.highlightparentpienodes, 1), l.highlightChildPieSlices = (0, r.pluckNumber)(d.highlightchildpieslices, d.highlightchildpienodes, 0), l.showLabels = (0, r.pluckNumber)(d.showlabels, 1), l.showValues = (0, r.pluckNumber)(d.showvalues, 0), l.showValuesInTooltip = (0, r.pluckNumber)(d.showvaluesintooltip, d.showvalues, 0), l.showPercentValues = (0, r.pluckNumber)(d.showpercentvalues, d.showpercentagevalues, 0), l.showPercentInTooltip = (0, r.pluckNumber)(d.showpercentintooltip, 0), l.toolTipSepChar = (0, r.pluck)(d.tooltipsepchar, d.hovercapsepchar, r.COMMASPACE), l.labelSepChar = (0, r.pluck)(d.labelsepchar, l.toolTipSepChar), l.tooltext = d.plottooltext, l.alpha = (0, r.pluck)(d.plotfillalpha, d.piefillalpha, 100), l.startAngle = (g - m / 2) * (Math.PI / 180), l.endtAngle = (g + m / 2) * (Math.PI / 180), l.initialAngle = l.endtAngle, l.originX = (0, r.pluckNumber)(d.originx), l.originY = (0, r.pluckNumber)(d.originy), l.events = {\n            mouseOver: function mouseOver() {\n              y.call(this, \"mouseover\");\n            },\n            mouseOut: function mouseOut() {\n              y.call(this, \"mouseout\");\n            }\n          }, i.plotBorderWidth = 0, i.plotBorderWidth = 0, l.maxLevel = this.addMSPieCat(p, 1, this, l.startAngle, l.endtAngle), l.pieRadius = parseInt(d.pieradius, 10), l.innerRadius = \"0\", h.test(d.innerradius) && (l.innerRadius = (0, r.pluck)(d.innerradius)), s.distance = 0, s.placeLabelsInside = !0;\n        }, t.prototype.removalFn = function (e, t) {\n          this.getFromEnv(\"animationManager\").setAnimation({\n            el: e,\n            label: \"element\" === t ? \"ringpath\" : \"label\",\n            component: this,\n            callback: function callback() {\n              this.remove();\n            }\n          });\n        }, t.prototype.removeGraphics = function (e) {\n          var t,\n              o,\n              a,\n              r = e.components && e.components.data,\n              n = e.graphics;\n          if (r) for (a = r.length, t = 0; t < a; t += 1) {\n            this.removeGraphics(r[t]);\n          }\n          if (e.graphics) for (o in n) {\n            n.hasOwnProperty(o) && this.removalFn(e.graphics[o], o);\n          }\n        }, t.prototype.removeChild = function (e, t, o) {\n          var a, r;\n          if (e.length) for (a = 0; a < e.length; a += 1) {\n            r = e[a], o ? this.removalFn(r, t, o) : this.removeGraphics(r, t);\n          } else for (a in e) {\n            this.removeChild(e[a], t, a);\n          }\n        }, t.prototype.addMSPieCat = function (e, t, o, a, n) {\n          var i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k = (0, r.extend2)([], e),\n              w = k.length,\n              C = this,\n              N = o.components.data,\n              S = C.config,\n              A = S.borderWidth,\n              E = S.borderColor,\n              D = C.getFromEnv(\"number-formatter\"),\n              _ = C.getFromEnv(\"color-manager\"),\n              T = 0,\n              L = S.labelSepChar,\n              P = t,\n              O = N.length,\n              V = function V() {\n            C.removeChild.apply(C, arguments);\n          },\n              M = k.length,\n              F = n - a,\n              I = 0;\n\n          for (h = 0; h < w; h += 1) {\n            (u = k[h])._userValue = D.getCleanValue(u.value, !0), u._value = (0, r.pluckNumber)(u._userValue, 1), T += u._value;\n          }\n\n          for (c = F / (T = T || 1), h = w - 1; h >= 0; h -= 1) {\n            p = c * (u = k[h])._value, d = (0, r.parseUnsafeString)((0, r.pluck)(u.label, u.name)), g = null !== u._userValue ? D.dataLabels(u._userValue) : \"\", m = D.percentValue(u._value / T * 100), f = (0, r.pluckNumber)(u.alpha, S.alpha), b = S.showLabels ? d : \"\", S.showValues && (S.showPercentValues ? b += \"\" !== b ? L + m : m : void 0 !== g && \"\" !== g && (b += \"\" !== b ? L + g : g)), \"\" === (v = S.showTooltip ? (0, r.parseUnsafeString)((0, r.pluck)(u.tooltext, u.hovertext, S.tooltext)) : void 0) ? (v = d, S.showValuesInTooltip && (S.showPercentInTooltip ? v += \"\" !== v ? L + m : m : void 0 !== g && \"\" !== g && (v += \"\" !== v ? L + g : g))) : v = (0, r.parseTooltext)(v, [1, 2, 3, 14], {\n              percentValue: m,\n              label: d,\n              formattedValue: g\n            }, u), y = a + I, I += p, (i = N[h]) || (i = N[h] = {\n              components: {\n                data: []\n              },\n              config: {},\n              graphics: {}\n            }), i.graphics.element && (x = i.config.startAngle + i.config.angleStrech), i.config = {\n              initialAngle: x || (o.config || o.config).initialAngle,\n              startAngle: y,\n              angleStrech: p,\n              level: t,\n              displayValue: b,\n              toolText: v,\n              link: (0, r.getValidValue)(u.link),\n              doNotSlice: !0,\n              color: (0, r.convertColor)(u.color || _.getPlotColor(), f),\n              borderWidth: (0, r.pluckNumber)(u.borderwidth, A),\n              borderColor: (0, r.pluck)(u.bordercolor, E),\n              dashStyle: (0, r.pluckNumber)(u.valueborderdashed, 0) ? (0, r.getDashStyle)((0, r.pluckNumber)(u.borderdashlen, 4), (0, r.pluckNumber)(u.borderdashgap, 2)) : \"none\",\n              shadow: {\n                opacity: .01 * Math.round(f > 50 ? f * f * f * 1e-4 : f * f * .01)\n              },\n              isSingleTon: !(w > 1)\n            }, i.config.parent = o, u.category ? (P = Math.max(P, C.addMSPieCat(u.category, t + 1, i, y, p + y)), (l = i.components.data.length) > (s = u.category.length) && V(i.components.data.splice(l - 1, s))) : (l = i.components.data.length) && V(i.components.data.splice(0, l));\n          }\n\n          return O > M && V(N.splice(M)), P;\n        }, t.prototype.parsePlotAttributes = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b = this.config || {},\n              y = this.getFromEnv(\"chart\"),\n              x = y.config,\n              k = this.components.data.length,\n              w = x.dataLabelStyle,\n              C = x.textDirection,\n              N = x.canvasWidth,\n              S = x.canvasHeight,\n              A = (0, r.pluckNumber)(b.originX, x.canvasLeft + .5 * N),\n              E = (0, r.pluckNumber)(b.originY, x.canvasTop + .5 * S),\n              D = (0, r.pluckNumber)(2 * b.pieRadius, Math.min(N, S)),\n              _ = function (e, t) {\n            var o = e && e.length,\n                a = void 0;\n            return e && (a = \"%\" === e.charAt(o - 1) ? (0, r.pluckNumber)(t) * ((0, r.pluckNumber)(e.split(\"%\")[0]) / 100) : (0, r.pluckNumber)(e)) < t ? a : 0;\n          }(b.innerRadius, D / 2),\n              T = this.config.pool || (this.config.pool = {}),\n              L = (D - 2 * _) / (2 * b.maxLevel);\n\n          for (b.innerSize = 2 * _, e || (e = this), k = e.components.data.length, f = 0; f < k; f += 1) {\n            this.parsePlotAttributes(e.components.data[f]);\n          }\n\n          (n = (m = e.config).level) && (i = n * L + _, l = (n - 1) * L + _, g = e.graphics, c = m.angleStrech, u = m.displayValue, p = !!m.link, s = m.color, d = (h = m.startAngle) + m.angleStrech, v = g.element, T.element && T.element.length && (v = g.element = v || T.element.shift()), m.plotItem = {\n            chart: y,\n            link: m.link,\n            value: c,\n            color: s,\n            labelText: u,\n            graphics: {\n              element: v\n            },\n            selfRef: e\n          }, m.eventArgs = {\n            link: m.link,\n            label: m.displayValue,\n            toolText: m.toolText\n          }, m.props = {\n            element: {\n              attr: {\n                ringpath: [A, E, i, l, h, d],\n                \"stroke-width\": m.borderWidth,\n                stroke: m.borderColor,\n                fill: (0, r.toRaphaelColor)(m.color),\n                \"stroke-dasharray\": m.dashStyle,\n                cursor: p ? \"pointer\" : r.BLANKSTRING\n              }\n            }\n          }, void 0 !== u && u !== r.BLANKSTRING && (t = (h + d) / 2, a = 0 === l && m.isSingleTon ? 0 : l + (i - l) / 2, (o = m._textAttrs) || (o = m._textAttrs = {}), o.text = u, o.fill = w.color || \"000000\", o.direction = C, o.cursor = p ? \"pointer\" : r.BLANKSTRING, o.x = A + a * Math.cos(t), o.y = E + a * Math.sin(t), o[\"text-bound\"] = [w.backgroundColor, w.borderColor, w.borderThickness, w.borderPadding, w.borderRadius, w.borderDash]));\n        }, t.prototype.parseLabelAttributes = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i = this.components.data.length;\n\n          for (!e && (e = this), i = e.components.data.length, a = 0; a < i; a += 1) {\n            this.parseLabelAttributes(e.components.data[a]);\n          }\n\n          o = (n = e.config).displayValue, t = n._textAttrs, n.level && void 0 !== o && o !== r.BLANKSTRING && (n.props.label = {\n            attr: t\n          });\n        }, t.prototype.draw = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n = this.config || {},\n              i = this.getFromEnv(\"chart\"),\n              s = this.getFromEnv(\"animationManager\"),\n              c = this.getFromEnv(\"toolTipController\"),\n              u = i.config,\n              p = this.components,\n              h = p.data.length,\n              d = u.dataLabelStyle,\n              f = n.showShadow,\n              g = i.getChildContainer(\"plotGroup\"),\n              m = i.getChildContainer(\"datalabelsGroup\"),\n              v = n.events || {},\n              b = this.config.pool || (this.config.pool = {}),\n              y = p.removeDataArr;\n\n          for (y && y.length && this.removeElement(), e || (e = this, m.css(d)), h = e.components.data.length, t = 0; t < h; t += 1) {\n            this.draw(e.components.data[t]);\n          }\n\n          (a = e.config).level ? (r = (o = e.graphics).element, b.element && b.element.length && (r = o.element = r || b.element.shift()), (r = o.element = s.setAnimation({\n            el: o.element || \"ringpath\",\n            attr: a.props.element.attr,\n            container: g,\n            component: this,\n            state: \"appearing\",\n            label: \"ringpath\"\n          })).shadow(f && !!a.shadow).data(\"plotItem\", a.plotItem).data(\"eventArgs\", a.eventArgs).on(\"fc-mouseover\", function (e) {\n            var t = this,\n                o = v.mouseOver,\n                r = t.plotItem || t.data(\"plotItem\"),\n                n = r.chart,\n                i = n.getDatasets()[0];\n            n.plotEventHandler(t, e, \"DataPlotRollOver\"), o && o.call(t), i.fireEvent(\"datasetrollover\", {\n              pValue: r.pValue,\n              value: r.value,\n              displayValue: a.displayValue\n            });\n          }).on(\"fc-mouseout\", function (e) {\n            var t = this,\n                o = v.mouseOut,\n                r = t.plotItem || t.data(\"plotItem\"),\n                n = r.chart,\n                i = n.getDatasets()[0];\n            n.plotEventHandler(t, e, \"DataPlotRollOut\"), o && o.call(t), i.fireEvent(\"datasetrollout\", {\n              pValue: r.pValue,\n              value: r.value,\n              displayValue: a.displayValue\n            });\n          }).on(\"fc-click\", function (e) {\n            i.plotEventHandler(this, e);\n          }), c.enableToolTip(r, a.toolText), t || n._drawn || (n._drawn = !0, m.show(), this.addJob(\"labelJob\", this.drawLabel.bind(this), l.priorityList.label))) : (n._drawn && this.drawLabel(), this.removeChild(this.config.pool, !0));\n        }, t.prototype.drawLabel = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s = this.config || {},\n              c = this.getFromEnv(\"chart\"),\n              u = this.getFromEnv(\"animationManager\"),\n              p = c.config,\n              h = this.components.data.length,\n              d = p.dataLabelStyle,\n              f = this.getFromEnv(\"toolTipController\"),\n              g = p.tooltip || {},\n              m = g && !1 !== g.enabled,\n              v = s.events || {},\n              b = this.config.pool || (this.config.pool = {}),\n              y = c.getChildContainer(\"datalabelsGroup\");\n\n          for (y.show(), !e && (e = this), h = e.components.data.length, a = 0; a < h; a += 1) {\n            this.drawLabel(e.components.data[a]);\n          }\n\n          t = (i = e.config).plotItem, o = i.displayValue, i.level ? (l = (n = e.graphics).label, void 0 !== o && o !== r.BLANKSTRING ? (l = n.label, b.label && b.label.length && (l = n.label = l || b.label.shift()), (l = n.label = u.setAnimation({\n            el: l || \"text\",\n            attr: i.props.label.attr,\n            container: y,\n            component: this,\n            state: \"appearing\",\n            label: \"text\"\n          })).on(\"fc-click\", function (e) {\n            c.plotEventHandler(this, e);\n          }).on(\"fc-mouseout\", function (e) {\n            var t = v.mouseOut;\n            c.plotEventHandler(this, e, \"DataPlotRollOut\"), t && t.call(this);\n          }).on(\"fc-mouseover\", function (e) {\n            var t = v.mouseOver;\n            c.plotEventHandler(this, e, \"DataPlotRollOver\"), t && t.call(this);\n          }).css(d).show().data(\"plotItem\", t).data(\"eventArgs\", i.eventArgs), m && f.enableToolTip(l, void 0)) : l && u.setAnimation({\n            el: l,\n            component: this,\n            callback: function callback() {\n              this.hide();\n            },\n            label: \"text\"\n          })) : this.removeChild(this.config.pool, !0);\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = d;\n    },\n    886: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.multiLevelPie\": function initialDatasetMultiLevelPie() {\n          var e = this.config,\n              t = void 0;\n          return {\n            \"ringpath.appearing\": function ringpathAppearing(o) {\n              return [{\n                initialAttr: {\n                  ringpath: [(t = o.attr.ringpath)[0], t[1], t[2], t[3], e.initialAngle, e.initialAngle]\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"text.appearing\": function textAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }];\n            }\n          };\n        }\n      };\n    },\n    887: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(888),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    888: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = u(o(551)),\n          r = u(o(889)),\n          n = u(o(891)),\n          i = u(o(892)),\n          l = o(132),\n          s = u(o(251)),\n          c = o(125);\n\n      function u(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function p(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var h = c.preDefStr.defaultFontStr,\n          d = c.preDefStr.divLineAlphaStr,\n          f = c.preDefStr.altVGridColorStr,\n          g = c.preDefStr.altVGridAlphaStr,\n          m = c.preDefStr.colors.c000000,\n          v = c.preDefStr.POSITION_BOTTOM,\n          b = c.preDefStr.divLineAlpha3DStr,\n          y = (0, l.getDep)(\"redraphael\", \"plugin\");\n      (0, s[\"default\"])(y);\n\n      var x = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this)),\n              a = o;\n\n          return a.friendlyName = \"Multi-axis Line Chart\", a.defaultPlotShadow = 1, a.axisPaddingLeft = 0, a.axisPaddingRight = 0, o.registerFactory(\"axis\", r[\"default\"], [\"canvas\"]), o.registerFactory(\"vCanvas\", n[\"default\"], [\"axis\"]), o.registerFactory(\"dataset\", i[\"default\"], [\"vCanvas\"]), o;\n        }\n\n        return p(t, e), t.getName = function () {\n          return \"MultiAxisLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.defaultDatasetType = \"multiaxisline\", t.defaultcrosslinethickness = 1;\n        }, t.prototype.getName = function () {\n          return \"MultiAxisLine\";\n        }, t.prototype._checkInvalidSpecificData = function () {\n          var e = this.getFromEnv(\"dataSource\"),\n              t = e.axis,\n              o = e.categories;\n          if (!t || !o) return !0;\n        }, t.prototype._feedAxesRawData = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s,\n              u,\n              p,\n              v,\n              y,\n              x,\n              k,\n              w,\n              C = this.config,\n              N = this.getFromEnv(\"color-manager\"),\n              S = this.getFromEnv(\"number-formatter\"),\n              A = this.getFromEnv(\"dataSource\"),\n              E = A.chart,\n              D = this.config.is3D,\n              _ = D ? c.chartPaletteStr.chart3D : c.chartPaletteStr.chart2D,\n              T = [],\n              L = {},\n              P = [];\n\n          for (e = {\n            isVertical: !1,\n            isReverse: !1,\n            isOpposit: !1,\n            outCanfontFamily: (0, c.pluck)(E.outcnvbasefont, E.basefont, h),\n            outCanfontSize: (0, c.pluckFontSize)(E.outcnvbasefontsize, E.basefontsize, 10),\n            outCancolor: (0, c.pluck)(E.outcnvbasefontcolor, E.basefontcolor, N.getColor(_.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: E.xaxisnamepadding,\n            axisValuePadding: E.labelpadding,\n            axisNameFont: E.xaxisnamefont,\n            axisNameFontSize: E.xaxisnamefontsize,\n            axisNameFontColor: E.xaxisnamefontcolor,\n            axisNameFontBold: E.xaxisnamefontbold,\n            axisNameFontItalic: E.xaxisnamefontitalic,\n            axisNameBgColor: E.xaxisnamebgcolor,\n            axisNameBorderColor: E.xaxisnamebordercolor,\n            axisNameAlpha: E.xaxisnamealpha,\n            axisNameFontAlpha: E.xaxisnamefontalpha,\n            axisNameBgAlpha: E.xaxisnamebgalpha,\n            axisNameBorderAlpha: E.xaxisnameborderalpha,\n            axisNameBorderPadding: E.xaxisnameborderpadding,\n            axisNameBorderRadius: E.xaxisnameborderradius,\n            axisNameBorderThickness: E.xaxisnameborderthickness,\n            axisNameBorderDashed: E.xaxisnameborderdashed,\n            axisNameBorderDashLen: E.xaxisnameborderdashlen,\n            axisNameBorderDashGap: E.xaxisnameborderdashgap,\n            useEllipsesWhenOverflow: E.useellipseswhenoverflow,\n            divLineColor: (0, c.pluck)(E.vdivlinecolor, E.divlinecolor, N.getColor(_.divLineColor)),\n            divLineAlpha: (0, c.pluck)(E.vdivlinealpha, E.divlinealpha, D ? N.getColor(b) : N.getColor(d)),\n            divLineThickness: (0, c.pluckNumber)(E.vdivlinethickness, E.divlinethickness, 1),\n            divLineIsDashed: Boolean((0, c.pluckNumber)(E.vdivlinedashed, E.vdivlineisdashed, E.divlinedashed, E.divlineisdashed, 0)),\n            divLineDashLen: (0, c.pluckNumber)(E.vdivlinedashlen, E.divlinedashlen, 4),\n            divLineDashGap: (0, c.pluckNumber)(E.vdivlinedashgap, E.divlinedashgap, 2),\n            showAlternateGridColor: (0, c.pluckNumber)(E.showalternatevgridcolor, 0),\n            alternateGridColor: (0, c.pluck)(E.alternatevgridcolor, N.getColor(f)),\n            alternateGridAlpha: (0, c.pluck)(E.alternatevgridalpha, N.getColor(g)),\n            numDivLines: E.numvdivlines,\n            labelFont: E.labelfont,\n            labelFontSize: E.labelfontsize,\n            labelFontColor: E.labelfontcolor,\n            labelFontBold: E.labelfontbold,\n            labelFontItalic: E.labelfontitalic,\n            labelFontAlpha: E.labelalpha,\n            maxLabelHeight: E.maxlabelheight,\n            axisName: E.xaxisname,\n            axisMinValue: E.xaxisminvalue,\n            axisMaxValue: E.xaxismaxvalue,\n            setAdaptiveMin: E.setadaptivexmin,\n            adjustDiv: E.adjustvdiv,\n            labelDisplay: E.labeldisplay,\n            showLabels: E.showlabels,\n            rotateLabels: E.rotatelabels,\n            slantLabel: (0, c.pluckNumber)(E.slantlabels, E.slantlabel),\n            labelStep: (0, c.pluckNumber)(E.labelstep, E.xaxisvaluesstep),\n            showAxisValues: (0, c.pluckNumber)(E.showxaxisvalues, E.showxaxisvalue),\n            showLimits: E.showvlimits,\n            showDivLineValues: (0, c.pluckNumber)(E.showvdivlinevalues, E.showvdivlinevalues),\n            showZeroPlane: E.showvzeroplane,\n            zeroPlaneColor: E.vzeroplanecolor,\n            zeroPlaneThickness: E.vzeroplanethickness,\n            zeroPlaneAlpha: E.vzeroplanealpha,\n            showZeroPlaneValue: E.showvzeroplanevalue,\n            trendlineColor: E.trendlinecolor,\n            trendlineToolText: E.trendlinetooltext,\n            trendlineThickness: E.trendlinethickness,\n            trendlineAlpha: E.trendlinealpha,\n            showTrendlinesOnTop: E.showtrendlinesontop,\n            showAxisLine: (0, c.pluckNumber)(E.showxaxisline, E.showaxislines, E.drawAxisLines, 0),\n            axisLineThickness: (0, c.pluckNumber)(E.xaxislinethickness, E.axislinethickness, 1),\n            axisLineAlpha: (0, c.pluckNumber)(E.xaxislinealpha, E.axislinealpha, 100),\n            axisLineColor: (0, c.pluck)(E.xaxislinecolor, E.axislinecolor, m)\n          }, P.push(e), t = {\n            outCanfontFamily: (0, c.pluck)(E.outcnvbasefont, E.basefont, h),\n            outCanfontSize: (0, c.pluckFontSize)(E.outcnvbasefontsize, E.basefontsize, 10),\n            outCancolor: (0, c.pluck)(E.outcnvbasefontcolor, E.basefontcolor, N.getColor(_.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi, \"#$1\"),\n            useEllipsesWhenOverflow: E.useellipseswhenoverflow,\n            showAlternateGridColor: 0,\n            axisNameFont: E.yaxisnamefont,\n            axisNameFontSize: E.yaxisnamefontsize,\n            axisNameFontColor: E.yaxisnamefontcolor,\n            axisNameFontBold: E.yaxisnamefontbold,\n            axisNameFontItalic: E.yaxisnamefontitalic,\n            axisNameBgColor: E.yaxisnamebgcolor,\n            axisNameBorderColor: E.yaxisnamebordercolor,\n            axisNameAlpha: E.yaxisnamealpha,\n            axisNameFontAlpha: E.yaxisnamefontalpha,\n            axisNameBgAlpha: E.yaxisnamebgalpha,\n            axisNameBorderAlpha: E.yaxisnameborderalpha,\n            axisNameBorderPadding: E.yaxisnameborderpadding,\n            axisNameBorderRadius: E.yaxisnameborderradius,\n            axisNameBorderThickness: E.yaxisnameborderthickness,\n            axisNameBorderDashed: E.yaxisnameborderdashed,\n            axisNameBorderDashLen: E.yaxisnameborderdashlen,\n            axisNameBorderDashGap: E.yaxisnameborderdashgap\n          }, s = {\n            side: \"l\",\n            axesConf: []\n          }, u = {\n            side: \"r\",\n            axesConf: []\n          }, a = 0, r = (o = A.axis || []).length; a < r; a++) {\n            for (L = {}, i = o[a], L.checkBoxChecked = !1, k = 0, w = i.dataset ? i.dataset.length : 0; k < w; k += 1) {\n              0 !== Number(i.dataset[k].visible) && (L.checkBoxChecked = !0);\n            }\n\n            l = N.getPlotColor(a), p = (0, c.pluck)(i.color, E.axiscolor, l), v = (0, c.pluckNumber)(i.divlinethickness, E.divlinethickness, 1), y = (0, c.pluckNumber)(i.tickwidth, E.axistickwidth, 2), x = (0, c.pluckNumber)(i.axislinethickness, E.axislinethickness, 2), n = !(0, c.pluckNumber)(i.axisonleft, 1), t.isVertical = !0, t.isReverse = !0, t.isOpposit = n, t.labelStep = (0, c.pluckNumber)(i.yaxisvaluesstep, i.yaxisvaluestep, E.yaxisvaluesstep, E.yaxisvaluestep), t.axisMaxValue = i.maxvalue, t.axisMinValue = i.minvalue, t.setAdaptiveMin = (0, c.pluckNumber)(i.setadaptiveymin, E.setadaptiveymin), t.numDivLines = (0, c.pluckNumber)(i.numdivlines, E.numdivlines, 4), t.adjustDiv = (0, c.pluckNumber)(i.adjustdiv, E.adjustdiv), t.showAxisValues = (0, c.pluckNumber)(i.showyaxisvalues, i.showyaxisvalue, E.showyaxisvalues, E.showyaxisvalue, 1), t.showLimits = (0, c.pluckNumber)(i.showlimits, E.showyaxislimits, E.showlimits, t.showAxisValues), t.showDivLineValues = (0, c.pluckNumber)(i.showdivlinevalue, E.showdivlinevalues, i.showdivlinevalues, t.showAxisValues), t.showZeroPlane = (0, c.pluckNumber)(i.showzeroplane, E.showzeroplane), t.showZeroPlaneValue = (0, c.pluckNumber)(i.showzeroplanevalue, E.showzeroplanevalue), t.zeroPlaneColor = i.zeroplanecolor, t.zeroPlaneThickness = (0, c.pluckNumber)(i.zeroplanethickness, i.divlinethickness, C.zeroplanethickness, 2), t.zeroPlaneAlpha = (0, c.pluckNumber)(i.zeroplanealpha, i.divlinealpha, C.zeroplanealpha), t.showZeroPlaneOnTop = C.showzeroplaneontop, t.divLineColor = (0, c.pluck)(i.divlinecolor, p), t.divLineAlpha = (0, c.pluckNumber)(i.divlinealpha, E.divlinealpha, N.getColor(d), 100), t.divLineThickness = v, t.divLineIsDashed = Boolean((0, c.pluckNumber)(i.divlinedashed, i.divlineisdashed, E.divlinedashed, E.divlineisdashed, 0)), t.divLineDashLen = (0, c.pluckNumber)(i.divlinedashlen, E.divlinedashlen, 4), t.divLineDashGap = (0, c.pluckNumber)(i.divlinedashgap, E.divlinedashgap, 2), t.showAxisLine = 1, t.axisLineThickness = x, t.axisLineAlpha = 100, t.axisLineColor = p, t.tickLength = y, t.tickColor = p, t.tickAlpha = 100, t.tickWidth = x, t.axisName = i.title, t.rotateAxisName = 1, t.axisNameAlignCanvas = !0, t.drawAxisNameFromBottom = !0, (0, c.extend2)(L, t), S.parseMLAxisConf(i, a), 0 === (0, c.pluckNumber)(i.showaxis) ? (0, c.extend2)(L, {\n              axisIndex: a,\n              drawAxisLineWRTCanvas: !1,\n              drawLabels: !1,\n              drawPlotlines: !1,\n              drawAxisLine: !1,\n              drawPlotBands: !1,\n              drawAxisName: !1,\n              drawTrendLines: !1,\n              drawTrendLabels: !1,\n              drawTick: !1,\n              drawTickMinor: !1,\n              showAxis: 0\n            }) : (0, c.extend2)(L, {\n              axisIndex: a,\n              drawAxisLineWRTCanvas: !1,\n              drawLabels: !0,\n              drawPlotlines: !0,\n              drawAxisLine: !0,\n              drawPlotBands: !0,\n              drawAxisName: !0,\n              drawTrendLines: !0,\n              drawTrendLabels: !0,\n              drawTick: !0,\n              drawTickMinor: !0,\n              showAxis: 1\n            }), n ? u.axesConf.push(L) : s.axesConf.push(L);\n          }\n\n          return s.axesConf.length && T.push(s), u.axesConf.length && T.push(u), {\n            xAxisConfigure: P,\n            yAxisConfigure: T\n          };\n        }, t.prototype._postSpaceManagement = function () {\n          var e = this.getFromEnv(\"legend\"),\n              t = this.config.showLegend,\n              o = this.getChildren(\"yAxisSelectorUI\"),\n              a = this.getChildren(\"canvas\")[0];\n          this.setAxisDimention(), o.forEach(function (e) {\n            e.setAxisDimention();\n          }), a.setCanvasPadding(), this.setAxisDimention(), t && e.postSpaceManager(), this.allocateDimensionOfChartMenuBar();\n        }, t.prototype.setAxisDimention = function () {\n          var e = this.config,\n              t = this.getChildren(\"xAxis\")[0],\n              o = e.xDepth,\n              a = this.getChildren(\"canvas\")[0].config,\n              r = a.canvasBorderWidth,\n              n = a.canvasPadding,\n              i = a.canvasPaddingLeft,\n              l = a.canvasPaddingRight;\n          t && t.setAxisDimention({\n            x: e.canvasLeft + (o || 0) + Math.max(i, n),\n            y: e.canvasBottom + (e.shift || 0) + r,\n            opposite: e.canvasTop - r,\n            axisLength: e.canvasWidth - (o || 0) - Math.max(i, n) - Math.max(l, n)\n          });\n        }, t.prototype._spaceManager = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s,\n              u,\n              p = this.getChildren(\"canvas\")[0],\n              h = this.config,\n              d = h.showLegend,\n              f = h.legendPosition,\n              g = this.getChildren(\"xAxis\"),\n              m = this.getChildren(\"yAxisSelectorUI\"),\n              b = h.hasLegend,\n              y = h.yDepth,\n              x = this.getFromEnv(\"legend\"),\n              k = 0,\n              w = 0,\n              C = m.length || 0,\n              N = this.config.is3D,\n              S = this.getFromEnv(\"dataSource\").chart,\n              A = (0, c.pluckNumber)(S.showborder, N ? 0 : 1),\n              E = this.getChildren(\"canvas\")[0].config.canvasBorderWidth,\n              D = h.borderWidth = A ? (0, c.pluckNumber)(S.borderthickness, 1) : 0,\n              _ = h.canvasMarginTop,\n              T = h.canvasMarginBottom,\n              L = h.canvasMarginLeft,\n              P = h.canvasMarginRight,\n              O = (h.minCanvasHeight, h.minCanvasWidth, h.height),\n              V = h.width;\n          h.origCanvasTopMargin, h.origCanvasBottomMargin, h.origCanvasLeftMargin, h.origCanvasRightMargin;\n\n          for (this._allocateSpace({\n            top: D,\n            bottom: D,\n            left: D,\n            right: D\n          }), this._allocateSpace({\n            left: h.canvasMarginLeft,\n            right: h.canvasMarginRight\n          }), n = \"right\" === f ? .3 * h.canvasWidth : .3 * h.canvasHeight, !1 !== b && g && d && this._allocateSpace(x._manageLegendPosition(n)), a = 0; a < C; a++) {\n            k += (r = m[a].placeAxis(h.canvasWidth)).rightPadding, w += r.leftPadding, this._allocateSpace(r.dimension);\n          }\n\n          e = .225 * h.availableHeight, t = this._manageActionBarSpace && this._manageActionBarSpace(e) || {}, this._allocateSpace(t), o = f === v ? .6 * h.canvasHeight : .6 * h.canvasWidth, this._manageChartMenuBar(o), .7 * h.canvasWidth > k + w && this._allocateSpace({\n            left: w,\n            right: k\n          }), o = .6 * h.canvasHeight, g[0] && this._allocateSpace(g[0].placeAxis(o)), o = .325 * h.canvasHeight, this._getDSspace && this._allocateSpace(this._getDSspace(o)), y && this._allocateSpace({\n            bottom: y\n          }), this._allocateSpace({\n            top: E,\n            bottom: E,\n            left: E,\n            right: E\n          }), i = _ > h.canvasTop ? _ - h.canvasTop : 0, l = T > O - h.canvasBottom ? T + h.canvasBottom - O : 0, s = L > h.canvasLeft ? L - h.canvasLeft : 0, u = P > V - h.canvasRight ? P + h.canvasRight - V : 0, this._allocateSpace({\n            top: i,\n            bottom: l,\n            left: s,\n            right: u\n          }), h.actualCanvasMarginTop = i, h.actualCanvasMarginLeft = s, h.actualCanvasMarginRight = u, h.actualCanvasMarginBottom = l, p.setDimension({\n            top: h.canvasTop,\n            left: h.canvasLeft,\n            width: h.canvasWidth,\n            height: h.canvasHeight\n          });\n        }, t.prototype.configure = function (t) {\n          e.prototype.configure.call(this, t);\n          var o = this.config,\n              a = this.getFromEnv(\"dataSource\").chart;\n          o.axesPadding = 5, o.allowAxisShift = (0, c.pluckNumber)(a.allowaxisshift, 1), o.allowSelection = (0, c.pluckNumber)(a.allowselection, 1), o.checkBoxColor = (0, c.pluck)(a.checkboxcolor, \"#2196f3\"), o.axisConfigured = !0;\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = x;\n    },\n    889: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o = e.getChildren(\"canvas\")[0],\n            i = o.getChildren(\"axisRefVisualCartesian\")[0],\n            l = void 0;\n        t = e._feedAxesRawData(), n[\"default\"].resetAxisCount(), (0, a.componentFactory)(e, n[\"default\"], \"yAxisSelectorUI\", t.yAxisConfigure && t.yAxisConfigure.length, t.yAxisConfigure), (0, a.componentFactory)(e, r[\"default\"], \"xAxis\", 1, t.xAxisConfigure), (l = e.getChildren(\"xAxis\")[0]).setLinkedItem(\"canvas\", o), i.setLinkedItem(l.getId(), l), i.addExtEventListener(\"visiblerangeset\", function () {\n          return i.asyncDraw();\n        }, l), o.attachAxis(l, !1), o.setPrimaryAxis(\"xAxis\", l), e._setCategories();\n      };\n      var a = o(125),\n          r = i(o(422)),\n          n = i(o(890));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n    },\n    890: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(138),\n          r = o(125),\n          n = s(o(377)),\n          i = s(o(760)),\n          l = s(o(236));\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = function u(e) {\n        var t = e.config.axesConf,\n            o = void 0,\n            a = void 0,\n            l = void 0,\n            s = void 0,\n            c = e.config.axisMapById,\n            u = c && Array.from(c.keys()) || [],\n            h = void 0,\n            d = !0,\n            f = e.getFromEnv(\"chart\").getChildren(\"canvas\")[0],\n            g = f.getChildren(\"axisRefVisualCartesian\")[0],\n            m = function m() {\n          return g.asyncDraw();\n        };\n\n        (0, r.componentFactory)(e, n[\"default\"], \"yAxis\", t.length, t), o = (e.getChildren(\"yAxis\") || []).slice(0), a = e.config.axisMapById = new i[\"default\"](), (\"l\" === e.config.side ? o.reverse() : o).forEach(function (t) {\n          if (!t.getState(\"removed\") && 0 !== t.config.showaxis) {\n            var o,\n                r,\n                n = t.getId();\n            (h = {}).axis = t, s = c && c.get(n), h.checkbox = s && s.checkbox, a.set(n, h), 0 === t.config.showaxis ? t.hide() : t.show(), f.attachAxis(t, !0), d && (e.config.besideCanvas = n), d = !1, p || (l = t), t.setLinkedItem(\"canvas\", f), g.setLinkedItem(t.getId(), t), g.addExtEventListener(\"visiblerangeset\", m, t), p++, o = n, -1 !== (r = u.indexOf(o)) && u.splice(r, 1);\n          }\n        }), l && f.setPrimaryAxis(\"yAxis\", l), function (e, t) {\n          var o = void 0,\n              a = void 0,\n              r = void 0;\n\n          for (r = e.length - 1; r > -1; r--) {\n            o = e[r], (a = t.get(o)).checkbox && a.checkbox.remove(), a.axis && a.axis.remove(), t[\"delete\"](o);\n          }\n        }(u, c);\n      },\n          p = 0,\n          h = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.registerFactory(\"axis\", u), o;\n        }\n\n        return c(t, e), t.resetAxisCount = function () {\n          p = 0;\n        }, t.prototype.configureAttributes = function () {\n          var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              t = this.config;\n          t.axesConf = e.axesConf || [], t.checkboxesConf = e.checkboxesConf || [], t.side = e.side;\n        }, t.prototype.placeAxis = function (e) {\n          var t = this.config.side,\n              o = this.getAxesDetails(),\n              a = this.getFromEnv(\"chartConfig\").axesPadding,\n              r = 0,\n              n = 0,\n              i = void 0,\n              l = {\n            right: 0,\n            left: 0\n          };\n          return o.forEach(function (o) {\n            var s = o.value || (o.value = {}),\n                c = o.axis;\n            c.getState(\"removed\") || 0 === c.config.showaxis || (i = c.placeAxis(.7 * e), \"r\" === t ? (e -= s.width = i.right, l.right += i.right, r += a) : (e -= s.width = i.left, l.left += i.left, n += a));\n          }), {\n            dimension: l,\n            rightPadding: r,\n            leftPadding: n\n          };\n        }, t.prototype.setAxisDimention = function () {\n          var e = this.config,\n              t = this.getAxesDetails(),\n              o = this.getFromEnv(\"chart\"),\n              a = this.getFromEnv(\"chartConfig\").axesPadding,\n              r = o.getChildren(\"canvas\")[0].config,\n              n = r.canvasBorderWidth,\n              i = r.canvasPaddingTop,\n              l = r.canvasPaddingBottom,\n              s = r.canvasLeft,\n              c = r.canvasTop,\n              u = r.canvasHeight,\n              p = s + r.canvasWidth,\n              h = \"r\" === e.side,\n              d = \"r\" === e.side ? s - n : p + n,\n              f = 0;\n          t.forEach(function (e) {\n            var t = e.value || (e.value = {}),\n                o = e.axis;\n            0 === o.config.showaxis || o.getState(\"removed\") || (t.x = h ? p + n + f + a : s - n - f - a, t.y = c + i, t.height = u - i - l, t.opposite = d, f += t.width + a, o.setAxisDimention({\n              x: t.x,\n              y: t.y,\n              opposite: t.opposite,\n              axisLength: t.height\n            }));\n          });\n        }, t.prototype.drawHotElements = function () {\n          var e,\n              t = this,\n              o = t.config,\n              a = \"r\" === o.side,\n              n = t.getFromEnv(\"chartConfig\").allowAxisShift,\n              i = t.getFromEnv(\"chart\"),\n              l = t.getFromEnv(\"paper\"),\n              s = i.getChildContainer(\"trackerGroup\"),\n              c = o.axisMapById,\n              u = t.getGraphicalElement(\"axisHotElement\") || [],\n              p = i.getChildren(\"canvas\")[0],\n              h = void 0,\n              d = -1,\n              f = {\n            cursor: \"col-resize\",\n            stroke: r.TRACKER_FILL,\n            fill: r.TRACKER_FILL,\n            visibility: !0\n          };\n\n          for (n && c.forEach(function (e, o) {\n            var r = void 0,\n                n = e.value;\n            f.x = n.x + (a ? 0 : -n.width), f.y = n.y, f.width = n.width, f.height = n.height, (r = u[++d]) || (r = t.addGraphicalElement(\"axisHotElement\", l.rect(s), !0)).on(\"fc-click\", t._resuffelAxis), r.attr(f).data(\"axisDetails\", {\n              axisSelectorUI: t,\n              canvas: p,\n              axisId: o\n            });\n          }), h = d + 1, e = u.length; h < e; h++) {\n            t.removeGraphicalElement(u[h]);\n          }\n        }, t.prototype.drawCheckBoxes = function () {\n          var e = this,\n              t = e.config,\n              o = e.getFromEnv(\"chartConfig\"),\n              a = o.allowSelection,\n              r = \"r\" === t.side,\n              n = t.axisMapById;\n          a && n.forEach(function (t, a) {\n            var n = t.value,\n                i = t.checkbox,\n                s = t.axis.config,\n                c = r ? t.axis.getAxisConfig(\"axisNamePadding\") : -n.width;\n            i || (i = t.checkbox = new l[\"default\"](), e.attachChild(i, \"checkbox\", !0), i.configure({\n              isChecked: !0,\n              text: \"\",\n              stroke: o.checkBoxColor,\n              symbolStroke: o.checkBoxColor,\n              strokeWidth: 1,\n              symbolStrokeWidth: 2,\n              containerInfo: {\n                id: \"buttonGroup\",\n                label: \"group\",\n                isParent: !0\n              }\n            }), i.addEventListener(\"fc-click\", function () {\n              var t = this.getFromEnv(\"chart\");\n              this.toggle(), e._dolegendInteraction.call(this, a, t), s.checkBoxChecked = !s.checkBoxChecked;\n            })), i.setDimension({\n              x: n.x + c,\n              y: n.y + n.height + 4\n            });\n          });\n        }, t.prototype._createLayers = function () {\n          var e = this.getFromEnv(\"chart\").getContainer(\"parentgroup\");\n          this.createContainer(\"axisBottomGroup\", {\n            name: \"axis-bottom-group\"\n          }, e), this.createContainer(\"axisTopGroup\", {\n            name: \"axis-top-group\"\n          }, e), this.createContainer(\"buttonGroup\", {\n            name: \"buttons\"\n          }, e);\n        }, t.prototype.createContainer = function (e, t, o) {\n          var a = this.getFromEnv(\"animationManager\");\n          return this.addChildContainer(e, a.setAnimation({\n            container: o,\n            attr: t,\n            el: this.getChildContainer(e) || \"group\",\n            component: this,\n            label: \"group\"\n          }));\n        }, t.prototype.draw = function () {\n          this._createLayers(), this.drawHotElements(), this.drawCheckBoxes();\n        }, t.prototype._resuffelAxis = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              l = this.data(\"axisDetails\"),\n              s = l.axisSelectorUI,\n              c = s.config,\n              u = l.canvas,\n              p = l.axisId,\n              h = s.getAxesDetails();\n          c.besideCanvas !== p && (h = s.config.axisMapById = (e = c.besideCanvas, t = p, a = [e, (o = h).get(e)], r = [t, o.get(t)], n = Array.from(o.entries()).map(function (o) {\n            var n = o[0],\n                i = o[1];\n            return n === e ? r : n === t ? a : [n, i];\n          }), new i[\"default\"](n))), c.besideCanvas = p, u.setPrimaryAxis(\"yAxis\", h.get(p).axis), s.setAxisDimention(), s.asyncDraw(), u.getChildren(\"axisRefVisualCartesian\")[0].asyncDraw();\n        }, t.prototype._dolegendInteraction = function (e, t) {\n          var o,\n              a,\n              r = [];\n\n          for (o in t.iterateComponents(function (e) {\n            \"dataset\" === e.getType() && r.push(e);\n          }), r) {\n            r.hasOwnProperty(o) && (a = r[o]).getFromEnv(\"yAxis\").getId() === e && (!a.getState(\"visible\") && this.config.checked ? (a.config.legendInteractivity = !0, a.show()) : a.getState(\"visible\") && !this.config.checked && (a.config.legendInteractivity = !0, a.hide()));\n          }\n        }, t.prototype.manipulateCheckBox = function (e) {\n          var t,\n              o,\n              a,\n              r = e.data,\n              n = r.dataset,\n              i = n.getFromEnv(\"yAxis\").getId(),\n              l = n.getLinkedParent().getChildren().dataset,\n              s = r.state,\n              c = !0;\n          if (a = this.getAxesDetails().get(i)) if (\"hide\" === s) {\n            for (t = 0, o = l.length; t < o; t++) {\n              l[t].getState(\"visible\") && (c = !1);\n            }\n\n            c && a.checkbox && a.checkbox.uncheck();\n          } else a.checkbox && a.checkbox.check();\n        }, t.prototype.getAxesDetails = function () {\n          return this.config.axisMapById;\n        }, t.prototype.getType = function () {\n          return \"customAxisUI\";\n        }, t.prototype.getName = function () {\n          return \"multiAxisSelectorUI\";\n        }, t.prototype.getAxes = function () {\n          return Array.from(this.config.axisMapById.values()).map(function (e) {\n            return e.axis;\n          });\n        }, t;\n      }(a.ComponentInterface);\n\n      t[\"default\"] = h;\n    },\n    891: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o = e.getChildren(\"canvas\")[0],\n            a = e.getFromEnv(\"dataSource\"),\n            r = e.getChildren(\"yAxisSelectorUI\"),\n            l = a.axis,\n            s = void 0,\n            c = [],\n            u = [],\n            p = void 0,\n            h = void 0,\n            d = void 0,\n            f = void 0;\n\n        for (s = e.getChildren(\"xAxis\"), d = 0; d < (s && s.length); d++) {\n          s[d].getState(\"removed\") || c.push(s[d]);\n        }\n\n        for (r.forEach(function (e) {\n          for (s = e.getChildren(\"yAxis\"), d = 0; d < (s && s.length); d++) {\n            s[d].getState(\"removed\") || u.push(s[d]);\n          }\n        }), (0, i.componentFactory)(o, n[\"default\"], \"vCanvas\", c.length * u.length), t = o.getChildren(\"vCanvas\"), h = 0, d = 0; h < (c && c.length); h++) {\n          for (f = 0; f < (u && u.length); f++, d++) {\n            (p = t[d]).configure(), p.xAxis(c[h]).yAxis(u[f]).canvas(o), p.addToEnv(\"axisData\", l[d]), p.addToEnv(\"vCanvas\", t[d]);\n          }\n        }\n      };\n      var a,\n          r = o(428),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      },\n          i = o(125);\n    },\n    892: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        for (var t = void 0, o = void 0, a = void 0, n = void 0, l = e.getChildren(), s = l.yAxisSelectorUI, c = l.canvas[0].getChildren(\"vCanvas\"), u = 0, p = c.length; u < p; u++) {\n          (n = c[u]).getState(\"removed\") || (t = n.getFromEnv(\"axisData\").dataset) && (o = t.length, a = Array(o).fill(n.getFromEnv(\"yAxis\").config.axisIndex).map(function (e, t) {\n            return e + Number(\".\" + (t + 1));\n          }), (0, r.datasetFactory)(n, i[\"default\"], \"dataset\", o, t, a), (l = n.getChildren(\"dataset\")).forEach(function (e) {\n            e.addEventListener(\"datasetVisibilityChanged\", function (e) {\n              s.forEach(function (t) {\n                t.manipulateCheckBox(e);\n              });\n            });\n          }));\n        }\n      };\n      var a,\n          r = o(125),\n          n = o(893),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      };\n    },\n    893: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(449)),\n          r = o(125),\n          n = o(132),\n          i = l(o(894));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      (0, n.addDep)({\n        name: \"multiAxislineAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var c = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"multiaxisline\";\n        }, t.prototype.configure = function (t) {\n          if (!t) return !1;\n          this.trimData(t), this.config.JSONData = t, e.prototype.configure.call(this, t);\n        }, t.prototype.parseAttributes = function () {\n          var t,\n              o,\n              a = this.config.JSONData,\n              n = this.config,\n              i = this.getFromEnv(\"chart-attrib\"),\n              l = this.getFromEnv(\"axisData\");\n          e.prototype.parseAttributes.call(this), n.linethickness = (0, r.pluckNumber)(a.linethickness, l.linethickness, i.linethickness, 2), n.lineDashLen = (0, r.pluckNumber)(a.linedashlen, l.linedashlen, i.linedashlen, 5), n.lineDashGap = (0, r.pluckNumber)(a.linedashgap, l.linedashgap, i.linedashgap, 4), n.alpha = (0, r.pluckNumber)(a.alpha, l.linealpha, i.linealpha, r.HUNDREDSTRING), n.linecolor = (0, r.pluck)(a.color, l.linecolor, l.color, i.linecolor, n.plotColor), n.legendSymbolColor = \"line\" === this.getName() ? n.lineColor : n.plotFillColor, o = (0, r.pluckNumber)(a.dashed, l.linedashed, i.linedashed), t = (0, r.getDashStyle)(n.lineDashLen, n.lineDashGap), n.anchorbordercolor = (0, r.pluck)(a.anchorbordercolor, a.color, l.color, i.anchorbordercolor, n.lineColor, n.plotColor), n.lineDashStyle = o ? t : \"none\";\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = c;\n    },\n    894: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.multiaxisline\": n[\"default\"][\"*.dataset.line\"]\n      };\n    },\n    895: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(896),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    896: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = i(o(459)),\n          r = o(551),\n          n = i(o(897));\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function l(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var s = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.defaultPlotShadow = 1, o;\n        }\n\n        return l(t, e), t.getName = function () {\n          return \"MSStepLine\";\n        }, t.prototype.getName = function () {\n          return \"MSStepLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.friendlyName = \"Multi-series Step Line Chart\", t.defaultDatasetType = \"msstepline\", t.drawverticaljoins = 1, t.useforwardsteps = 1, t.zeroplanethickness = 1, t.zeroplanealpha = 40, t.showzeroplaneontop = 0, t.enablemousetracking = !0, t.defaultcrosslinethickness = 1, r._setDefaultConfig.call(this);\n        }, t.prototype.getDSGroupdef = function () {}, t.prototype.getDSdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = s;\n    },\n    897: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(125),\n          r = l(o(449)),\n          n = o(132),\n          i = l(o(898));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      (0, n.addDep)({\n        name: \"stepLineAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var c = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"stepLine\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.drawverticaljoins = void 0, t.useforwardsteps = void 0;\n        }, t.prototype._addLegend = function () {\n          var e,\n              t = this.config,\n              o = this.getFromEnv(\"legend\"),\n              r = (0, a.pluckNumber)(t.drawanchors, 1),\n              n = {\n            enabled: t.includeinlegend,\n            type: \"line\",\n            drawLine: (0, a.pluck)(t.drawLine, !0),\n            anchorSide: r ? t.anchorsides : 0,\n            label: (0, a.getFirstValue)(this.config.JSONData.seriesname)\n          };\n          t.includeinlegend ? ((e = o.getItem(this.config.legendItemId)) || (this.config.legendItemId = o.createItem(this), e = o.getItem(this.config.legendItemId), this.addExtEventListener(\"fc-click\", function () {\n            e.itemClickFn();\n          }, e)), e.configure(n), e.setStateCosmetics(\"default\", {\n            symbol: {\n              fill: (0, a.toRaphaelColor)({\n                color: t.anchorbgcolor,\n                alpha: t.anchorbgalpha\n              }),\n              rawFillColor: t.anchorbgcolor,\n              rawStrokeColor: t.anchorbordercolor,\n              stroke: (0, a.toRaphaelColor)({\n                color: t.anchorbordercolor,\n                alpha: \"100\"\n              }),\n              \"stroke-width\": t.anchorborderthickness\n            }\n          }), this.getState(\"visible\") ? e.removeLegendState(\"hidden\") : e.setLegendState(\"hidden\")) : this.config.legendItemId && o.disposeItem(this.config.legendItemId);\n        }, t.prototype.getLinePath = function (e, t) {\n          var o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u = this.config,\n              p = this.getFromEnv(\"chartConfig\"),\n              h = (0, a.pluckNumber)(p.connectnulldata),\n              d = {},\n              f = this.getFromEnv(\"xAxis\"),\n              g = (0, a.pluckNumber)(u.drawverticaljoins),\n              m = (0, a.pluckNumber)(u.useforwardsteps),\n              v = (0, a.pluckNumber)(p.stepatmiddle) ? .5 * f.getPVR() : 0,\n              b = d.lastValidValue || !1,\n              y = d.temp || [],\n              x = d.temp2 || [],\n              k = d.pathArr || [],\n              w = d.path2Arr || [],\n              C = e.length,\n              N = d.pointsJoined || 0,\n              S = t && t.begin || 0,\n              A = t && t.end || C,\n              E = p.viewPortConfig.step || 1,\n              D = [];\n\n          for (D = D.concat(e), r = S; r < A; r += E) {\n            (s = D[r]) && (void 0 === (c = (n = s.config).setValue) || n && !0 === n.isSkipped ? n && delete n.isSkipped : (i = n._Px, l = n._Py, null === c || c.isNull ? h || (y = [], x = [], b = !1) : b ? (y.length && (k = k.concat(y), y = [], N++), m ? (k.push([\"H\", i - v]), g ? k.push([\"V\", l]) : k.push([\"M\", i - v, l]), v && k.push([\"H\", i])) : (g ? k.push([\"V\", l]) : k.push([\"M\", o, l]), k.push([\"H\", i]), o = i)) : (y.push([\"M\", i, l]), o = i, N = 0, b = !0)));\n          }\n\n          return {\n            pathArr: k,\n            path2Arr: w,\n            lastValidValue: b,\n            pointsJoined: N,\n            temp: y,\n            temp2: x,\n            getPathArr: function getPathArr() {\n              var e = this.pathArr,\n                  t = this.path2Arr;\n              return e.length || t.length ? e.concat(t) : [];\n            }\n          };\n        }, t;\n      }(r[\"default\"]);\n\n      t[\"default\"] = c;\n    },\n    898: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"*.dataset.stepLine\": n[\"default\"][\"*.dataset.line\"]\n      };\n    },\n    899: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(900),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    900: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t.configurer = undefined;\n      var a = p(o(853)),\n          r = o(901),\n          n = o(125),\n          i = o(132),\n          l = p(o(909)),\n          s = o(855),\n          c = p(o(537)),\n          u = o(161);\n\n      function p(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function h(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var d,\n          f = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this)),\n              a = o;\n\n          return a.fireGroupEvent = !0, a.usesXYinCategory = !0, a.dontShowLegendByDefault = !0, o.registerFactory(\"dataset\", l[\"default\"], [\"vCanvas\"]), o.registerFactory(\"axis\", c[\"default\"], [\"canvas\"]), o;\n        }\n\n        return h(t, e), t.getName = function () {\n          return \"DragNode\";\n        }, t.prototype.getName = function () {\n          return \"DragNode\";\n        }, t.prototype._checkInvalidSpecificData = function () {\n          if (!this.getFromEnv(\"dataSource\").dataset) return !0;\n        }, t.prototype._mouseEvtHandler = function (e, t) {\n          (0, u._mouseEvtHandler)(this, e, t);\n        }, t.prototype.parseChartAttr = function (t) {\n          var o,\n              a = this.getFromEnv(\"dataSource\").chart,\n              r = (0, i.getDepsByType)(\"transcoder\");\n          e.prototype.parseChartAttr.call(this, t), (o = this.config).formAction = (0, n.getValidValue)(a.formaction), o.showLegend = (0, n.pluckNumber)(a.showlegend, 0), a.submitdataasxml !== n.ZEROSTRING || a.formdataformat || (a.formdataformat = r.csv().format), o.formDataFormat = (0, n.pluck)(a.formdataformat, r.xml().format), o.formTarget = (0, n.pluck)(a.formtarget, \"_self\"), o.formMethod = (0, n.pluck)(a.formmethod, \"POST\"), o.submitFormAsAjax = (0, n.pluckNumber)(a.submitformusingajax, 1), o.viewMode = (0, n.pluckNumber)(a.viewmode, 0), o.drawTrendRegion = 0;\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.hasLegend = !0, t.friendlyName = \"Dragable Node Chart\", t.defaultDatasetType = \"dragnode\", t.limitUpdaterEnabled = !1, t.skipClipping = !0, t.numVDivLines = 0, t.numDivLines = 0, t.setadaptivexmin = 1, t.showLimits = 0, t.showdivlinevalues = 0, t.showzeroplane = 0, t.showyaxisvalues = 0, t.enablemousetracking = !0, t.showzeroplaneontop = 0;\n        }, t.prototype.addConfigureOptions = function () {\n          var e,\n              t,\n              o = this,\n              a = o.config,\n              r = a.restoreBtnTitle,\n              n = a.submitBtnTitle,\n              i = o.getFromEnv(\"toolbar\"),\n              l = i.getChild(\"hamburgerMenu-\" + i.getId() + \"-\" + o.getId() + \"-0\"),\n              c = o.config.viewMode,\n              u = [{\n            name: \"Add Node\",\n            handler: function handler() {\n              o.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0].getChildren(\"datasetGroup_dragNode\")[0].showNodeAddUI();\n            },\n            action: \"click\"\n          }, {\n            name: \"Add Connector\",\n            handler: function handler() {\n              o.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0].getChildren(\"datasetGroup_dragNode\")[0].showConnectorAddUI();\n            },\n            action: \"click\"\n          }, {\n            name: \"Add Label\",\n            handler: function handler() {\n              o.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0].getChildren(\"datasetGroup_dragNode\")[0].showLabelUpdateUI();\n            },\n            action: \"click\"\n          }];\n          a.showRestoreBtn && (e = {\n            name: r,\n            handler: function handler() {\n              o.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0].getChildren(\"datasetGroup_dragNode\")[0].restoreData();\n            },\n            action: \"click\"\n          }, u.push(e)), a.showFormBtn && (t = {\n            name: n,\n            handler: function handler() {\n              s.submitData.call(o);\n            },\n            action: \"click\"\n          }, u.push(t)), c || l.appendInMenu(u);\n        }, t.prototype.getDSdef = function (e) {\n          switch (e) {\n            case \"connector\":\n              return r.DragNodeConnector;\n\n            case \"dragnode\":\n              return r.DragNodeDataset;\n\n            case \"dragableLabels\":\n              return r.DragNodeLabels;\n          }\n        }, t.prototype.getDSGroupdef = function () {\n          return r.DragNodeGroup;\n        }, t.prototype._setCategories = function () {\n          var e,\n              t,\n              o = this.getFromEnv(\"dataSource\"),\n              a = this.getChildren(\"xAxis\"),\n              r = o.categories && o.categories[0].category || [],\n              n = r.length,\n              i = [];\n\n          for (e = 0; e < n; e++) {\n            (t = r[e] || {}).x !== undefined && i.push(t);\n          }\n\n          a && a[0].setTickValues(i);\n        }, t.prototype.getJSONData = function () {\n          var e,\n              t = this.getChildren(\"canvas\")[0].getChildren(\"vCanvas\")[0].getChildren(\"datasetGroup_dragNode\")[0],\n              o = this.getFromEnv(\"dataSource\"),\n              a = {};\n          return t && (a = t.getJSONData()), (e = (0, n.extend2)({}, o)).dataset = a.dataset, e.connectors = a.connectors, e.labels = a.labels, e;\n        }, t;\n      }(a[\"default\"]);\n\n      t.configurer = d = f.prototype.configure, t[\"default\"] = f, t.configurer = d;\n    },\n    901: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t.DragNodeGroup = t.DragNodeConnector = t.DragNodeLabels = t.DragNodeDataset = undefined;\n      var a = l(o(902)),\n          r = l(o(904)),\n          n = l(o(906)),\n          i = l(o(908));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      t.DragNodeDataset = a[\"default\"], t.DragNodeLabels = r[\"default\"], t.DragNodeConnector = n[\"default\"], t.DragNodeGroup = i[\"default\"];\n    },\n    902: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = c(o(450)),\n          r = o(125),\n          n = o(132),\n          i = c(o(903)),\n          l = c(o(216)),\n          s = c(o(539));\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = (0, n.getDep)(\"redraphael\", \"plugin\"),\n          h = Math.max,\n          d = Math.min,\n          f = r.preDefStr.CIRCLE,\n          g = r.preDefStr.POLYGON,\n          m = r.preDefStr.RECTANGLE,\n          v = r.preDefStr.UNDERSCORE,\n          b = r.preDefStr.GROUPID,\n          y = r.preDefStr.EVENTARGS,\n          x = r.preDefStr.OBJECTBOUNDINGBOX,\n          k = r.preDefStr.DEFAULT,\n          w = r.preDefStr.COMMA,\n          C = r.preDefStr.POSITION_TOP,\n          N = !!r.hasSVG,\n          S = function S() {\n        this.hide();\n      },\n          A = function A(e) {\n        return e !== undefined && null !== e;\n      },\n          E = function E(e, t, o, a) {\n        return t.setAnimation({\n          el: \"group\",\n          attr: {\n            name: e\n          },\n          container: o,\n          component: a\n        });\n      },\n          D = function D(e, t, o) {\n        var a, n, i;\n        return e = (0, r.getFirstColor)(e), t = (0, r.getFirstAlpha)(t), n = (0, r.getLightColor)(e, 80), i = (0, r.getDarkColor)(e, 65), a = {\n          FCcolor: {\n            gradientUnits: x,\n            color: n + w + i,\n            alpha: t + w + t,\n            ratio: r.BGRATIOSTRING\n          }\n        }, o ? a.FCcolor.angle = 1 === o ? 0 : 180 : (a.FCcolor.cx = .4, a.FCcolor.cy = .4, a.FCcolor.r = \"50%\", a.FCcolor.radialGradient = !0), a;\n      },\n          _ = function _(e, t, o) {\n        var a,\n            n = e.setTooltext,\n            i = e.formatedVal,\n            l = t.seriesname,\n            s = e.label,\n            c = e.xValue,\n            u = e.pointLabel,\n            p = t.tooltipSepChar;\n        return n !== undefined ? a = (0, r.parseTooltext)(n, [3, 4, 5, 6, 8, 9, 10, 11], {\n          yaxisName: (0, r.parseUnsafeString)(o.yaxisname),\n          xaxisName: (0, r.parseUnsafeString)(o.xaxisname),\n          yDataValue: i,\n          xDataValue: c,\n          label: s\n        }, e, o, t) : u !== undefined ? a = s : null === i ? a = !1 : (t.seriesNameInToolTip && (l = (0, r.getFirstValue)(t.seriesname)), a = l ? l + p : r.BLANK, a += c ? c + p : r.BLANK, a += i), a;\n      };\n\n      (0, n.addDep)({\n        name: \"dragNodeAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      }), (0, l[\"default\"])(p);\n\n      var T = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return u(t, e), t.prototype.getName = function () {\n          return \"dragNode\";\n        }, t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.hide = function () {\n          var e = this.getLinkedParent(),\n              t = {\n            hide: !0\n          };\n          this.setState(\"dirty\", !0), this.setState(\"visible\", !1), e.childChanged(t), this.getFromEnv(\"chart\").getChildren(\"legend\")[0].getItem(this.config.legendItemId).setLegendState(\"hidden\"), this.asyncDraw();\n        }, t.prototype.show = function () {\n          var e = this.getLinkedParent(),\n              t = this.getFromEnv(\"legend\").getItem(this.config.legendItemId),\n              o = {\n            show: !0\n          };\n          this.setState(\"visible\", !0), this.setState(\"dirty\", !0), e.childChanged(o), t && t.removeLegendState(\"hidden\"), this.asyncDraw();\n        }, t.prototype._setDatasetIndex = function () {\n          var e = this.getLinkedParent().getChildren(\"dataset\");\n          this.config.datasetIndex = e.indexOf(this);\n        }, t.prototype.pointInShape = function (e, t, o) {\n          var a,\n              r,\n              n,\n              i,\n              l,\n              s = this.getFromEnv(\"chart\").getChildren(\"canvas\")[0].config,\n              c = o.symbol,\n              u = o._xPos,\n              p = o._yPos;\n          return !(e < s.canvasLeft || e > s.canvasLeft + s.canvasWidth || t < s.canvasTop || t > s.canvasTop + s.canvasHeight) && (\"rectangle\" === c ? (i = o._plotWidth, p -= (l = o._plotHeight) / 2, e >= (u -= i / 2) && t >= p && e <= u + i && t <= p + l) : (a = (e - u) * (e - u), r = (t - p) * (t - p), n = Number(o.radius), a + r <= (n *= n)));\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          var a,\n              n,\n              i,\n              l = this.getFromEnv(\"chart\"),\n              s = this.components,\n              c = this.getFromEnv(\"toolTipController\"),\n              u = s.data[t] || {},\n              p = this.getGraphicalElement(\"sharedAnchor\"),\n              h = u.graphics && u.graphics.element || void 0 !== (u.config && u.config.setValue) && p,\n              d = this.config.currentToolTip,\n              f = this.config.viewMode,\n              g = this.getLinkedParent(),\n              m = u.graphics.element;\n          if (h) switch (i = (a = u.config).setLink, n = a.eventArgs, e) {\n            case \"fc-mouseover\":\n              this._decideTooltipType(t, o), this._rolloverResponseSetter(l, u, o), i && (h.node.style.cursor = r.POINTER);\n              break;\n\n            case \"fc-mouseout\":\n              c.hide(d), this._rolloutResponseSetter(l, u, o), i && (h.node.style.cursor = k);\n              break;\n\n            case \"fc-click\":\n              m.data(\"fire_click_event\") && l.plotEventHandler(h, o, \"dataplotclick\", n);\n              break;\n\n            case \"fc-mousemove\":\n              g.hideWaitElem(), this._decideTooltipType(t, o);\n              break;\n\n            case \"fc-mousedown\":\n              clearTimeout(m._longpressactive), m.data(\"fire_click_event\", 1), f || g.drawWaitingRing(u, this.config.datasetIndex);\n              break;\n\n            case \"fc-mouseup\":\n              g.hideWaitElem(), g.clearLongPress();\n          }\n        }, t.prototype.dragUp = function (e) {\n          this.data(\"drag-options\").dataset._dragUp.call(this, e);\n        }, t.prototype.dragMove = function (e, t) {\n          var o = this.data(\"drag-options\").dataset,\n              a = t[0],\n              r = t[1],\n              n = t[2],\n              i = t[3];\n\n          o._dragMove.call(this, a, r, n, i);\n        }, t.prototype.dragStart = function (e) {\n          this.data(\"drag-options\").dataset._dragStart.call(this, e);\n        }, t.prototype._dragStart = function () {\n          var e,\n              t = this.data(\"drag-options\"),\n              o = t.dataObj,\n              a = o.graphics.element,\n              r = a.getBBox(),\n              n = o.config,\n              i = t.dataset,\n              l = i.getFromEnv(\"chart\"),\n              s = n.dragStart || (n.dragStart = {}),\n              c = o.graphics.cloneGraphic,\n              u = i.getContainer(\"cloneGraphicGroup\"),\n              p = o.graphics.cloneText,\n              h = o.graphics.image,\n              d = o.graphics.cloneImage,\n              f = o.graphics.label;\n          N && (a._.dirty = 1), n.allowDrag && (!c && o.graphics.element && (c = o.graphics.cloneGraphic = o.graphics.element.clone(), u.appendChild(c)), f && !p && ((p = o.graphics.cloneText = o.graphics.label.clone()).followers[0] && p.followers[0].el && u.appendChild(p.followers[0].el), u.appendChild(p)), h && !d && (d = o.graphics.cloneImage = o.graphics.image.clone(), u.appendChild(d)), p && p.show(), d && d.show(), c && c.show()), s.xPos = n._xPos, s.yPos = n._yPos, s.x = n.x, s.y = n.y, s.bBox = r, s.origX = s.lastDx || (s.lastDx = 0), s.origY = s.lastDy || (s.lastDy = 0), e = a.data(y), l.fireChartInstanceEvent(\"dataplotdragstart\", e), c && c.show(), p && p.show(), d && d.show();\n        }, t.prototype._dragMove = function (e, t) {\n          var o,\n              a = this.data(\"drag-options\"),\n              r = a.dataObj,\n              n = r.graphics.element,\n              i = r.graphics.cloneGraphic,\n              l = r.graphics.cloneImage,\n              s = r.graphics.cloneText,\n              c = r.config,\n              u = c.dragStart,\n              p = u.bBox.x + e,\n              h = u.bBox.x2 + e,\n              d = u.bBox.y + t,\n              f = u.bBox.y2 + t,\n              g = a.dataset,\n              m = g.getFromEnv(\"animationManager\"),\n              v = g.getLinkedParent(),\n              b = g.getFromEnv(\"chartConfig\"),\n              y = b.canvasLeft,\n              x = b.canvasRight,\n              k = b.canvasTop,\n              C = b.canvasBottom;\n          p < y && (e += y - p), h > x && (e -= h - x), d < k && (t += k - d), f > C && (t -= f - C), (e || t) && (n.data(\"fire_click_event\", 0), v.hideWaitElem(), v.clearLongPress()), c.allowDrag && (u.draged = !0, u.lastDx = e, u.lastDy = t, o = a._transformObj = {\n            transform: \"t\" + (u.origX + e) + w + (u.origY + t)\n          }, i && m.setAnimation({\n            el: i,\n            attr: o,\n            component: g\n          }), l && m.setAnimation({\n            el: l,\n            attr: o,\n            component: g\n          }), s && m.setAnimation({\n            el: s,\n            attr: {\n              x: c._xPos + e,\n              y: c._yPos + t\n            },\n            component: g\n          }));\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o = this.config.tree.getNeighbour({\n            x: e,\n            y: t\n          }, !1);\n          if (o) return {\n            pointIndex: o.index || o.i,\n            hovered: !0,\n            pointObj: o.data\n          };\n        }, t.prototype._rolloutResponseSetter = function (e, t, o) {\n          var a = this.getFromEnv(\"animationManager\"),\n              n = t.config,\n              i = t.graphics.element,\n              l = n.dragStart,\n              s = i.data(\"unHoverAttr\");\n          l && Object.keys(l).length || (\"poly\" !== n.shapeType && n.shapeType !== f || (s.path = (0, r.polyPathToPath)([n.shapeArg.sides, n._xPos, n._yPos, s.r, n.startAngle, 0])), n.rollOverProperties.enabled && a.setAnimation({\n            el: i,\n            attr: s,\n            component: this\n          }), e && e.plotEventHandler(i, o, \"DataPlotRollOut\"));\n        }, t.prototype._rolloverResponseSetter = function (e, t, o) {\n          var a = this.getFromEnv(\"animationManager\"),\n              n = t.config,\n              i = t.graphics.element,\n              l = n.dragStart,\n              s = i.data(\"hoverAttr\");\n          l && Object.keys(l).length || (\"poly\" !== n.shapeType && n.shapeType !== f || (s.path = (0, r.polyPathToPath)([n.shapeArg.sides, n._xPos, n._yPos, s.r, n.startAngle, 0])), n.rollOverProperties.enabled && a.setAnimation({\n            el: i,\n            attr: s,\n            component: this\n          }), e && e.plotEventHandler(i, o, \"DataPlotRollOver\"));\n        }, t.prototype._dragUp = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s = this.data(\"drag-options\"),\n              c = s.dataset,\n              u = c.getFromEnv(\"chart\"),\n              p = c.components.data,\n              h = s.dataObj,\n              d = h.graphics.element,\n              f = c.getLinkedParent(),\n              g = h.config,\n              m = h.config.dragStart || {},\n              v = c.getFromEnv(\"yAxis\"),\n              b = h.graphics.cloneText,\n              x = c.getFromEnv(\"xAxis\"),\n              k = {},\n              w = c.config.datasetIndex,\n              C = h.graphics.cloneGraphic,\n              N = h.graphics.cloneImage;\n\n          if (f.hideWaitElem(), f.clearLongPress(), m.draged) {\n            for (m.origX += m.lastDx, m.origY += m.lastDy, h.config._xPos = m.xPos + m.lastDx, h.config._yPos = m.yPos + m.lastDy, k.x = x.getValue(h.config._xPos), k.y = v.getValue(h.config._yPos), k.update = !0, a = 0, i = p.length; a < i && (n = p[a], h.config.id !== n.config.id); a++) {\n              ;\n            }\n\n            c.updatePointConfig(k, a), (l = d.data(y)).x = k.x, l.y = k.y, c.parsePlotAttributes(a), c._drawNode(a), t = h.config.startConnectors, o = h.config.endConnectors, f.drawNodeConnectors(t, w), f.drawNodeConnectors(o, w), (0, r.getMouseCoordinate)(u.getFromEnv(\"chart-container\"), e).sourceEvent = \"dataplotdragend\", u.fireChartInstanceEvent(\"chartupdated\", (0, r.extend2)({\n              sourceEvent: \"dataplotdragend\"\n            }, l), e), u.fireChartInstanceEvent(\"dataplotdragend\", l, e), m.draged = !1, c._setupKdTree();\n          }\n\n          b && b.hide(), C && C.hide(), N && N.hide(), delete g.dragStart;\n        }, t.prototype.updatePointConfig = function (e, t) {\n          var o,\n              a = this.components.data,\n              n = this.config,\n              i = (a[t] || {}).config,\n              l = this.getFromEnv(\"number-formatter\"),\n              s = this.getFromEnv(\"chart-attrib\");\n          i !== undefined && (i.y = l.getCleanValue((0, r.pluck)(e.y)), i.x = l.getCleanValue((0, r.pluck)(e.x)), i._options.x = i.x, i._options.y = i.y, o = l.xAxis(i.x), i.formatedVal = null === i.y ? i.y : l.dataLabels(i.y), i.xValue = o, n.showTooltip ? i.toolText = _(i, n, s) : i.toolText = !1, i.update = e.update);\n        }, t.prototype.getNode = function (e) {\n          return e ? this.components.nodes[e] : this.components.nodes;\n        }, t.prototype.configureAttributes = function (e) {\n          if (e) this.trimData(e), this.config.JSONData = e;else if (!e && !this.config.JSONData) return !1;\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c = this.config.datasetIndex,\n              u = this.config.JSONData,\n              p = u.data || [],\n              h = this.getFromEnv(\"chart-attrib\"),\n              d = this.getFromEnv(\"chartConfig\"),\n              f = p.length,\n              g = this.config,\n              m = r.ZEROSTRING,\n              v = this.getFromEnv(\"color-manager\"),\n              b = r.HUNDREDSTRING;\n\n          for (g.context = {}, this.components.nodes = {}, g.showValues = (0, r.pluckNumber)(u.showvalues, h.showvalues, 1), s = g.useRoundEdges = (0, r.pluckNumber)(h.useroundedges), g.zIndex = 1, g.name = (0, r.getValidValue)(u.seriesname), g.viewMode = (0, r.pluckNumber)(h.viewmode, 0), g.id = (0, r.pluck)(u.id, this.index), 0 !== (0, r.pluckNumber)(u.includeinlegend) && g.name !== undefined || (g.showInLegend = !1), g.seriesname = (0, r.parseUnsafeString)(u.seriesname), g.includeinlegend = (0, r.pluckNumber)(u.includeinlegend, g.seriesname ? 1 : 0), g.showTooltip = (0, r.pluckNumber)(h.showtooltip, 1), g.seriesNameInTooltip = (0, r.pluckNumber)(h.seriesnameintooltip, 1), g.tooltipSepChar = (0, r.pluck)(h.tooltipsepchar, \" - \"), o = g.plotFillAlpha = (0, r.pluck)(h.plotfillalpha, b), a = g.showPlotBorder = (0, r.pluckNumber)(h.showplotborder, 1), n = g.plotBorderColor = (0, r.getFirstColor)((0, r.pluck)(h.plotbordercolor, \"666666\")), i = g.plotBorderThickness = (0, r.pluckNumber)(h.plotborderthickness, s ? 2 : 1), l = g.plotBorderAlpha = (0, r.pluck)(h.plotborderalpha, h.plotfillalpha, s ? \"35\" : \"95\"), g.use3DLighting = Boolean((0, r.pluckNumber)(h.use3dlighting, h.is3d, s ? 1 : 0)), g.color = (0, r.getFirstColor)((0, r.pluck)(u.color, v.getPlotColor(c))), g.alpha = (0, r.pluck)(u.plotfillalpha, u.nodeFillAlpha, u.alpha, o), g.datasetShowPlotBorder = Boolean((0, r.pluckNumber)(u.showplotborder, a)), g.datasetPlotBorderColor = (0, r.getFirstColor)((0, r.pluck)(u.plotbordercolor, u.nodebordercolor, n)), g.datasetPlotBorderThickness = (0, r.pluckNumber)(u.plotborderthickness, u.nodeborderthickness, i), g.datasetPlotBorderAlpha = g.datasetShowPlotBorder ? (0, r.pluck)(u.plotborderalpha, u.nodeborderalpha, u.alpha, l) : m, g.datasetAllowDrag = Boolean((0, r.pluckNumber)(u.allowdrag, 1)), g.colorObj = {\n            fillColor: (0, r.convertColor)(g.color, g.alpha),\n            lineColor: {\n              FCcolor: {\n                color: g.datasetPlotBorderColor,\n                alpha: g.datasetPlotBorderAlpha\n              }\n            }\n          }, g.lineWidth = void 0, g.symbol = \"poly_4\", this.components.data || (this.components.data = []), this.setState(\"visible\", 1 === (0, r.pluckNumber)(u.visible, !Number(u.initiallyhidden), 1)), g.yMin = g.yMax = g.xMax = g.xMin = 0, this._refreshData = !0, t = 0; t < f; t += 1) {\n            this._setConfigure(t);\n          }\n\n          this._refreshData = !1, d.showLegend && this._addLegend(), this._setDatasetIndex(), this.setState(\"dirty\", !0);\n        }, t.prototype._setConfigure = function (e, t) {\n          var o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c = this.config.JSONData,\n              u = c.data,\n              p = t || u[e],\n              m = this.components.data,\n              v = this.config,\n              b = m[e] = m[e] || (m[e] = {}),\n              y = b.config = b.config || (b.config = {}),\n              x = v.id,\n              k = v.yMin || +Infinity,\n              w = v.yMax || -Infinity,\n              N = v.xMax || -Infinity,\n              S = v.xMin || +Infinity,\n              E = v.use3DLighting,\n              T = v.datasetPlotBorderThickness,\n              L = v.datasetPlotBorderColor,\n              P = v.datasetPlotBorderAlpha,\n              O = this.getFromEnv(\"chart-attrib\"),\n              V = v.color,\n              M = v.alpha,\n              F = v.datasetAllowDrag,\n              I = this.getFromEnv(\"number-formatter\");\n\n          if (!b.graphics && (b.graphics = {}), y._options = (0, r.extend2)({}, p), p || t) {\n            if (a = y.y = I.getCleanValue((0, r.pluck)(p.y)), n = y.x = I.getCleanValue((0, r.pluck)(p.x)), y.index = e, y.dragStart || (y.dragStart = {}), w = h(w, y.y), k = d(k, y.y), N = h(N, y.x), S = d(S, y.x), null === a) y.value = null;else {\n              switch (i = I.xAxis(n), y.formatedVal = null === a ? a : I.dataLabels(a), y.setTooltext = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(p.tooltext, c.plottooltext, O.plottooltext))), y.pointLabel = (0, r.pluck)(p.label, p.name), l = (0, r.parseUnsafeString)(y.pointLabel), y.label = l, y.name = l, y.displayValue = l, y.xValue = i, t || (y.startConnectors = {}, y.endConnectors = {}), v.showTooltip ? y.toolText = _(y, v, O) : y.toolText = !1, y.link = p.link, y.id = (0, r.pluck)(p.id, x + r.preDefStr.UNDERSCORE + e), y.allowDrag = Boolean((0, r.pluckNumber)(p.allowdrag, F)), o = y.shape = (0, r.getValidValue)((0, r.pluck)(p.shape), r.preDefStr.RECTANGLE).toLowerCase(), y.height = (0, r.getValidValue)((0, r.pluck)(p.height), 10), y.width = (0, r.getValidValue)((0, r.pluck)(p.width), 10), y.radius = (0, r.getValidValue)((0, r.pluck)(p.radius), 10), y.numSides = (0, r.getValidValue)((0, r.pluck)(p.numsides), 4), y.color = (0, r.getFirstColor)((0, r.pluck)(p.color, V)), y.borderColor = (0, r.getFirstColor)((0, r.pluck)(p.bordercolor, L)), y.alpha = (0, r.pluck)(p.alpha, M), y.imageURL = (0, r.getValidValue)(p.imageurl), y.imageNode = Boolean((0, r.pluckNumber)(p.imagenode)), y.imageWidth = p.imagewidth, y.imageHeight = p.imageheight, y.imageAlign = (0, r.getValidValue)(p.imagealign, r.BLANK).toLowerCase(), y.labelAlign = (0, r.pluck)(p.labelalign, y.imageNode && A(y.imageURL) ? C : r.preDefStr.POSITION_MIDDLE), y.hovercolor = (0, r.pluck)(p.hovercolor, c.hovercolor), y.borderhoveralpha = (0, r.pluck)(p.borderhoveralpha, c.borderhoveralpha), y.borderhovercolor = (0, r.pluck)(p.borderhovercolor, c.borderhovercolor), y.borderhoverthickness = (0, r.pluck)(p.borderhoverthickness, c.borderhoverthickness), y.hoveralpha = (0, r.pluck)(p.hoveralpha, c.hoveralpha), y.hoverheight = (0, r.pluck)(p.hoverheight, c.hoverheight), y.hoverradius = (0, r.pluck)(p.hoverradius, c.hoverradius), y.hoverwidth = (0, r.pluck)(p.hoverwidth, c.hoverwidth), y.shape) {\n                case f:\n                  s = 0;\n                  break;\n\n                case g:\n                  s = 2, o = (0, r.mapSymbolName)(y.numSides);\n                  break;\n\n                default:\n                  s = 1;\n              }\n\n              y.symbol = o, E ? (y.fillColor = D(y.color, y.alpha, s), y.cloneFillColor = D(y.color, 50, s)) : (y.fillColor = {\n                color: y.color,\n                alpha: y.alpha\n              }, y.cloneFillColor = (0, r.convertColor)(y.color, 50)), y.colorArr = [{\n                FCcolor: {\n                  color: y.color,\n                  alpha: y.alpha\n                }\n              }, {\n                FCcolor: {\n                  color: y.borderColor,\n                  alpha: P\n                }\n              }], y.rollOverProperties = this.pointHoverOptions(b, O, {\n                shapeType: s,\n                use3D: E,\n                height: y.height,\n                width: y.width,\n                radius: y.radius,\n                color: y.color,\n                alpha: y.alpha,\n                borderColor: y.borderColor,\n                borderAlpha: P,\n                borderThickness: T\n              });\n            }\n            !y.update && t && (y.update = t.update), !y.add && t && (y.add = t.add), !0 === this._refreshData && delete b.removed;\n          }\n\n          b.dataset = this, v.xMax = N, v.xMin = S, v.yMin = k, v.yMax = w;\n        }, t.prototype.pointHoverOptions = function (e, t, o) {\n          var a,\n              n,\n              i,\n              l = (0, r.pluckNumber)(e.config.showhovereffect, this.config.showhovereffect, t.plothovereffect, t.showhovereffect),\n              s = {},\n              c = !!(0, r.pluck)(e.config.hovercolor, this.config.hovercolor, t.plotfillhovercolor, e.config.hoveralpha, this.config.hoveralpha, t.plotfillhoveralpha, e.config.borderhovercolor, this.config.borderhovercolor, t.plotborderhovercolor, e.config.borderhoveralpha, this.config.borderhoveralpha, t.plotborderhoveralpha, e.config.borderhoverthickness, this.config.borderhoverthickness, t.plotborderhoverthickness, e.config.hoverheight, this.config.hoverheight, t.plothoverheight, e.config.hoverwidth, this.config.hoverwidth, t.plothoverwidth, e.config.hoverradius, this.config.hoverradius, t.plothoverradius, l),\n              u = !1;\n          return (l === undefined && c || l) && (u = !0, a = (0, r.pluck)(e.config.hovercolor, this.config.hovercolor, t.plotfillhovercolor, (0, r.getLightColor)(o.color, 70)), n = (0, r.pluck)(e.config.hoveralpha, this.config.hoveralpha, t.plotfillhoveralpha, o.alpha), s = {\n            stroke: (0, r.convertColor)((0, r.pluck)(e.config.borderhovercolor, this.config.borderhovercolor, t.plotborderhovercolor, o.borderColor), (0, r.pluckNumber)(e.config.borderhoveralpha, this.config.borderhoveralpha, t.plotborderhoveralpha, n, o.borderAlpha)),\n            \"stroke-width\": (0, r.pluckNumber)(e.config.borderhoverthickness, this.config.borderhoverthickness, t.plotborderhoverthickness, o.borderThickness),\n            height: (0, r.pluckNumber)(e.config.hoverheight, this.config.hoverheight, t.plothoverheight, o.height),\n            width: (0, r.pluckNumber)(e.config.hoverwidth, this.config.hoverwidth, t.plothoverwidth, o.width),\n            r: (0, r.pluckNumber)(e.config.hoverradius, this.config.hoverradius, t.plothoverradius, o.radius)\n          }, i = o.use3D ? D((0, r.getFirstColor)((0, r.pluck)(e.config.hovercolor, this.config.hovercolor, t.plotfillhovercolor, (0, r.getLightColor)(o.color, 70))), (0, r.pluck)(e.config.hoveralpha, this.config.hoveralpha, t.plotfillhoveralpha, o.alpha), o.shapeType) : (0, r.convertColor)(a, n), s.fill = (0, r.toRaphaelColor)(i)), {\n            enabled: u,\n            rollOverAttrs: s\n          };\n        }, t.prototype._addLegend = function () {\n          var e,\n              t = this.config,\n              o = this.getFromEnv(\"legend\"),\n              a = {\n            enabled: t.includeInLegend,\n            type: this.type,\n            anchorSide: 4,\n            label: (0, r.getFirstValue)(this.config.JSONData.seriesname)\n          };\n          t.includeinlegend ? ((e = o.getItem(this.config.legendItemId)) ? e.configure({\n            style: o.config.itemStyle,\n            hiddenStyle: o.config.itemHiddenStyle,\n            datasetVisible: o.config.datasetVisible,\n            hoverStyle: o.config.itemHoverStyle\n          }) : (this.config.legendItemId = o.createItem(this), e = o.getItem(this.config.legendItemId), this.addExtEventListener(\"fc-click\", function () {\n            e.itemClickFn();\n          }, e)), e.configure(a), e.setStateCosmetics(\"default\", {\n            symbol: {\n              fill: (0, r.toRaphaelColor)({\n                color: t.color,\n                alpha: t.alpha\n              }),\n              rawFillColor: t.color,\n              stroke: (0, r.toRaphaelColor)({\n                color: t.plotBorderColor,\n                alpha: r.HUNDREDSTRING\n              }),\n              \"stroke-width\": t.anchorBorderThickness\n            }\n          }), this.getState(\"visible\") ? e.removeLegendState(\"hidden\") : e.setLegendState(\"hidden\")) : this.config.legendItemId && o.disposeItem(this.config.legendItemId);\n        }, t.prototype.createContainer = function () {\n          var e = this.getFromEnv(\"animationManager\"),\n              t = this.getLinkedParent().getChildContainer();\n          !this.getContainer(\"nodesGroup\") && this.addContainer(\"nodesGroup\", E(\"nodesGroup\", e, t.defaultVcanvasGroup, this)), !this.getContainer(\"dataLabelsGroup\") && this.addContainer(\"dataLabelsGroup\", E(\"dataLabelsGroup\", e, t.vcanvasLabelGroup, this)), !this.getContainer(\"cloneGraphicGroup\") && this.addContainer(\"cloneGraphicGroup\", E(\"cloneGraphicGroup\", e, t.defaultVcanvasGroup, this));\n        }, t.prototype.draw = function () {\n          var e,\n              t,\n              o,\n              a = this.components,\n              r = this.getFromEnv(\"smartLabel\"),\n              n = a.data,\n              i = this.components.removeDataArr || [],\n              l = i.length,\n              s = this.getFromEnv(\"dataLabelStyle\"),\n              c = {\n            fontFamily: s.fontFamily,\n            fontSize: s.fontSize,\n            lineHeight: s.lineHeight,\n            fontWeight: s.fontWeight,\n            fontStyle: s.fontStyle\n          };\n\n          if (this.getState(\"dirty\") || this._contextChanged()) {\n            for (this.createContainer(), o = this.getContainer(\"nodesGroup\"), this.getFromEnv(\"animationManager\").setAnimation({\n              el: this.getContainer(\"cloneGraphicGroup\"),\n              attr: {\n                opacity: .3\n              },\n              component: this\n            }), o.css(c), r.useEllipsesOnOverflow(this.getFromEnv(\"chartConfig\").useEllipsesWhenOverflow), e = 0, t = n.length; e < t; e += 1) {\n              !n[e].removed && this._drawNode(e);\n            }\n\n            for (this.config.drawn = !0, e = 0; e < l; e++) {\n              this._removeDataVisuals(i.shift());\n            }\n\n            this._setupKdTree();\n          }\n        }, t.prototype._setupKdTree = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              i = this.config,\n              l = this.components.data,\n              c = -Infinity;\n\n          for (n = i.searchDataArr = [], e = l.length, t = 0; t < e; t++) {\n            o = l[t].config, l[t].removed || o._yPos === undefined || isNaN(o._yPos) || (a = o.props.element.attr, c = Math.max(c, (0, r.pluckNumber)(o.radius, 0)), n.push({\n              x: (0, r.pluckNumber)(a.x, o._xPos),\n              y: (0, r.pluckNumber)(a.y, o._yPos),\n              index: t,\n              data: l[t],\n              shapeInfo: {\n                type: o.shape,\n                radius: (0, r.pluck)(o.radius, 0),\n                width: (0, r.pluckNumber)(o.width),\n                height: (0, r.pluckNumber)(o.height),\n                sides: (0, r.pluckNumber)(o.numSides)\n              }\n            }));\n          }\n\n          i.tree = new s[\"default\"](!0).buildKdTree(n), i.tree._setSearchLimit(c, c);\n        }, t.prototype.drawLabel = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              x,\n              k,\n              w,\n              N,\n              S,\n              E,\n              D,\n              _ = this.getFromEnv(\"chart\"),\n              T = this.config.datasetIndex,\n              L = this.getFromEnv(\"animationManager\"),\n              P = this.components.data,\n              O = P.length,\n              V = this.getContainer(\"nodesGroup\"),\n              M = this.getFromEnv(\"chartConfig\"),\n              F = this.getFromEnv(\"dataLabelStyle\"),\n              I = this.dragUp,\n              B = this.dragMove,\n              R = this.dragStart,\n              j = this.getFromEnv(\"smartLabel\"),\n              G = this.getState(\"visible\");\n\n          for (j.setStyle(F), e !== undefined ? O = (t = e) + 1 : t = 0; t < O; t++) {\n            if (v = (n = (p = P[t]).config)._plotWidth, x = n._plotHeight, i = n.displayValue, k = n.labelAlign, m = (w = p.graphics).cloneText, N = p.config.rollOverProperties, S = n.shapeType, G && (A(i) || i !== r.BLANK)) {\n              switch (j.useEllipsesOnOverflow(M.useEllipsesWhenOverflow), c = .5 * x - .5 * (s = j.getSmartText(i, v - 1, x - 1)).height, k) {\n                case C:\n                  c = -c;\n                  break;\n\n                case r.POSITION_BOTTOM:\n                  break;\n\n                default:\n                  c = 0;\n              }\n\n              d = n._xPos, E = n._yPos, p._yAdjustment = h = c, f = E + h, l = n.link ? r.POINTER : n.allowDrag ? \"move\" : r.BLANKSTRING, o = {\n                text: s.text,\n                title: s.tooltext || r.BLANKSTRING,\n                fill: F.color,\n                \"text-bound\": [F.backgroundColor, F.borderColor, F.borderThickness, F.borderPadding, F.borderRadius, F.borderDash],\n                x: d,\n                y: f,\n                cursor: l\n              }, a = w.label, a = L.setAnimation({\n                el: a || \"text\",\n                attr: o,\n                container: V,\n                component: this\n              }), w.label ? a.show() : (a = this.addGraphicalElement(\"plotLabel\", a, !0), w.label = a, a.drag(B, R, I)), (D = w && (w.image || w.element)) && a.insertAfter(D), m && L.setAnimation({\n                el: m,\n                attr: {\n                  transform: r.BLANKSTRING,\n                  x: d,\n                  y: f,\n                  text: s.text,\n                  title: s.tooltext || r.BLANKSTRING,\n                  fill: F.color,\n                  \"text-bound\": [F.backgroundColor, F.borderColor, F.borderThickness, F.borderPadding, F.borderRadius, F.borderDash]\n                },\n                component: this\n              }), a.data(\"drag-options\", {\n                dataObj: p,\n                dataset: this,\n                datasetIndex: T,\n                pointIndex: p.config.index,\n                cursor: l,\n                chart: _,\n                link: p.link\n              }), u = {\n                index: t,\n                link: n.link,\n                y: n.y,\n                x: n.x,\n                shape: (0, r.pluck)(S, \"rect\"),\n                width: n.width,\n                height: n.height,\n                radius: n.radius,\n                sides: n.numSides,\n                label: n.displayValue,\n                toolText: n.toolText,\n                id: n.id,\n                datasetIndex: T,\n                datasetName: this.config.JSONData.seriesname,\n                sourceType: \"dataplot\"\n              }, g = T + \"_\" + t, a.data(b, g), a.data(y, u), a.data(\"hoverAttr\", N && N.rollOverAttrs), a.data(\"unHoverAttr\", D.data(\"unHoverAttr\"));\n            } else w.label && w.label.hide();\n          }\n        }, t.prototype.parsePlotAttributes = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              g,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D = this.config.datasetIndex,\n              _ = this.components,\n              T = _.nodes,\n              L = this.getFromEnv(\"xAxis\"),\n              P = this.getFromEnv(\"yAxis\"),\n              O = _.data[e],\n              V = O.config,\n              M = this.config,\n              F = O.graphics || (O.graphics = {}),\n              I = V.symbol,\n              B = M.colorObj.lineColor,\n              R = M.datasetPlotBorderThickness,\n              j = O.config.rollOverProperties,\n              G = V.shape,\n              H = V.link ? r.POINTER : V.allowDrag ? \"move\" : r.BLANKSTRING,\n              W = F.cloneImage;\n\n          if (V._yPos = o = P.getPixel(V.y), V._xPos = t = L.getPixel(V.x), o !== undefined && !isNaN(o)) {\n            if (V.shapeArg = {}, c = V.shapeArg, n = (0, r.pluckNumber)(V.height), a = (0, r.pluckNumber)(V.width), i = (0, r.pluckNumber)(V.radius), g = I === m, l = V.id, s = V.imageNode, u = V.imageURL, p = V.imageAlign, h = g ? a : 1.4 * i, b = (0, r.pluckNumber)(V.imageWidth, h), d = g ? n : 1.4 * i, y = (0, r.pluckNumber)(V.imageHeight, d), w = (0, r.toRaphaelColor)(V.fillColor), V._plotWidth = h, V._plotHeight = d, k = {\n              fill: w,\n              \"stroke-width\": R,\n              stroke: (0, r.toRaphaelColor)(B)\n            }, N = [(I = (I = c.symbol = (0, r.pluck)(V.symbol, M.symbol, r.BLANK)).split(v))[1], t, o, V.radius, V.startAngle, 0], \"poly\" === I[0] || I[0] === f ? (V.shapeType = I[0], V.elemType = \"path\", S = {\n              path: (0, r.polyPathToPath)(N)\n            }, c.x = t, c.y = o, c.radius = V.radius, c.sides = I[1], k.r = V.radius, delete k.width, delete k.x, delete k.y, delete k.height, j && j.enabled && (delete (C = j.rollOverAttrs).x, delete C.y, delete C.width, delete C.height)) : (V.shapeType = r.SHAPE_RECT, V.elemType = \"rect\", c.x = t - a / 2, c.y = o - n / 2, c.r = 0, c.width = a, c.height = n, S = {\n              x: c.x,\n              y: c.y,\n              width: a,\n              height: n,\n              r: 0\n            }, k.width = a, k.height = n, k.x = t - a / 2, k.y = o - n / 2, j && j.enabled && ((C = j.rollOverAttrs).x = t - C.width / 2, C.y = o - C.height / 2, delete C.r)), S.fill = w, S[\"stroke-width\"] = R, S.stroke = (0, r.toRaphaelColor)(B), V.eventArgs = {\n              index: e,\n              link: V.link,\n              y: V.y,\n              x: V.x,\n              shape: (0, r.pluck)(G, \"rect\"),\n              width: a,\n              height: n,\n              radius: i,\n              sides: V.numSides,\n              label: V.displayValue,\n              toolText: V.toolText,\n              id: V.id,\n              datasetIndex: D,\n              datasetName: this.config.JSONData.seriesname,\n              sourceType: \"dataplot\"\n            }, s && u) {\n              switch (y > d && (y = d), b > h && (b = h), p) {\n                case r.POSITION_MIDDLE:\n                  x = o - y / 2;\n                  break;\n\n                case r.POSITION_BOTTOM:\n                  x = d > y ? o + d / 2 - y : o - y / 2;\n                  break;\n\n                default:\n                  x = d > y ? o - .5 * d : o - y / 2;\n              }\n\n              V.imageX = t - b / 2, V.imageY = x, V.imageWidth = b, V.imageHeight = y, E = {\n                src: u,\n                x: V.imageX,\n                y: x,\n                width: b,\n                height: y,\n                cursor: H\n              }, W && (A = {\n                transform: r.BLANKSTRING,\n                src: u,\n                x: V.imageX,\n                y: x,\n                width: b,\n                height: y\n              });\n            }\n\n            V.pointAttr = k, T[l] = O, V.props = {\n              element: {\n                attr: S\n              },\n              imageElement: {\n                attr: E\n              },\n              cloneImage: {\n                attr: A\n              },\n              cloneGraphic: {\n                attr: S\n              }\n            };\n          }\n        }, t.prototype.allocatePosition = function (e) {\n          var t, o;\n          if (o = this.components.data.length, e !== undefined) this.parsePlotAttributes(e);else for (t = 0; t < o; t++) {\n            this.parsePlotAttributes(t);\n          }\n        }, t.prototype._drawNode = function (e) {\n          var t,\n              o,\n              a = this.getFromEnv(\"chart\"),\n              n = this.config.datasetIndex,\n              i = this.getLinkedParent(),\n              l = this.components,\n              s = this.getFromEnv(\"animationManager\"),\n              c = l.data[e],\n              u = c.config,\n              p = c.graphics || (c.graphics = {}),\n              h = u.imageNode,\n              d = u.imageURL,\n              f = this.getContainer(\"nodesGroup\"),\n              g = c.config.rollOverProperties,\n              m = this.dragUp,\n              v = this.dragMove,\n              x = this.dragStart,\n              k = u.link ? r.POINTER : u.allowDrag ? \"move\" : r.BLANKSTRING,\n              w = p.graphic,\n              C = p.cloneText,\n              N = p.cloneGraphic,\n              A = p.cloneImage,\n              E = p.image,\n              D = p.label,\n              _ = this.getState(\"visible\");\n\n          u._yPos === undefined || isNaN(u._yPos) ? (p.element && (p.element = s.setAnimation({\n            el: p.element,\n            component: this\n          })), p.image && (p.image = s.setAnimation({\n            el: p.image,\n            component: this\n          })), p.label && (p.label = s.setAnimation({\n            el: p.label,\n            component: this\n          }))) : (o = (w = p.element) && w.type, -1 === u.elemType.indexOf(o) && w && (w.remove(), w = p.element = null, D && D.remove(), E && E.remove(), delete p.label, delete p.image, E = null, D = null), w = s.setAnimation({\n            el: w || u.elemType,\n            label: \"node\",\n            attr: u.props.element.attr,\n            container: f,\n            component: this\n          }), p.graphic || w.drag(v, x, m), p.element = w, w.show(), i.animationDone = !0, t = n + \"_\" + e, N && (N.type === w.type ? s.setAnimation({\n            el: N,\n            attr: u.props.element.attr,\n            component: this\n          }).transform(r.BLANKSTRING) : (N.remove(), delete c.graphics.cloneGraphic, C && (C.remove(), delete c.graphics.cloneText))), h && d ? (E = s.setAnimation({\n            el: p.image || \"image\",\n            attr: _ && u.props.imageElement.attr,\n            doNotRemove: !0,\n            container: f,\n            component: this,\n            callback: !_ && S\n          }), !p.image && E && E.drag(v, x, m), p.image = E, _ && E.show(), E.data(\"drag-options\", {\n            dataObj: c,\n            dataset: this,\n            datasetIndex: this.index,\n            pointIndex: c.config.index,\n            cursor: k,\n            link: c.link\n          }), E.data(b, t), E.data(y, u.eventArgs), E.data(\"hoverAttr\", g && g.rollOverAttrs), E.data(\"unHoverAttr\", u.pointAttr), A && s.setAnimation({\n            el: A,\n            attr: u.props.cloneImage.attr,\n            component: this\n          })) : p.image && (p.image = s.setAnimation({\n            el: p.image,\n            component: this\n          })), this.drawLabel(e), s.setAnimation({\n            el: w,\n            attr: {\n              cursor: k\n            },\n            component: this\n          }), w.data(\"drag-options\", {\n            dataObj: c,\n            dataset: this,\n            datasetIndex: this.index,\n            pointIndex: c.config.index,\n            cursor: k,\n            chart: a,\n            link: c.link\n          }), w.data(b, t), w.data(y, u.eventArgs), w.data(\"hoverAttr\", g && g.rollOverAttrs), w.data(\"unHoverAttr\", u.pointAttr), _ ? w.show() : w.hide());\n        }, t.prototype.trimData = function (e) {\n          if (this.config.JSONData) {\n            var t = this.components,\n                o = t.data && t.data.length,\n                a = e.data && e.data.length || 0,\n                r = o - a;\n            r > 0 && this.removeData(a, r);\n          }\n        }, t.prototype.removeData = function (e, t) {\n          var o = this.components,\n              a = this.getLinkedParent(),\n              r = o.data,\n              n = o.removeDataArr || (o.removeDataArr = []);\n          t = t || 1, (e = e || 0) < 0 && (e = 0), o.removeDataArr = n = n.concat(r.splice(e, t)), a._clearConnectors();\n        }, t.prototype._removeDataVisuals = function (e) {\n          var t, o, a;\n          if (e) for (t in o = e.graphics) {\n            (a = o[t]).hide && \"function\" == typeof a.hide && (this.getFromEnv(\"animationManager\").setAnimation({\n              el: a,\n              attr: {\n                \"text-bound\": []\n              },\n              component: this\n            }), a.hide(), a.transform && a.transform(r.BLANKSTRING));\n          }\n        }, t.prototype.getJSONData = function () {\n          var e,\n              t,\n              o = this.components.data,\n              a = o.length,\n              r = [];\n\n          for (t = 0; t < a; t++) {\n            (e = o[t]).removed || e.config._options && (delete e.config._options.update, delete e.config._options.add, r.push(e.config._options));\n          }\n\n          return r;\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = T;\n    },\n    903: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.dragNode\": function initialDatasetDragNode() {\n          return {\n            \"node.appearing\": function nodeAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"axis\"\n              }];\n            }\n          };\n        }\n      };\n    },\n    904: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(902)),\n          r = o(125),\n          n = o(132),\n          i = l(o(905));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = r.preDefStr.PX,\n          u = \"rgba(192,192,192,\" + (r.isIE ? .002 : 1e-6) + \")\",\n          p = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return (0, n.addDep)({\n            name: \"draggablelabelAnimation\",\n            type: \"animationRule\",\n            extension: i[\"default\"]\n          }), o;\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"dragNodeLabels\";\n        }, t.prototype.configure = function (e) {\n          if (e) this.trimData(e), this.config.JSONData = e.label;else if (!e && !this.config.JSONData) return !1;\n          var t,\n              o = this.getFromEnv(\"chart-attrib\"),\n              a = this.config,\n              n = (this.config.JSONData || []).length,\n              i = this.components.data;\n\n          for (a.viewMode = (0, r.pluckNumber)(o.viewmode, 0), i || (i = this.components.data = []), t = 0; t < n; t++) {\n            this._setConfigure(t);\n          }\n        }, t.prototype._setConfigure = function (e, t) {\n          var o,\n              a,\n              n,\n              i,\n              l = this.config.JSONData,\n              s = t || l[e],\n              u = this.components.data,\n              p = this.getFromEnv(\"style\").inCanvasStyle,\n              h = p.fontSize;\n          !(o = u[e]) && (o = u[e] = {}), !o.graphics && (o.graphics = {}), n = o.config = o.config || (o.config = {}), a = (0, r.parseUnsafeString)((0, r.pluck)(s.text, s.label)), n._options = s, n.add = s.add, a && (n.text = a, n.x = s.x || 0, n.y = s.y || 0, n.labelFontSize = i = (0, r.pluckNumber)(s.fontsize, h), n.labelColor = (0, r.hashify)((0, r.pluck)(s.color, p.color)), n.alpha = (0, r.pluckNumber)(s.alpha, 100) / 100, n.allowDrag = (0, r.pluckNumber)(s.allowdrag, 1), n.padding = (0, r.pluckNumber)(s.padding, 5), s.fontsize ? n.labelCSS = {\n            fontSize: i + c\n          } : n.labelCSS = {}, n.labelBGColor = (0, r.pluck)(s.bgcolor && s.bgcolor.replace(r.dropHash, r.HASHSTRING)), n.labelBDColor = (0, r.pluck)(s.bordercolor && s.bordercolor.replace(r.dropHash, r.HASHSTRING)), n.link = s.link, n.borderThickness = s.borderthickness, n.dashLen = s.dashlen, n.dashGap = s.dashgap, n.dashed = s.dashed, n.radius = s.radius);\n        }, t.prototype.getJSONData = function () {\n          var e,\n              t,\n              o = this.components.data,\n              a = o.length,\n              r = [];\n\n          for (t = 0; t < a; t++) {\n            (e = o[t]).removed || e.config._options && r.push(e.config._options);\n          }\n\n          return r;\n        }, t.prototype.createContainer = function () {\n          var e = this.getFromEnv(\"animationManager\"),\n              t = this.getLinkedParent().getChildContainer();\n          !this.getContainer(\"dragLabelGroup\") && this.addContainer(\"dragLabelGroup\", e.setAnimation({\n            el: \"group\",\n            attr: {\n              name: \"dragLabelGroup\"\n            },\n            label: \"group\",\n            component: this,\n            container: t.defaultVcanvasGroup\n          }));\n        }, t.prototype.allocatePosition = function () {\n          this.parsePlotAttributes();\n        }, t.prototype.parsePlotAttributes = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w = this.components.data,\n              C = this.getFromEnv(\"yAxis\"),\n              N = this.getFromEnv(\"xAxis\"),\n              S = this.getFromEnv(\"smartLabel\"),\n              A = this.getFromEnv(\"dataLabelStyle\"),\n              E = w && w.length,\n              D = this.getFromEnv(\"chartConfig\");\n\n          for (x = 0; x < E; x++) {\n            (d = w[x]).removed || (p = d.config, !d.graphics && (d.graphics = {}), p.index = x, a = N.getPixel(p.x), n = C.getPixel(p.y), l = p.text, s = p.labelBGColor, c = p.labelBDColor, u = p.padding, f = p.allowDrag, g = p.labelFontSize, i = p.labelColor, m = p.radius, o = p.dashed, b = p.borderThickness, e = p.dashLen, t = p.dashGap, b = p.borderThickness, k = p.labelCSS, h = {\n              x: a,\n              y: n,\n              text: l,\n              align: r.POSITION_CENTER,\n              fill: i,\n              \"text-bound\": [s || r.BLANKSTRING, c || r.BLANKSTRING, (0, r.pluckNumber)(b, 1), u, (0, r.pluckNumber)(m, 0), (0, r.pluckNumber)(o, 0) ? (0, r.getDashStyle)((0, r.pluckNumber)(e, 5), (0, r.pluckNumber)(t, 4)) : r.DASH_DEF],\n              visibility: r.visibleStr\n            }, y = {\n              backgroundColor: s,\n              borderColor: c,\n              borderPadding: u,\n              fontSize: g + r.PXSTRING,\n              fontStyle: A.fontStyle,\n              fontWeight: A.fontWeight,\n              borderRadius: 0,\n              borderDash: r.DASH_DEF,\n              fontFamily: A.fontFamily\n            }, (0, r.setLineHeight)(y), S.useEllipsesOnOverflow(D.useEllipsesWhenOverflow), S.setStyle(y), k[\"line-height\"] = y.lineHeight, p.eventArgs = {\n              link: p.link,\n              text: l,\n              x: a,\n              y: n,\n              allowdrag: f,\n              sourceType: \"labelnode\"\n            }, p.props = {\n              element: {\n                attr: h\n              }\n            }, p.labelCSSApplied = k, v = S.getOriSize(l), p.width = v.width, p.height = v.height, p.xPos = a, p.yPos = n);\n          }\n        }, t.prototype.draw = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i = this.components.data,\n              l = this.getFromEnv(\"animationManager\"),\n              s = this.getFromEnv(\"dataLabelStyle\"),\n              c = i && i.length,\n              u = this.components.removeDataArr || [],\n              p = u.length;\n\n          for (this.createContainer(), (n = this.getContainer(\"dragLabelGroup\")).css({\n            \"font-weight\": s.fontWeight,\n            \"font-style\": s.fontStyle,\n            \"font-size\": s.fontSize,\n            \"font-family\": s.fontFamily\n          }), r = 0; r < c; r++) {\n            (t = i[r]).removed || (e = t.config, a = t.graphics.element, o = l.setAnimation({\n              el: a || \"text\",\n              container: n,\n              css: e.labelCSS,\n              attr: e.props.element.attr,\n              component: this\n            }), a ? (e.labelCSSApplied && o.removeCSS(), o.show().css(e.labelCSS)) : t.graphics.element = o, o.data(\"eventArgs\", e.eventArgs));\n          }\n\n          for (this.drawTracker(), r = 0; r < p; r++) {\n            this._removeDataVisuals(u.shift());\n          }\n        }, t.prototype.drawTracker = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m = this,\n              v = m.components.data,\n              b = m.getFromEnv(\"animationManager\"),\n              y = m.getFromEnv(\"chart\"),\n              x = m.getLinkedParent(),\n              k = m.config,\n              w = m.getContainer(\"dragLabelGroup\"),\n              C = v && v.length,\n              N = function N() {\n            var e = this.data(\"drag-options\"),\n                t = e.dataset,\n                o = e.index,\n                a = t.components.data[o];\n            this.data(\"fire_click_event\", 1), x.clearLongPress(), x.triggerLabelUI(this, a);\n          },\n              S = function S() {\n            this.data(\"fire_click_event\") && (this.data(\"fire_click_event\", 0), x.clearLongPress());\n          },\n              A = function A(e) {\n            var t = this.data(\"fire_click_event\");\n            x.clearLongPress(), t && y.plotEventHandler(this, e, \"LabelClick\");\n          },\n              E = function E(e) {\n            y.plotEventHandler(this, e, \"LabelRollover\");\n          },\n              D = function D(e) {\n            y.plotEventHandler(this, e, \"LabelRollout\");\n          },\n              _ = function _(e, t) {\n            m._labelDragMove.call(this, e, t, y);\n          },\n              T = function T(e) {\n            m._labelDragStart.call(this, e, y);\n          },\n              L = function L(e) {\n            m._labelDragUp.call(this, e);\n          };\n\n          for (g = 0; g < C; g++) {\n            (e = v[g]).removed || (o = (t = e.config).padding || 0, d = t.width, f = t.height, p = t.xPos - d / 2, h = t.yPos - f / 2, i = t.allowDrag, l = t.text, c = e.graphics.trackerElement, n = {\n              x: p - o,\n              y: h - o,\n              width: d + 2 * o,\n              height: f + 2 * o,\n              cursor: t.allowDrag ? \"move\" : r.BLANKSTRING,\n              fill: u,\n              stroke: u\n            }, a = {\n              link: t.link,\n              text: l,\n              x: p,\n              y: h,\n              allowdrag: i,\n              sourceType: \"labelnode\"\n            }, s = b.setAnimation({\n              el: c || \"rect\",\n              container: w,\n              attr: n,\n              component: m\n            }), c || (e.graphics.trackerElement = s, s.on(\"fc-mousedown\", N).on(\"fc-mousemove\", S).on(\"fc-mouseup\", A).data(\"viewMode\", k.viewMode).data(r.preDefStr.EVENTARGS, a).hover(E, D), t.allowDrag && s.drag(_, T, L)), s.data(\"drag-options\", {\n              index: g,\n              dataset: m\n            }));\n          }\n        }, t.prototype._labelDragStart = function () {\n          var e = this.getBBox(),\n              t = this.data(\"drag-options\"),\n              o = t.dataset,\n              a = o.getLinkedParent(),\n              r = t.index,\n              n = o.components.data[r],\n              i = n.graphics.element,\n              l = n.dragStart = n.dragStart || (n.dragStart = {});\n          t.ox = i.attr(\"x\"), t.oy = i.attr(\"y\"), t.bBox = e, l.xPos = n.config.xPos, l.yPos = n.config.yPos, l.bBox = e, this.data(\"fire_click_event\", 1), this.data(\"fire_dragend\", 0), a.clearLongPress(), a.triggerLabelUI(this, n);\n        }, t.prototype._labelDragMove = function (e, t) {\n          var o,\n              a,\n              r = this.data(\"drag-options\"),\n              n = r.index,\n              i = r.dataset,\n              l = i.getFromEnv(\"chart\"),\n              s = i.getFromEnv(\"chartConfig\"),\n              c = s.canvasLeft,\n              u = s.canvasRight,\n              p = s.canvasBottom,\n              h = s.canvasTop,\n              d = i.getLinkedParent(),\n              f = i.components.data[n],\n              g = f.graphics.element,\n              m = f.dragStart,\n              v = m.bBox,\n              b = t[0],\n              y = t[1],\n              x = m.bBox.x + b,\n              k = m.bBox.x2 + b,\n              w = m.bBox.y + y,\n              C = m.bBox.y2 + y,\n              N = i.getFromEnv(\"yAxis\"),\n              S = i.getFromEnv(\"xAxis\");\n          x < c && (b += c - x), k > u && (b -= k - u), w < h && (y += h - w), C > p && (y -= C - p), m.draged = !0, this.attr({\n            x: v.x + b,\n            y: v.y + y\n          }), o = r.ox + b, a = r.oy + y, g.attr({\n            x: r.ox + b,\n            y: r.oy + y\n          }), f.config.x = S.getValue(o), f.config.y = N.getValue(a), this.data(\"fire_dragend\") || (l.plotEventHandler(this, e, \"LabelDragStart\"), this.data(\"fire_dragend\", 1)), this.data(\"fire_click_event\") && (this.data(\"fire_click_event\", 0), d.clearLongPress());\n        }, t.prototype._labelDragUp = function (e) {\n          var t = this.data(\"drag-options\"),\n              o = t.index,\n              a = t.dataset,\n              n = a.getFromEnv(\"chart\"),\n              i = n.getChildren(\"xAxis\")[0],\n              l = n.getChildren(\"yAxis\")[0],\n              s = a.getLinkedParent(),\n              c = a.components.data[o].dragStart,\n              u = this.data(\"eventArgs\");\n          u.x = i.getValue(this.attr(\"x\")), u.y = l.getValue(this.attr(\"y\")), c.draged = !1, this.data(\"fire_dragend\") && (n.fireChartInstanceEvent(\"chartupdated\", (0, r.extend2)({\n            sourceEvent: \"labeldragend\"\n          }, u), e), n.fireChartInstanceEvent(\"chartupdated\", u, e), n.plotEventHandler(this, e, \"labeldragend\")), s.clearLongPress();\n        }, t.prototype.removeData = function (e, t) {\n          var o = this.components,\n              a = o.data;\n          o.removeDataArr = a.splice(e, t);\n        }, t.prototype.trimData = function (e) {\n          if (this.config.JSONData) {\n            var t = this.config.JSONData,\n                o = t && t.length,\n                a = e.label && e.label.length || 0,\n                r = o - a;\n            r > 0 && this.removeData(a, r);\n          }\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = p;\n    },\n    905: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.dragNodeLabels\": function initialDatasetDragNodeLabels() {\n          return {\n            \"group.appearing\": function groupAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"plot\"\n              }];\n            }\n          };\n        }\n      };\n    },\n    906: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(902)),\n          r = o(125),\n          n = o(132),\n          i = l(o(907));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = r.preDefStr.EVENTARGS,\n          u = r.preDefStr.configStr,\n          p = function p(e) {\n        var t,\n            o = e.config,\n            a = o.fromPointObj,\n            n = o.toPointObj,\n            i = o.fromX,\n            l = o.fromY,\n            s = o.toX,\n            c = o.toY,\n            u = [\"M\", i, l];\n        return o.arrowAtStart && (u = (t = a.config).shapeType === r.SHAPE_RECT ? u.concat(d._drawArrow(i, l, s, c, t.shapeArg.width, t.shapeArg.height)) : u.concat(d._drawArrow(i, l, s, c, t.shapeArg.radius))), o.arrowAtEnd && (u = (t = n.config).shapeType === r.SHAPE_RECT ? u.concat(d._drawArrow(s, c, i, l, t.shapeArg.width, t.shapeArg.height)) : u.concat(d._drawArrow(s, c, i, l, t.shapeArg.radius))), u.push(\"L\", s, c), u;\n      },\n          h = function h(e, t, o) {\n        return o.getFromEnv(\"animationManager\").setAnimation({\n          el: \"group\",\n          attr: {\n            name: e\n          },\n          container: t,\n          component: o,\n          label: \"group\"\n        });\n      };\n\n      (0, n.addDep)({\n        name: \"connectorAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var d = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"dragNodeConnector\";\n        }, t.prototype._setDatasetIndex = function () {\n          var e = this.getLinkedParent().getChildren(\"connector\");\n          this.config.datasetIndex = e.indexOf(this);\n        }, t.prototype.configureAttributes = function (e) {\n          if (e) this.trimData(e), this.config.JSONData = e;else if (!e && !this.config.JSONData) return !1;\n          var t,\n              o = this.getFromEnv(\"chart-attrib\"),\n              a = this.config,\n              n = this.config.JSONData,\n              i = n.connector,\n              l = i && i.length,\n              s = r.HUNDREDSTRING;\n\n          for (a.connectorsTooltext = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(n.connectortooltext, o.connectortooltext))), a.stdThickness = (0, r.pluckNumber)(n.stdthickness, 1), a.conColor = (0, r.getFirstColor)((0, r.pluck)(n.color, \"FF5904\")), a.conAlpha = (0, r.pluck)(n.alpha, s), a.conDashGap = (0, r.pluckNumber)(n.dashgap, 5), a.conDashLen = (0, r.pluckNumber)(n.dashlen, 5), a.conDashed = Boolean((0, r.pluckNumber)(n.dashed, 0)), a.arrowAtStart = Boolean((0, r.pluckNumber)(n.arrowatstart, 1)), a.arrowAtEnd = Boolean((0, r.pluckNumber)(n.arrowatend, 1)), a.conStrength = (0, r.pluckNumber)(n.strength, 1), a.toolTipSepChar = (0, r.pluck)(o.tooltipsepchar, \" - \"), a.showTooltip = (0, r.pluckNumber)(o.showtooltip, 1), a.viewMode = (0, r.pluckNumber)(o.viewmode, 1), a._refreshData = !0, this._setDatasetIndex(\"connector\"), t = 0; t < l; t += 1) {\n            this._setConfigure(t, i[t]);\n          }\n\n          a._refreshData = !0;\n        }, t.prototype._setConfigure = function (e, t) {\n          var o,\n              a,\n              n,\n              i = this.components.data || (this.components.data = []),\n              l = i[e] || (i[e] = i[e] = {}),\n              s = this.config,\n              c = (0, r.parseUnsafeString)((0, r.pluck)(t.label, t.name)),\n              u = (0, r.pluck)(t.alpha, s.conAlpha),\n              p = this.getFromEnv(\"smartLabel\"),\n              h = \"$fromLabel\" + s.toolTipSepChar + \"$toLabel\",\n              d = {\n            FCcolor: {\n              color: (0, r.getFirstColor)((0, r.pluck)(t.color, s.conColor)),\n              alpha: u\n            }\n          },\n              f = s.connectorsTooltext,\n              g = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(t.tooltext, f))),\n              m = Boolean((0, r.pluckNumber)(t.dashed, s.conDashed));\n          p.setStyle(this.getFromEnv(\"dataLabelStyle\")), p.useEllipsesOnOverflow(this.getFromEnv(\"chartConfig\").useEllipsesWhenOverflow), n = p.getOriSize(c), a = l.config = l.config || (l.config = {}), !l.graphics && (l.graphics = {}), o = !!s.showTooltip && (0, r.pluck)(g, c ? \"$label\" : h), (a = l.config = {\n            _options: t,\n            id: (0, r.pluck)(t.id, e).toString(),\n            from: (0, r.pluck)(t.from, r.BLANK),\n            to: (0, r.pluck)(t.to, r.BLANK),\n            label: c,\n            toolText: o,\n            customToolText: g,\n            color: d,\n            index: e,\n            dashStyle: m ? (0, r.getDashStyle)((0, r.pluckNumber)(t.dashlen, s.conDashLen), (0, r.pluckNumber)(t.dashgap, s.conDashGap)) : r.DASH_DEF,\n            dashed: t.dashed,\n            dashlen: t.dashlen,\n            dashgap: t.dashgap,\n            arrowAtStart: Boolean((0, r.pluckNumber)(t.arrowatstart, s.arrowAtStart)),\n            arrowAtEnd: Boolean((0, r.pluckNumber)(t.arrowatend, s.arrowAtEnd)),\n            conStrength: (0, r.pluckNumber)(t.strength, s.conStrength),\n            link: t.link,\n            stdThickness: s.stdThickness,\n            labelWidth: n.widht,\n            labelHeight: n.height\n          }).datasetIndex = this.config.datasetIndex, a.add = t.add, a.update = t.update, s._refreshData && delete l.removed;\n        }, t.prototype.createContainer = function () {\n          var e = this.getLinkedParent().getChildContainer();\n          !this.getContainer(\"connectorGroup\") && this.addContainer(\"connectorGroup\", h(\"connectorGroup\", e.connectorGroup, this)), !this.getContainer(\"connectorDataLabelGroup\") && this.addContainer(\"connectorDataLabelGroup\", h(\"connectorDataLabelGroup\", e.connectorGroup, this));\n        }, t.prototype.draw = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l = this.getLinkedParent(),\n              s = this.config,\n              c = this.components.data,\n              u = this.getFromEnv(\"dataLabelStyle\"),\n              p = c.length,\n              h = this.components.removeDataArr || [],\n              d = h.length;\n\n          for (this.createContainer(), s.cleared = !1, this.getContainer(\"connectorDataLabelGroup\").css(u), n = 0; n < p; n++) {\n            t = (i = (e = c[n]).config).from, o = i.to, a = l.getNode(t), r = l.getNode(o), a && r && !0 !== i.deleted && this.drawConnector(e, a, r, n);\n          }\n\n          for (this.config.drawn = !0, n = 0; n < d; n++) {\n            this._removeDataVisuals(h.shift());\n          }\n        }, t.prototype.parsePlotAttributes = function (e, t, o) {\n          var a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v = this.getFromEnv(\"number-formatter\"),\n              b = e.config,\n              y = b.eventArgs || (b.eventArgs = {});\n          b.fromPointObj = t, b.toPointObj = o, d = t.config, f = o.config, b.fromX = a = d._xPos, b.fromY = i = d._yPos, b.toX = n = f._xPos, b.toY = l = f._yPos, b._labelX = (a + n) / 2, b._labelY = (i + l) / 2, b.strokeWidth = s = b.conStrength * b.stdThickness, g = b.color, b.textBgColor = g && g.FCcolor && g.FCcolor.color, y.label = b.label, y.arrowAtStart = b.arrowAtStart, y.arrowAtEnd = b.arrowAtEnd, y.link = b.link, y.id = b.id, y.fromNodeId = d.id, y.toNodeId = f.id, b.toolText = (0, r.parseTooltext)(b.toolText, [3, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], {\n            label: b.label,\n            fromXValue: v.dataLabels(t.config.x),\n            fromYValue: v.dataLabels(t.config.y),\n            fromXDataValue: t.config.x,\n            fromYDataValue: t.config.y,\n            fromLabel: (0, r.pluck)(t.config.displayValue, t.config.id),\n            toXValue: v.dataLabels(o.config.x),\n            toYValue: v.dataLabels(o.config.y),\n            toXDataValue: o.config.x,\n            toYDataValue: o.config.y,\n            toLabel: (0, r.pluck)(o.config.displayValue, o.config.id)\n          }), d = t.config, f = o.config, u = d.startConnectors || (d.startConnectors = {}), h = f.endConnectors || (f.endConnectors = {}), u[m = e.config.id + \"-\" + d.id + \"-\" + f.id] = e, h[m] = e, c = p(e), b.props = {\n            element: {\n              attr: {\n                path: c,\n                \"stroke-width\": s,\n                \"stroke-dasharray\": b.dashStyle,\n                cursor: b.link ? r.POINTER : r.BLANKSTRING,\n                stroke: (0, r.toRaphaelColor)(g)\n              }\n            }\n          };\n        }, t.prototype.allocatePosition = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l = this.getLinkedParent(),\n              s = this.components.data,\n              c = s.length;\n\n          for (e = 0; e < c; e++) {\n            a = (o = (t = s[e]).config).from, r = o.to, n = l.getNode(a), i = l.getNode(r), n && i && !0 !== o.deleted && this.parsePlotAttributes(t, n, i, e);\n          }\n        }, t.prototype.drawConnector = function (e) {\n          var t,\n              o,\n              a = this.getFromEnv(\"toolTipController\"),\n              r = this.getFromEnv(\"animationManager\"),\n              n = e.graphics,\n              i = this.getContainer(\"connectorGroup\"),\n              l = e.config,\n              s = l.toolText,\n              p = l.eventArgs || (l.eventArgs = {}),\n              h = this.config,\n              d = this.components.pool || {};\n          e.removed || (t = o = n.graphic, n.graphic || d.graphic && d.graphic.path && d.graphic.path.length && (o = n.graphic = d.graphic.path.shift()), t = r.setAnimation({\n            el: o || \"path\",\n            container: i,\n            attr: l.props.element.attr,\n            label: \"path\",\n            component: this\n          }), o || (n.graphic = t, t.on(\"fc-mousedown\", this.mouseDown).on(\"fc-mousemove\", this.mousemove).on(\"fc-mouseup\", this.mouseup).hover(this.hoverIn, this.hoverOut)), t.show().data(c, p).data(\"viewMode\", h.viewMode).data(u, l).data(\"dataset\", this), h.showTooltip ? a.enableToolTip(t, s) : a.disableToolTip(t), this.drawLabel(e));\n        }, t.prototype.drawLabel = function (e) {\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              p,\n              h,\n              d,\n              f,\n              g = this,\n              m = g.getFromEnv(\"toolTipController\"),\n              v = g.config,\n              b = g.getFromEnv(\"animationManager\"),\n              y = g.getContainer(\"connectorDataLabelGroup\"),\n              x = g.getFromEnv(\"dataLabelStyle\"),\n              k = g.components.data,\n              w = g.components.pool || {},\n              C = k.length,\n              N = function N(e) {\n            t = e.config, a = t.toolText, s = e.graphics, o = t.label, h = t._labelX, d = t._labelY, f = t.textBgColor, o ? (l = s.text = s.text || w.element && w.element.text && w.element.text.shift(), n = {\n              text: o,\n              fill: x.color,\n              direction: r.BLANKSTRING,\n              cursor: t.link ? r.POINTER : r.BLANKSTRING,\n              \"text-bound\": [(0, r.pluck)(x.backgroundColor, f), (0, r.pluck)(x.borderColor, f), 1, \"2\"],\n              x: h,\n              y: d\n            }, (i = b.setAnimation({\n              el: l || \"text\",\n              attr: n,\n              container: y,\n              label: \"text\",\n              component: g\n            })).show(), l || (s.text = i, i.on(\"fc-mousedown\", g.mouseDown).on(\"fc-mousemove\", g.mousemove).on(\"fc-mouseup\", g.mouseup).hover(g.hoverIn, g.hoverOut)), i.data(c, t.eventArgs).data(\"viewMode\", v.viewMode).data(u, t).data(\"dataset\", g), v.showTooltip ? m.enableToolTip(i, a) : m.disableToolTip(i)) : s.text && s.text.hide();\n          };\n\n          if (e) N(e);else for (p = 0; p < C; p++) {\n            N(k[p]);\n          }\n        }, t.prototype.mouseDown = function () {\n          var e = this.data(\"dataset\").getLinkedParent();\n          e.clearLongPress(), this.data(\"fire_click_event\", 1), e.triggerConnectorUI(this);\n        }, t.prototype.mousemove = function () {\n          var e = this.data(\"dataset\").getLinkedParent();\n          this.data(\"fire_click_event\", 0), e.clearLongPress();\n        }, t.prototype.mouseup = function () {\n          this.data(\"dataset\").getLinkedParent().clearLongPress();\n        }, t.prototype.hoverIn = function (e) {\n          this.data(\"dataset\").getFromEnv(\"chart\").plotEventHandler(this, e, \"ConnectorRollover\");\n        }, t.prototype.hoverOut = function (e) {\n          this.data(\"dataset\").getFromEnv(\"chart\").plotEventHandler(this, e, \"ConnectorRollout\");\n        }, t._drawArrow = function (e, t, o, a, r, n) {\n          var i,\n              l,\n              s,\n              c,\n              u = (t - a) / (e - o),\n              p = Math.atan(u),\n              h = [];\n          return p < 0 && (p = 2 * Math.PI + p), a > t ? (o >= e && p > Math.PI || o < e && p > Math.PI) && (p -= Math.PI) : (o >= e && p < Math.PI && 0 !== p || o < e && p < Math.PI) && (p += Math.PI), void 0 === n ? (i = e + r * Math.cos(p), l = t + r * Math.sin(p)) : (s = Math.abs(r) / 2, c = Math.abs(n) / 2, i = e + (s = e < o ? s : -s), l = t + s * Math.tan(p), Math.abs(t - l) > Math.abs(c) && (l = t + (c = t < a ? c : -c), i = e + c / Math.tan(p))), h.push(\"L\", i, l, i + 10 * Math.cos(p + .79), l + 10 * Math.sin(p + .79), \"M\", i + 10 * Math.cos(p - .79), l + 10 * Math.sin(p - .79), \"L\", i, l), h;\n        }, t.prototype.removeData = function (e, t) {\n          var o = this.components,\n              a = o.data;\n          e < 0 && (e = 0), o.removeDataArr = a.splice(e, t);\n        }, t.prototype.trimData = function (e) {\n          if (this.config.JSONData) {\n            var t = this.components,\n                o = t.data && t.data.length,\n                a = e.connector && e.connector.length || 0,\n                r = o - a;\n            r > 0 && this.removeData(a, r);\n          }\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = d;\n    },\n    907: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.dragNodeConnector\": function initialDatasetDragNodeConnector() {\n          return {\n            \"path.appearing\": function pathAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"text.appearing\": function textAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0,\n                  \"text-bound\": \"none\"\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }];\n            },\n            \"*\": null\n          };\n        }\n      };\n    },\n    908: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(138),\n          n = o(904),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      },\n          l = o(125);\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c,\n          u,\n          p,\n          h = {\n        circle: \"circ\",\n        rectangle: \"rect\",\n        polygon: \"poly\"\n      },\n          d = void 0,\n          f = l.preDefStr.INPUT,\n          g = l.preDefStr.BLANKSPACE,\n          m = l.preDefStr.BLANK,\n          v = l.preDefStr.PX,\n          b = l.preDefStr.LABEL,\n          y = l.preDefStr.DATASET,\n          x = l.preDefStr.COMMA,\n          k = \"appearing\",\n          w = function w(e) {\n        return e !== d && null !== e;\n      },\n          C = function C(e, t) {\n        switch (e.shape) {\n          case l.preDefStr.CIRCLE:\n            e.radius = t.radius;\n            break;\n\n          case l.preDefStr.POLYGON:\n            e.radius = t.radius, e.sides = t.numsides;\n            break;\n\n          default:\n            e.width = t.width, e.height = t.height;\n        }\n      },\n          N = (c = function c() {\n        for (var e, t = this.getGraphicalElement(\"cacheUpdateUI\"), o = t.fields.shape, a = [\"rectWidth\", \"rectHeight\", \"circPolyRadius\", \"polySides\"], r = a.length; r--;) {\n          /rect|poly|circ/gi.test(e = a[r]) && (t.labels[e].hide(), t.fields[e].hide()), new RegExp((0, l.pluck)(o.val(), \"rect\"), \"ig\").test(e) && (t.labels[e].show(), t.fields[e].show());\n        }\n      }, u = function u() {\n        var e = this.getGraphicalElement(\"cacheUpdateUI\").fields,\n            t = (0, l.getValidColor)(e.color.val());\n        t && e.colorOut.css({\n          background: (0, l.parseColor)(t)\n        });\n      }, p = function p(e) {\n        var t,\n            o,\n            a,\n            r = this.getGraphicalElement(\"cacheUpdateUI\"),\n            n = this.getFromEnv(\"animationManager\"),\n            i = r.fields.image,\n            l = this.getFromEnv(\"chartConfig\").height,\n            s = i.val(),\n            c = [\"imgWidth\", \"imgHeight\", \"imgAlign\", \"imgUrl\"];\n\n        for (t = s ? 250 : 215, e && (r.ok.hide(), r.cancel.hide(), r.removeItem.hide(), r.error.hide()), o = c.length; !s && o--;) {\n          a = c[o], r.labels[a].hide(), r.fields[a].hide();\n        }\n\n        e && n.setAnimationState(\"uichange\"), n.setAnimation({\n          el: r.dialog,\n          state: \"updating\",\n          attr: {\n            top: (l - t) / 2,\n            height: t\n          },\n          component: this,\n          label: \"uidialog\",\n          callback: function callback() {\n            for (o = c.length; o-- && s;) {\n              a = c[o], r.labels[a].show(), r.fields[a].show();\n            }\n\n            r.ok.attr({\n              y: t - 23 - 5\n            }).show(), r.cancel.attr({\n              y: t - 23 - 5\n            }).show(), r.removeItem.attr({\n              y: t - 23 - 5\n            }), r.error.attr({\n              y: t - 23 - 5 + 4\n            }).show(), r.edit ? r.removeItem.show() : r.removeItem.hide();\n          }\n        });\n      }, function (e, t) {\n        var o,\n            a,\n            r = this,\n            n = r.getGraphicalElement(\"cacheUpdateUI\"),\n            i = r.getFromEnv(\"style\").inCanvasStyle || {},\n            s = r.getFromEnv(\"paper\"),\n            h = {\n          width: 80 + v,\n          border: \"1px solid #cccccc\",\n          fontSize: 10 + v,\n          lineHeight: 15 + v,\n          padding: 2 + v,\n          fontFamily: i.fontFamily\n        },\n            f = {\n          textAlign: \"right\"\n        },\n            g = n && n.fields,\n            y = n && n.labels;\n        r.getFromEnv(\"animationManager\").setAnimationState(\"uichange\"), n || (o = !0), n = r.addGraphicalElement(\"cacheUpdateUI\", r.createHtmlDialog(350, 215, function (e) {\n          e.stopPropagation();\n          var t,\n              o,\n              a,\n              i,\n              s,\n              c = n && n.fields,\n              u = n.edit,\n              p = c.shape.val();\n\n          if (t = r.getFromEnv(\"xAxis\").getLimit().min, o = r.getFromEnv(\"yAxis\").getLimit().min, c) {\n            switch (s = {\n              x: (0, l.getFirstValue)(c.x.val(), t),\n              y: (0, l.getFirstValue)(c.y.val(), o),\n              id: i = c.id.val(),\n              datasetId: c.dataset.val(),\n              name: c.label.val(),\n              tooltext: c.tooltip.val(),\n              color: c.color.val(),\n              alpha: c.alpha.val(),\n              labelalign: c.labelalign.val(),\n              allowdrag: c.draggable.val(),\n              imagenode: c.image.val(),\n              imagewidth: c.imgWidth.val(),\n              imageheight: c.imgHeight.val(),\n              imagealign: c.imgAlign.val(),\n              imageurl: c.imgUrl.val(),\n              link: c.link.val()\n            }, p) {\n              case \"circ\":\n                s.shape = l.preDefStr.CIRCLE, s.radius = c.circPolyRadius.val();\n                break;\n\n              case \"poly\":\n                s.shape = l.preDefStr.POLYGON, s.radius = c.circPolyRadius.val(), s.numsides = c.polySides.val();\n                break;\n\n              default:\n                s.shape = l.preDefStr.RECTANGLE, s.width = c.rectWidth.val(), s.height = c.rectHeight.val();\n            }\n\n            if (r.getNode(s.id) && (a = !0), !a || u !== d) return void (((i = s.datasetId) !== l.BLANKSTRING || u) && (i = Number(i), u ? r.updateNode(s) : r.addNode(s), n.hide(), n.visible = !1));\n            n.error.attr({\n              text: \"ID already exist.\"\n            }), c.label.focus();\n          }\n\n          n.enableFields();\n        }, function (e) {\n          e.stopPropagation(), n.hide(), n.visible = !1, n.enableFields(), n.error.attr({\n            text: m\n          }), n.visible = !1;\n        }, function (e) {\n          e.stopPropagation(), r.deleteNode(n.fields.id.val()), n.hide(), n.visible = !1;\n        }, n)), o && (a = n.dialog, y = n.labels = {}, g = n.fields = {}), n.config = e, n.edit = t, n.error || (n.error = s.html(\"span\", {\n          color: \"ff0000\",\n          x: 30,\n          y: 228\n        }, d, a)), n.enableFields || (n.enableFields = function () {\n          var t;\n\n          for (t in e) {\n            e[t] && e[t].disabled && g[t] && g[t].element.removeAttribute(\"disabled\");\n          }\n        }), n.clearFields || (n.clearFields = function () {\n          var e,\n              t = n.fields;\n\n          for (e in t) {\n            t[e].element.disabled || (t[e].element.value = l.BLANKSTRING);\n          }\n        }), (0, l.fcEach)(this.nodeUpdateUIDefinition, function (t) {\n          var o,\n              i,\n              d,\n              v = t.key,\n              x = {},\n              k = e[v] || {};\n          !y[v] && (y[v] = s.html(b, {\n            x: t.x,\n            y: t.y,\n            width: t.labelWidth || 45,\n            text: t.text\n          }, f, a)), t.noInput || ((o = g[v]) || (h.border = \"checkbox\" == t.type ? m : \"1px solid #cccccc\", o = g[v] = s.html(t.inputType || \"input\", {\n            x: t.labelWidth && t.labelWidth + 5 || 50,\n            y: -2 + (t.inputPaddingTop || 0),\n            width: t.inputWidth || 50,\n            name: v || l.BLANKSTRING\n          }, h), \"select\" !== t.inputType && o.attr({\n            type: t.type || \"text\"\n          }).on(\"keyup\", n.handleKeyPress), o.add(y[v])), w(i = (0, l.getFirstValue)(k.innerHTML, t.innerHTML)) && (x.innerHTML = i), k.disabled ? x.disabled = \"disabled\" : o.element && (o.element.disabled = !1), o.attr(x), w(d = (0, l.getFirstValue)(k.value, t.value)) && o.val(d), \"shape\" === v && o.on(\"change\", function () {\n            c.call(r);\n          }), \"image\" === v && o.on(\"click\", function () {\n            p.call(r, !0);\n          }), \"color\" === v && o.on(\"keyup\", function () {\n            u.call(r);\n          }));\n        }), u.call(this), p.call(this), c.call(this), n.visible = !0, n.fields[t ? b : \"id\"].focus();\n      }),\n          S = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this)),\n              a = o;\n\n          return a.setState(\"visible\", !0), a.connectorUpdateUIDefinition = [{\n            key: \"fromid\",\n            text: \"Connect From\",\n            inputType: \"select\",\n            x: 10,\n            y: 15,\n            labelWidth: 80,\n            inputWidth: 100\n          }, {\n            key: \"toid\",\n            text: \"Connect To\",\n            inputType: \"select\",\n            x: 10,\n            y: 40,\n            labelWidth: 80,\n            inputWidth: 100\n          }, {\n            key: \"arratstart\",\n            text: \"Arrow At Start\",\n            x: 200,\n            y: 15,\n            type: \"checkbox\",\n            inputPaddingTop: 3,\n            labelWidth: 80,\n            inputWidth: 15\n          }, {\n            key: \"arratend\",\n            text: \"Arrow At End\",\n            x: 200,\n            y: 40,\n            type: \"checkbox\",\n            inputPaddingTop: 3,\n            labelWidth: 80,\n            inputWidth: 15\n          }, {\n            key: b,\n            text: \"Label\",\n            x: 10,\n            y: 75,\n            labelWidth: 40,\n            inputWidth: 120\n          }, {\n            key: \"id\",\n            text: \"Node ID\",\n            x: 190,\n            y: 75,\n            inputWidth: 55\n          }, {\n            key: \"color\",\n            text: \"Color\",\n            x: 10,\n            y: 100,\n            labelWidth: 40,\n            inputWidth: 35\n          }, {\n            key: \"alpha\",\n            text: \"Alpha\",\n            x: 110,\n            y: 100,\n            inputWidth: 25,\n            labelWidth: 35\n          }, {\n            key: \"strength\",\n            text: \"Strength\",\n            x: 190,\n            y: 100,\n            inputWidth: 55,\n            val: \"0.1\"\n          }, {\n            key: \"url\",\n            text: \"Link\",\n            x: 10,\n            y: 125,\n            labelWidth: 40,\n            inputWidth: 120\n          }, {\n            key: \"tooltext\",\n            text: \"Tooltip\",\n            x: 190,\n            y: 125,\n            labelWidth: 40,\n            inputWidth: 60\n          }, {\n            key: \"dashed\",\n            text: \"Dashed\",\n            x: 10,\n            y: 150,\n            type: \"checkbox\",\n            inputPaddingTop: 3,\n            inputWidth: 15,\n            labelWidth: 40\n          }, {\n            key: \"dashgap\",\n            text: \"Dash Gap\",\n            x: 85,\n            y: 150,\n            labelWidth: 60,\n            inputWidth: 25\n          }, {\n            key: \"dashlen\",\n            text: \"Dash Length\",\n            x: 190,\n            y: 150,\n            labelWidth: 70,\n            inputWidth: 30\n          }], a.nodeUpdateUIDefinition = [{\n            key: \"id\",\n            text: \"Id\",\n            inputWidth: 60,\n            x: 10,\n            y: 15\n          }, {\n            key: y,\n            text: y,\n            inputType: \"select\",\n            inputWidth: 110,\n            innerHTML: d,\n            x: 170,\n            y: 15\n          }, {\n            key: \"x\",\n            text: \"Value\",\n            x: 10,\n            y: 40,\n            inputWidth: 21\n          }, {\n            key: \"y\",\n            text: x,\n            x: 88,\n            y: 40,\n            inputWidth: 21,\n            labelWidth: 5\n          }, {\n            text: \"(x, y)\",\n            x: 125,\n            y: 40,\n            labelWidth: 33,\n            noInput: !0\n          }, {\n            key: \"tooltip\",\n            text: \"Tooltip\",\n            inputWidth: 105,\n            x: 170,\n            y: 40\n          }, {\n            key: b,\n            text: \"Label\",\n            inputWidth: 92,\n            x: 10,\n            y: 65\n          }, {\n            key: \"labelalign\",\n            text: \"Align\",\n            labelWidth: 70,\n            inputWidth: 110,\n            inputType: \"select\",\n            innerHTML: '<option></option><option value=\"top\">Top</option><option value=\"middle\">Middle</option><option value=\"bottom\">Bottom</option>',\n            x: 145,\n            y: 63\n          }, {\n            key: \"color\",\n            text: \"Color\",\n            x: 10,\n            y: 90,\n            inputWidth: 60\n          }, {\n            key: \"colorOut\",\n            innerHTML: \"&nbsp;\",\n            x: 85,\n            y: 90,\n            inputWidth: 15,\n            inputType: \"span\"\n          }, {\n            key: \"alpha\",\n            text: \"Alpha\",\n            x: 170,\n            y: 90,\n            inputWidth: 20\n          }, {\n            key: \"draggable\",\n            text: \"Allow Drag\",\n            value: !0,\n            inputWidth: 20,\n            x: 250,\n            y: 90,\n            labelWidth: 58,\n            inputPaddingTop: 3,\n            type: \"checkbox\"\n          }, {\n            key: \"shape\",\n            text: \"Shape\",\n            inputType: \"select\",\n            inputWidth: 97,\n            innerHTML: '<option value=\"rect\">Rectangle</option><option value=\"circ\">Circle</option><option value=\"poly\">Polygon</option>',\n            x: 10,\n            y: 115\n          }, {\n            key: \"rectHeight\",\n            text: \"Height\",\n            x: 170,\n            y: 115,\n            inputWidth: 20\n          }, {\n            key: \"rectWidth\",\n            text: \"Width\",\n            x: 255,\n            y: 115,\n            inputWidth: 20\n          }, {\n            key: \"circPolyRadius\",\n            text: \"Radius\",\n            x: 170,\n            y: 115,\n            inputWidth: 20\n          }, {\n            key: \"polySides\",\n            text: \"Sides\",\n            x: 255,\n            y: 115,\n            inputWidth: 20\n          }, {\n            key: \"link\",\n            text: \"Link\",\n            x: 10,\n            y: 140,\n            inputWidth: 92\n          }, {\n            key: \"image\",\n            text: \"Image\",\n            type: \"checkbox\",\n            inputPaddingTop: 4,\n            inputWidth: 20,\n            x: 10,\n            y: 170\n          }, {\n            key: \"imgUrl\",\n            text: \"URL\",\n            inputWidth: 105,\n            x: 170,\n            y: 170\n          }, {\n            key: \"imgWidth\",\n            text: \"Width\",\n            inputWidth: 20,\n            x: 10,\n            y: 195\n          }, {\n            key: \"imgHeight\",\n            text: \"Height\",\n            inputWidth: 20,\n            x: 82,\n            y: 195\n          }, {\n            key: \"imgAlign\",\n            text: \"Align\",\n            inputType: \"select\",\n            inputWidth: 75,\n            innerHTML: '<option value=\"top\">Top</option><option value=\"middle\">Middle</option><option value=\"bottom\">Bottom</option>',\n            x: 170,\n            y: 195\n          }], a.labelUpdateUIDefinition = [{\n            key: b,\n            text: \"Label*\",\n            x: 10,\n            y: 15,\n            inputWidth: 235\n          }, {\n            key: \"size\",\n            text: \"Size\",\n            x: 10,\n            y: 40\n          }, {\n            key: \"padding\",\n            text: \"Padding\",\n            x: 10,\n            y: 65\n          }, {\n            key: \"x\",\n            text: \"Position\",\n            x: 120,\n            y: 65,\n            labelWidth: 70,\n            inputWidth: 25\n          }, {\n            key: \"y\",\n            text: x,\n            x: 225,\n            y: 65,\n            labelWidth: 10,\n            inputWidth: 25\n          }, {\n            key: \"xy\",\n            text: \"(x, y)\",\n            x: 260,\n            y: 65,\n            noInput: !0\n          }, {\n            key: \"allowdrag\",\n            text: \"Allow Drag\",\n            x: 120,\n            y: 40,\n            inputType: \"checkbox\",\n            inputPaddingTop: 3,\n            inputWidth: 15,\n            labelWidth: 70,\n            val: 1\n          }, {\n            key: \"color\",\n            text: \"Color\",\n            x: 10,\n            y: 90\n          }, {\n            key: \"alpha\",\n            text: \"Alpha\",\n            x: 145,\n            y: 90,\n            inputWidth: 30,\n            val: l.preDefStr.HUNDREDSTRING\n          }, {\n            key: \"bordercolor\",\n            text: \"Border Color\",\n            x: 10,\n            y: 125,\n            labelWidth: 100\n          }, {\n            key: \"bgcolor\",\n            text: \"Background Color\",\n            x: 10,\n            y: 150,\n            labelWidth: 100\n          }], o;\n        }\n\n        return s(t, e), t.prototype.configure = function () {\n          this.setState(\"configured\", !0);\n        }, t.prototype.getType = function () {\n          return \"group\";\n        }, t.prototype.getName = function () {\n          return \"dragNodeGroup\";\n        }, t.prototype.showLabelUpdateUI = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              n = this,\n              i = n.getFromEnv(\"paper\"),\n              s = n.getFromEnv(\"style\").inCanvasStyle || {},\n              c = n.getGraphicalElement(\"cacheLabelUpdateUI\"),\n              u = {\n            border: \"1px solid #cccccc\",\n            fontSize: 10 + v,\n            lineHeight: 15 + v,\n            fontFamily: s.fontFamily,\n            padding: 2 + v\n          },\n              p = {\n            textAlign: \"right\"\n          },\n              h = c && c.fields,\n              g = c && c.labels;\n          n.getFromEnv(\"animationManager\").setAnimationState(\"uichange\"), c || (e = !0), c = n.addGraphicalElement(\"cacheLabelUpdateUI\", n.createHtmlDialog(315, 205, function () {\n            var e,\n                t = c && c.fields;\n            t && ((e = {\n              text: t.label.val(),\n              x: t.x.val(),\n              y: t.y.val(),\n              color: t.color.val(),\n              alpha: t.alpha.val(),\n              bgcolor: t.bgcolor.val(),\n              bordercolor: t.bordercolor.val(),\n              fontsize: t.size.val(),\n              allowdrag: t.allowdrag.val(),\n              padding: t.padding.val()\n            }).text ? (n.addLabel && n.addLabel(e), c.hide()) : (c.error.attr({\n              text: \"Label cannot be blank.\"\n            }), t.label.focus()));\n          }, function () {\n            c.error.attr({\n              text: l.BLANKSTRING\n            }), c.hide();\n          }, d, c)), e && (a = c.dialog, g = c.labels = {}, h = c.fields = {}), (0, l.fcEach)(n.labelUpdateUIDefinition, function (e) {\n            var n = e.key;\n            g[n] || (g[n] = i.html(b, {\n              x: e.x,\n              y: e.y,\n              width: e.labelWidth || 45,\n              text: e.text\n            }, p, a)), e.noInput || ((t = h[n]) || (t = h[n] = i.html(f, {\n              y: -2 + (e.inputPaddingTop || 0),\n              x: e.labelWidth && e.labelWidth + 5 || 50,\n              width: e.inputWidth || 50,\n              type: e.inputType || \"text\",\n              name: n || l.BLANKSTRING\n            }, u, g[n]).on(\"keyup\", c.handleKeyPress)), w(o = (0, l.getFirstValue)(r[n], e.val)) && t.val(o));\n          }), c.error || (c.error = i.html(\"span\", {\n            color: \"ff0000\",\n            x: 10,\n            y: 180\n          }, d, a)), c.fields.label.focus();\n        }, t.prototype.restoreData = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s = this.getChildren(\"dataset\"),\n              c = this.getFromEnv(\"chart\"),\n              u = this.getFromEnv(\"legend\"),\n              p = (0, l.pluckNumber)(c.config.showlegend, 0),\n              h = this.getChildren(\"connector\"),\n              d = c.getFromEnv(\"dataSource\"),\n              f = d.dataset,\n              g = d.connectors,\n              m = d.labels,\n              v = this.getChildren(\"labels\"),\n              b = function b(e) {\n            var t, o;\n\n            for (t = 0; t < (e && e.length); t++) {\n              if (delete (a = e[t]).removed, a.config.add) {\n                for (o in r = e[t].graphics) {\n                  r[o].remove();\n                }\n\n                e.splice(t, 1), t--;\n              }\n            }\n          },\n              y = function y(e, a, r) {\n            t = a[e], o = t.components.data, b(o), t.drawn = !1, t.configure(r[e]);\n          };\n\n          for (e = 0, i = s && s.length; e < i; e++) {\n            y(e, s, f);\n          }\n\n          for (e = 0, i = h && h.length; e < i; e++) {\n            y(e, h, g);\n          }\n\n          v && v.length && (n = v[0], (o = n.components.data) && b(o), n.configure(m)), c.fireChartInstanceEvent(\"dataRestored\"), this.asyncDraw(), p && u.asyncDraw();\n        }, t.prototype.addLabel = function (e) {\n          var t,\n              o,\n              a = this.getChildren(\"labels\"),\n              r = this.getFromEnv(\"chart\");\n          e.add = !0, a ? a = a[0] : ((0, l.componentFactory)(this, i[\"default\"], \"labels\", 1, [{}]), a = this.getChildren(\"labels\")[0]), o = (a.components.data || (a.components.data = [])).length, a._setConfigure(o, e), t = {\n            text: e.text,\n            x: e.x,\n            y: e.y,\n            allowdrag: e.allowdrag,\n            sourceType: \"labelnode\",\n            link: e.link\n          }, r.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"labeladded\"\n          }, t)), r.fireChartInstanceEvent(\"labeladded\", t), a.asyncDraw();\n        }, t.prototype.showNodeAddUI = function () {\n          var e,\n              t,\n              o,\n              a = this.getChildren(\"dataset\"),\n              r = l.BLANKSTRING;\n\n          for (o = 0; o < a.length; o++) {\n            e = (t = a[o] || {}).config, \"dragNode\" === t.getName() && (r += '<option value=\"' + t.config.datasetIndex + '\">' + (e.name !== m && e.name !== d && e.name + l.COMMASTRING + g || m) + t.config.datasetIndex + \"</option>\");\n          }\n\n          this.showNodeUpdateUI({\n            dataset: {\n              innerHTML: r\n            }\n          });\n        }, t.prototype.showConnectorAddUI = function () {\n          var e,\n              t,\n              o = this.getNode(),\n              a = l.BLANKSTRING;\n\n          for (t in o) {\n            a += '<option value=\"' + (e = o[t].config.id) + '\">' + e + \"</option>\";\n          }\n\n          this.showConnectorUpdateUI({\n            fromid: {\n              innerHTML: a\n            },\n            toid: {\n              innerHTML: a\n            }\n          });\n        }, t.prototype.showConnectorUpdateUI = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i,\n              s = this,\n              c = s.getFromEnv(\"paper\"),\n              u = s.getFromEnv(\"style\").inCanvasStyle || {},\n              p = \"cacheConnectorUpdateUI\" + (t ? \"edit\" : \"new\"),\n              h = s.getGraphicalElement(p),\n              g = {\n            border: \"1px solid #cccccc\",\n            fontSize: 10 + v,\n            lineHeight: 15 + v,\n            fontFamily: u.fontFamily,\n            padding: 2 + v\n          },\n              m = {\n            textAlign: \"right\"\n          },\n              y = h && h.fields,\n              x = h && h.labels;\n          s.getFromEnv(\"animationManager\").setAnimationState(\"uichange\"), h || (o = !0), h = s.addGraphicalElement(p, s.createHtmlDialog(315, 215, function () {\n            var e,\n                o = h && h.fields;\n            o && ((e = {\n              from: o.fromid.val(),\n              to: o.toid.val(),\n              id: o.id.val(),\n              label: o.label.val(),\n              color: o.color.val(),\n              alpha: o.alpha.val(),\n              link: o.url.val(),\n              tooltext: o.tooltext.val(),\n              strength: o.strength.val(),\n              arrowatstart: o.arratstart.val(),\n              arrowatend: o.arratend.val(),\n              dashed: o.dashed.val(),\n              dashlen: o.dashlen.val(),\n              dashgap: o.dashgap.val()\n            }).from ? e.to ? e.from != e.to ? (t ? s.editConnector(e) : s.addConnector(e), h.enableFields(), h.hide(), h.clearFields()) : (h.error.attr({\n              text: \"Connector cannot start and end at the same node!\"\n            }), o.fromid.focus()) : (h.error.attr({\n              text: \"Please select a valid connector end.\"\n            }), o.toid.focus()) : (h.error.attr({\n              text: \"Please select a valid connector start.\"\n            }), o.fromid.focus()));\n          }, function () {\n            h.error.attr({\n              text: l.BLANKSTRING\n            }), h.enableFields(), h.hide();\n          }, function () {\n            var e = h && h.fields,\n                t = {\n              from: e.fromid.val(),\n              to: e.toid.val(),\n              id: e.id.val()\n            };\n            s.deleteConnector(t), h.hide();\n          }, h)), o && (i = h.dialog, x = h.labels = {}, y = h.fields = {}), h.config = e, h.enableFields || (h.enableFields = function () {\n            var t;\n\n            for (t in e) {\n              e[t] && e[t].disabled && y[t] && y[t].element.removeAttribute(\"disabled\");\n            }\n          }), h.clearFields || (h.clearFields = function () {\n            var e,\n                t = h.fields;\n\n            for (e in t) {\n              t[e].element.disabled || (t[e].element.value = l.BLANKSTRING);\n            }\n          }), (0, l.fcEach)(s.connectorUpdateUIDefinition, function (t) {\n            var o = t.key,\n                s = e[o] || {};\n            x[o] || (x[o] = c.html(b, {\n              x: t.x,\n              y: t.y,\n              width: t.labelWidth || 45,\n              text: t.text\n            }, m, i)), t.noInput || ((r = y[o]) || (r = y[o] = c.html(t.inputType || f, {\n              y: -2 + (t.inputPaddingTop || 0),\n              x: t.labelWidth && t.labelWidth + 5 || 50,\n              width: t.inputWidth || 50,\n              name: o || l.BLANKSTRING\n            }, g), \"select\" !== t.inputType && r.attr({\n              type: t.type || \"text\"\n            }).on(\"keyup\", h.handleKeyPress), r.add(x[o])), (a = (0, l.pluck)(s.innerHTML, t.innerHTML)) && r.attr({\n              innerHTML: a\n            }), (n = (0, l.pluck)(s.val, t.val)) !== d && r.val(n), s.disabled ? r.attr({\n              disabled: \"disabled\"\n            }) : r.element && (r.element.disabled = !1));\n          }), h.checkDash = function () {\n            var e = y.dashed && y.dashed.val() ? \"show\" : \"hide\";\n            x.dashgap && x.dashgap[e](), y.dashgap && y.dashgap[e](), x.dashlen && x.dashlen[e](), y.dashlen && y.dashlen[e]();\n          }, h.checkDash(), y.dashed.on(\"click\", h.checkDash), h.error || (h.error = c.html(\"span\", {\n            color: \"ff0000\",\n            x: 10,\n            y: 170\n          }, d, i)), h.removeItem[t ? \"show\" : \"hide\"]();\n        }, t.prototype.showNodeUpdateUI = function () {\n          return N.apply(this, arguments);\n        }, t.prototype.addNode = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s,\n              c = this.getChildren(\"dataset\"),\n              u = e.datasetId,\n              p = c.length,\n              h = this.getFromEnv(\"chart\");\n\n          for (n = 0; n < p; n++) {\n            if ((r = (t = c[n] || {}).config.datasetIndex) !== d && (r = r.toString()), r === u) {\n              a = !0;\n              break;\n            }\n          }\n\n          t && a && (s = t.components.data, e.add = !0, i = {\n            index: o = s.length,\n            dataIndex: o,\n            link: e.link,\n            y: e.y,\n            x: e.x,\n            shape: e.shape,\n            label: e.name,\n            toolText: e.tooltext,\n            id: e.id,\n            datasetIndex: t.config.datasetIndex,\n            datasetName: t.config.seriesname,\n            sourceType: \"dataplot\"\n          }, C(i, e), t._setConfigure(o, e), t.parsePlotAttributes(o), t._drawNode(o), t.setState(\"dirty\", !0), h.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"nodeAdded\"\n          }, i)), h.fireChartInstanceEvent(\"nodeAdded\", i), t._setupKdTree());\n        }, t.prototype.updateNode = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s,\n              c = this.getChildren(\"dataset\"),\n              u = c.length,\n              p = this.getFromEnv(\"chart\");\n\n          for (e.update = !0, r = 0; r < u; r++) {\n            for (t = (n = (a = c[r]).components.data || []).length, s = 0; s < t; s++) {\n              if (n[s].config.id === e.id) {\n                o = !0;\n                break;\n              }\n            }\n          }\n\n          a && o && (i = {\n            index: s,\n            dataIndex: s,\n            link: e.link,\n            y: e.y,\n            x: e.x,\n            shape: e.shape,\n            label: e.name,\n            toolText: e.tooltext,\n            id: e.id,\n            datasetIndex: a.config.datasetIndex,\n            datasetName: a.config.seriesname,\n            sourceType: \"dataplot\"\n          }, C(i, e), a._setConfigure(s, e), a.parsePlotAttributes(s), a._drawNode(s), a.setState(\"dirty\", !0), p.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"nodeupdated\"\n          }, i)), p.fireChartInstanceEvent(\"nodeupdated\", i), a._setupKdTree());\n        }, t.prototype.deleteNode = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f = this.getNode(e),\n              g = this.getFromEnv(\"chart\"),\n              m = function m(e) {\n            for (var t in e) {\n              e[t].remove();\n            }\n          };\n\n          if (f) {\n            for (o = (t = f.dataset).components.data, a = f.config.startConnectors, r = f.config.endConnectors, u = o.length, n = 0; n < u; n++) {\n              if ((s = o[n]).config.id === e) {\n                d = !0;\n                break;\n              }\n            }\n\n            if (!0 === d) {\n              for (c in m(s.graphics), a) {\n                m((i = a[c] || {}).graphics), delete i.graphics, i.removed = !0;\n              }\n\n              for (c in r) {\n                m((i = r[c] || {}).graphics), delete i.graphics, i.removed = !0;\n              }\n\n              s.removed = !0, p = {\n                index: n,\n                dataIndex: n,\n                link: (h = s.config || {}).link,\n                y: h.y,\n                x: h.x,\n                shape: h.shape,\n                label: h.displayValue,\n                toolText: h.toolText,\n                id: h.id,\n                datasetIndex: t.config.datasetIndex,\n                datasetName: t.config.seriesname,\n                sourceType: \"dataplot\"\n              }, C(p, {\n                width: h.width,\n                height: h.height,\n                radius: h.radius,\n                numsides: h.numSides\n              }), g.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n                sourceEvent: \"nodedeleted\"\n              }, p)), g.fireChartInstanceEvent(\"nodedeleted\", p), t._setupKdTree();\n            }\n          }\n        }, t.prototype.addConnector = function (e) {\n          var t,\n              o = this.getChildren(\"connector\")[0],\n              a = o.components.data,\n              r = this.getFromEnv(\"chart\"),\n              n = a.length;\n          e.add = !0, o._setConfigure(n, e), t = {\n            arrowAtEnd: Boolean(e.arrowatend),\n            arrowAtStart: Boolean(e.arrowatstart),\n            fromNodeId: e.from,\n            id: e.id,\n            label: e.label,\n            link: e.connectorLink,\n            sourceType: \"connector\",\n            toNodeId: e.to\n          }, r.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"connectoradded\"\n          }, t)), r.fireChartInstanceEvent(\"connectoradded\", t), o.asyncDraw();\n        }, t.prototype.editConnector = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s,\n              c,\n              u,\n              p,\n              h = e.from,\n              d = e.to,\n              f = this.getChildren(\"connector\"),\n              g = this.getFromEnv(\"chart\"),\n              m = f.length;\n\n          for (t = 0; t < m; t++) {\n            for (o = (a = (c = f[t]) && c.components.data || []).length, i = 0; i < o; i++) {\n              if (r = (u = a[i].config).from, n = u.to, r === h && n === d) {\n                s = !0;\n                break;\n              }\n            }\n          }\n\n          e.update = !0, s && (c._setConfigure(i, e), p = {\n            arrowAtEnd: Boolean(e.arrowatend),\n            arrowAtStart: Boolean(e.arrowatstart),\n            fromNodeId: e.from,\n            id: e.id,\n            label: e.label,\n            link: e.link,\n            sourceType: \"connector\",\n            toNodeId: e.to\n          }, g.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"connectorupdated\"\n          }, p)), g.fireChartInstanceEvent(\"connectorupdated\", p), c.asyncDraw());\n        }, t.prototype.deleteConnector = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s,\n              c = e.from,\n              u = e.to,\n              p = this.getChildren(\"connector\"),\n              h = !1,\n              d = p.length,\n              f = this.getFromEnv(\"chart\");\n\n          for (t = 0; t < d; t++) {\n            for (n = (r = p[t].components.data).length, o = 0; o < n; o++) {\n              if ((a = r[o]).config.from === c && a.config.to === u) {\n                h = !0;\n                break;\n              }\n            }\n          }\n\n          h && (i = {\n            arrowAtEnd: (s = a.config || {}).arrowAtEnd,\n            arrowAtStart: s.arrowAtStart,\n            fromNodeId: s.from,\n            id: s.id,\n            label: s.label,\n            link: s.connectorLink,\n            sourceType: \"connector\",\n            toNodeId: s.to\n          }, function (e) {\n            var t;\n\n            for (t in e) {\n              e[t].remove();\n            }\n          }(a.graphics), delete a.graphics, a.removed = !0, f.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"connectordeleted\"\n          }, i)), f.fireChartInstanceEvent(\"connectordeleted\", i));\n        }, t.prototype.createHtmlDialog = function (e, t, o, a, r, n) {\n          var i,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g = this.getFromEnv(\"chartConfig\"),\n              m = this.getFromEnv(\"chart-container\"),\n              b = this.getFromEnv(\"style\").inCanvasStyle || {},\n              y = Number(g.width),\n              x = Number(g.height),\n              w = this.getFromEnv(\"animationManager\"),\n              C = {\n            color: (0, l.hashify)(b.color),\n            textAlign: \"center\",\n            paddingTop: 1 + v,\n            border: \"1px solid #cccccc\",\n            borderRadius: 4 + v,\n            cursor: l.preDefStr.POINTER,\n            _cursor: \"hand\",\n            backgroundColor: l.HASHSTRING + \"ffffff\",\n            zIndex: 21,\n            \"-webkit-border-radius\": 4 + v\n          },\n              N = n;\n          return f = {\n            width: y,\n            height: x\n          }, n || (f.fill = \"transparent\", f.type = \"div\"), N = w.setAnimation({\n            el: n || \"html\",\n            attr: f,\n            component: this,\n            label: \"ui\",\n            state: k,\n            css: {\n              fontSize: 10 + v,\n              lineHeight: 15 + v,\n              fontFamily: b.fontFamily,\n              display: \"block\"\n            },\n            container: !n && m\n          }), f = {\n            width: y,\n            height: x,\n            opacity: .3\n          }, N.veil || (f.fill = \"000000\", f.type = \"div\"), N.veil = w.setAnimation({\n            el: N.veil || \"html\",\n            attr: f,\n            component: this,\n            state: k,\n            label: \"uiveil\",\n            container: !N.veil && N\n          }), u = {\n            x: (y - e) / 2,\n            y: (x - t) / 2,\n            width: e,\n            height: t\n          }, N.dialog || (u.fill = \"efefef\", u.strokeWidth = 1, u.stroke = \"000000\", u.type = \"div\"), N.dialog = w.setAnimation({\n            el: N.dialog || \"html\",\n            attr: u,\n            component: this,\n            state: k,\n            label: \"uidialog\",\n            container: !N.dialog && N,\n            css: {\n              borderRadius: 5 + v,\n              boxShadow: \"1px 1px 3px #000000\",\n              \"-webkit-border-radius\": 5 + v,\n              \"-webkit-box-shadow\": \"1px 1px 3px #000000\",\n              filter: 'progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=\"#000000\")'\n            }\n          }), p = {\n            x: e - 70 - 5,\n            y: t - 23 - 5,\n            width: 65,\n            height: 17\n          }, N.ok || (p.text = \"Submit\", p.tabIndex = 1, p.type = \"div\"), i = w.setAnimation({\n            el: N.ok || \"html\",\n            state: k,\n            attr: p,\n            component: this,\n            label: \"uiok\",\n            css: C,\n            container: !N.ok && N.dialog\n          }), !N.ok && (N.ok = i) && i.on(\"mousedown\", o), h = {\n            x: e - 140 - 5,\n            y: t - 23 - 5,\n            width: 65,\n            height: 17\n          }, N.cancel || (h.text = \"Cancel\", h.tabIndex = 2, h.type = \"div\"), s = w.setAnimation({\n            el: N.cancel || \"html\",\n            state: k,\n            attr: h,\n            component: this,\n            label: \"uicancel\",\n            css: C,\n            container: !N.cancel && N.dialog\n          }), !N.cancel && (N.cancel = s) && s.on(\"mousedown\", a), d = {\n            x: e - 210 - 5,\n            y: t - 23 - 5,\n            width: 65,\n            height: 17\n          }, N.removeItem || (d.text = \"Delete\", d.tabIndex = 3, d.type = \"div\"), c = w.setAnimation({\n            el: N.removeItem || \"html\",\n            state: k,\n            attr: d,\n            component: this,\n            label: \"uiremove\",\n            css: C,\n            container: !N.removeItem && N.dialog\n          }), !N.removeItem && (N.removeItem = c) && c.on(\"mousedown\", r), N.handleKeyPress || (N.handleKeyPress = function (e) {\n            13 === e.keyCode ? N.ok.element && N.ok.element.onmousedown && N.ok.element.onmousedown(e) : 27 === e.keyCode && N.cancel.element && N.cancel.element.onmousedown && N.cancel.element.onmousedown(e);\n          }), N;\n        }, t.prototype.getNode = function (e) {\n          for (var t, o = {}, a = this.getChildren(\"dataset\"), r = 0, n = a.length; r < n; r++) {\n            if (e) {\n              if (t = a[r].getNode(e)) return t;\n            } else Object.assign(o, a[r].getNode());\n          }\n\n          return !e && o;\n        }, t.prototype.createContainer = function () {\n          var e = this,\n              t = e.getFromEnv(\"animationManager\"),\n              o = e.getLinkedParent().getChildContainer();\n          [\"connectorGroup\", \"defaultVcanvasGroup\", \"vcanvasLabelGroup\", \"cloneGroup\"].forEach(function (a) {\n            !e.getChildContainer(a) && e.addChildContainer(a, t.setAnimation({\n              el: \"group\",\n              attr: {\n                name: \"manager-\" + a\n              },\n              component: e,\n              container: o[a] || o.defaultVcanvasGroup\n            }));\n          }), !e.getContainer(\"waitContainer\") && e.addContainer(\"waitContainer\", t.setAnimation({\n            el: \"group\",\n            attr: {\n              name: \"manager-waitContainer\"\n            },\n            container: o.defaultVcanvasGroup,\n            component: e\n          }));\n        }, t.prototype.draw = function () {\n          var e,\n              t,\n              o = {\n            cacheUpdateUI: [350, 215],\n            cacheLabelDeleteUI: [250, 100],\n            cacheLabelUpdateUI: [350, 205],\n            cacheConnectorUpdateUIedit: [315, 215],\n            cacheConnectorUpdateUInew: [315, 215]\n          };\n\n          if (!this.getState(\"configured\")) {\n            for (e in k = \"update\", o) {\n              if ((t = this.getGraphicalElement(e)) && t.isVisible()) {\n                if (\"cacheUpdateUI\" === e) {\n                  var a = t.fields.image.val();\n                  o[e][1] = a ? 250 : 215;\n                }\n\n                this.createHtmlDialog(o[e][0], o[e][1], d, d, d, t);\n              }\n            }\n\n            k = \"appearing\";\n          }\n\n          this.setState(\"configured\", !1), this.createContainer();\n        }, t.prototype.getDataLimits = function () {\n          var e,\n              t,\n              o = this.getChildren(\"dataset\"),\n              a = +Infinity,\n              r = -Infinity,\n              n = -Infinity,\n              i = +Infinity;\n\n          for (e = 0; e < o.length; e++) {\n            t = o[e].config, r = Math.max(r, t.yMax), a = Math.min(a, t.yMin), n = Math.max(n, t.xMax), i = Math.min(i, t.xMin);\n          }\n\n          return {\n            max: r,\n            min: a,\n            xMax: n,\n            xMin: i\n          };\n        }, t.prototype.isVisible = function () {\n          return !this.isNotVisible;\n        }, t.prototype.childChanged = function () {\n          return this;\n        }, t.prototype.hideWaitElem = function () {\n          this.getGraphicalElement(\"waitElement\") && this.getGraphicalElement(\"waitElement\").hide();\n        }, t.prototype.clearLongPress = function () {\n          clearTimeout(this.config._longpressactive), delete this.config._longpressactive;\n        }, t.prototype.triggerLabelUI = function (e, t) {\n          var o = this;\n          o.config._longpressactive = setTimeout(function () {\n            e.data(\"fire_click_event\", 0), e.data(\"viewMode\") || o.showLabelDeleteUI(t);\n          }, 1e3);\n        }, t.prototype.triggerConnectorUI = function (e) {\n          var t = this,\n              o = e.data(\"dataset\"),\n              a = o.config,\n              r = e.data(l.preDefStr.configStr),\n              n = r || {};\n          t.config._longpressactive = setTimeout(function () {\n            e.data(\"fire_click_event\", 0), e.data(\"viewMode\") || t.showConnectorUpdateUI({\n              fromid: {\n                val: n.from,\n                innerHTML: \"<option>\" + n.from + \"</option>\",\n                disabled: !0\n              },\n              toid: {\n                val: n.to,\n                innerHTML: \"<option>\" + n.to + \"</option>\",\n                disabled: !0\n              },\n              datasetIndex: o.config.datasetIndex,\n              index: r.index,\n              arratstart: {\n                val: Boolean((0, l.pluckNumber)(n.arrowatstart, 1))\n              },\n              arratend: {\n                val: Boolean((0, l.pluckNumber)(n.arrowatend, 1))\n              },\n              dashed: {\n                val: (0, l.pluckNumber)(n.dashed)\n              },\n              dashgap: {\n                val: n.dashgap\n              },\n              dashlen: {\n                val: n.dashlen\n              },\n              label: {\n                val: n.label\n              },\n              tooltext: {\n                val: n.tooltext\n              },\n              id: {\n                val: a.id,\n                disabled: !0\n              },\n              strength: {\n                val: n.conStrength\n              },\n              alpha: {\n                val: n.alpha\n              },\n              color: {\n                val: n.color.FCcolor.color\n              }\n            }, !0);\n          }, 1e3);\n        }, t.prototype.deleteLabel = function (e) {\n          var t,\n              o,\n              a,\n              r = this.getChildren(\"labels\")[0],\n              n = (0, l.pluckNumber)(e, r.config.lastTappedLabelIndex),\n              i = r.components.data[n],\n              s = this.getFromEnv(\"chart\");\n          t = i.graphics.element, o = i.graphics.trackerElement, t && (a = t.data(\"eventArgs\"), t.remove(), o && o.remove(), delete i.graphics), s.fireChartInstanceEvent(\"chartupdated\", (0, l.extend2)({\n            sourceEvent: \"labeldeleted\"\n          }, a)), s.fireChartInstanceEvent(\"labeldeleted\", a), i.removed = !0;\n        }, t.prototype.showLabelDeleteUI = function (e) {\n          var t = this,\n              o = t.getChildren(\"labels\")[0],\n              a = t.getFromEnv(\"paper\"),\n              r = t.getGraphicalElement(\"cacheLabelDeleteUI\");\n          o.config.lastTappedLabelIndex = e.config.index, r ? r.show() : ((r = t.addGraphicalElement(\"cacheLabelDeleteUI\", t.createHtmlDialog(250, 100, d, function () {\n            r.hide();\n          }, function () {\n            t.deleteLabel(), r.hide();\n          }))).message = a.html(\"span\", {\n            x: 10,\n            y: 10,\n            width: 230,\n            height: 80\n          }).add(r.dialog), r.ok.hide(), r.removeItem.translate(175).show()), r.message.attr({\n            text: 'Would you really like to delete the label: \"' + e.config.text + '\"?'\n          });\n        }, t.prototype.drawWaitingRing = function (e, t) {\n          var o = this,\n              a = o.config,\n              r = o.getFromEnv(\"animationManager\"),\n              n = o.getContainer(\"waitContainer\"),\n              i = e.config,\n              s = o.getChildren(\"dataset\")[t].config,\n              c = o.getGraphicalElement(\"waitElement\");\n          o.clearLongPress(), c = r.setAnimation({\n            el: c || \"ringpath\",\n            attr: {\n              ringpath: [i._xPos, i._yPos, 8, 11, 0, 0],\n              fill: (0, l.toRaphaelColor)({\n                alpha: \"100,100\",\n                angle: 120,\n                color: \"CCCCCC,FFFFFF\",\n                ratio: \"30,50\"\n              }),\n              \"stroke-width\": 0\n            },\n            container: n,\n            component: o\n          }), o.getGraphicalElement(\"waitElement\") || o.addGraphicalElement(\"waitElement\", c), c.show().animate({\n            ringpath: [i._xPos, i._yPos, 8, 11, 0, 6.28]\n          }, 1e3), a._longpressactive = setTimeout(function () {\n            var e = s.name !== m && s.name !== d ? s.name + l.preDefStr.BLANKSPACE : m,\n                a = s.id !== d ? (e ? l.COMMASTRING : e) + s.id : m;\n            c && c.hide(), o.showNodeUpdateUI({\n              x: {\n                value: i.x\n              },\n              y: {\n                value: i.y\n              },\n              draggable: {\n                value: (0, l.getFirstValue)(i.allowdrag, 1)\n              },\n              color: {\n                value: i.color\n              },\n              alpha: {\n                value: i.alpha\n              },\n              label: {\n                value: (0, l.getFirstValue)(i.label, i.name)\n              },\n              tooltip: {\n                value: i.toolText\n              },\n              shape: {\n                value: h[i.shape]\n              },\n              rectWidth: {\n                value: i.width\n              },\n              rectHeight: {\n                value: i.height\n              },\n              circPolyRadius: {\n                value: i.radius\n              },\n              polySides: {\n                value: i.numsides\n              },\n              image: {\n                value: i.imageNode\n              },\n              imgWidth: {\n                value: i.imageWidth\n              },\n              imgHeight: {\n                value: i.imageHeight\n              },\n              imgAlign: {\n                value: i.imageAlign\n              },\n              imgUrl: {\n                value: i.imageURL\n              },\n              id: {\n                value: i.id,\n                disabled: !0\n              },\n              link: {\n                value: i.link\n              },\n              dataset: {\n                innerHTML: '<option value=\"' + a + '\">' + e + a + \"</option>\",\n                disabled: !0\n              },\n              datasetIndex: t\n            }, !0);\n          }, 1e3);\n        }, t.prototype.drawNodeConnectors = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l = this.getChildren(\"connector\");\n          if (e) for (t in e) {\n            (r = e[t]) && (o = r.config.datasetIndex, n = r.config.fromPointObj, i = r.config.toPointObj, (a = l[o]) && (a && a.parsePlotAttributes(r, n, i), a && a.drawConnector(r, n, i)));\n          }\n        }, t.prototype._clearConnectors = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i = this.getNode();\n\n          for (e in i) {\n            if (n = i[e]) {\n              for (r in t = n.config.startConnectors || {}, o = n.config.endConnectors || {}, t) {\n                a = {\n                  graphics: t[r].graphics || {}\n                }, l.componentDispose.call(a);\n              }\n\n              for (r in o) {\n                a = {\n                  graphics: o[r].graphics || {}\n                }, l.componentDispose.call(a);\n              }\n            }\n          }\n        }, t.prototype.getJSONData = function () {\n          var e,\n              t,\n              o,\n              a = this.getChildren(),\n              r = a.dataset,\n              n = a.connector,\n              i = a.labels,\n              s = {};\n\n          for (s.dataset = [], s.connectors = [], s.labels = [], e = 0, t = r && r.length; e < t; e++) {\n            o = r[e], s.dataset[e] || (s.dataset[e] = (0, l.extend2)({}, o.JSONData)), s.dataset[e].data = o.getJSONData();\n          }\n\n          for (e = 0, t = n && n.length; e < t; e++) {\n            o = n[e], s.connectors[e] || (s.connectors[e] = (0, l.extend2)({}, o.JSONData)), s.connectors[e].connector = o.getJSONData();\n          }\n\n          for (e = 0, t = i && i.length; e < t; e++) {\n            o = i[e], s.labels[e] || (s.labels[e] = {\n              label: []\n            }), s.labels[e].label = o.getJSONData();\n          }\n\n          return s;\n        }, t;\n      }(r.ComponentInterface);\n\n      t[\"default\"] = S;\n    },\n    909: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o,\n            n = e.getFromEnv(\"dataSource\"),\n            i = n.dataset,\n            l = n.connectors,\n            s = n.labels,\n            c = void 0,\n            u = c = e.getChildren().canvas[0].getChildren(\"vCanvas\")[0],\n            p = [];\n        s && (s = [s]), i || l || s ? (t = e.getDSGroupdef(), (0, a.componentFactory)(c, t, \"datasetGroup_dragNode\"), (o = c.getChildren(\"datasetGroup_dragNode\")) && (u = o[0]), i && i.length ? (0, a.componentFactory)(u, e.getDSdef(\"dragnode\"), \"dataset\", i.length, i) : p.push(\"dataset\"), l && l.length ? (0, a.componentFactory)(u, e.getDSdef(\"connector\"), \"connector\", l.length, l) : p.push(\"connector\"), s && s.length ? (0, a.componentFactory)(u, e.getDSdef(\"dragableLabels\"), \"labels\", s.length, s) : p.push(\"labels\"), p.length && r(u, p)) : e.setChartMessage();\n      };\n\n      var a = o(125),\n          r = function r(e, t) {\n        var o = e.getChildren(),\n            a = void 0,\n            r = void 0,\n            n = void 0;\n        if (t && t.length) for (n = t.length - 1; n > -1; n--) {\n          for (r = (a = o[t[n]]) && a.length - 1; r > -1; a[r].remove(), r--) {\n            ;\n          }\n        }\n      };\n    },\n    910: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(911),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    911: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(125),\n          r = c(o(459)),\n          n = c(o(427)),\n          i = c(o(912)),\n          l = c(o(922)),\n          s = o(913);\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = a.preDefStr.altHGridColorStr,\n          h = a.preDefStr.altHGridAlphaStr,\n          d = Math,\n          f = d.max,\n          g = d.round,\n          m = a.preDefStr.POSITION_BOTTOM,\n          v = a.preDefStr.divLineAlpha3DStr,\n          b = a.preDefStr.defaultFontStr,\n          y = a.preDefStr.divLineAlphaStr,\n          x = a.preDefStr.altVGridColorStr,\n          k = a.preDefStr.altVGridAlphaStr,\n          w = a.preDefStr.colors.c000000,\n          C = {\n        chart2D: {\n          bgColor: \"bgColor\",\n          bgAlpha: \"bgAlpha\",\n          bgAngle: \"bgAngle\",\n          bgRatio: \"bgRatio\",\n          canvasBgColor: \"canvasBgColor\",\n          canvasBaseColor: \"canvasBaseColor\",\n          divLineColor: \"divLineColor\",\n          legendBgColor: \"legendBgColor\",\n          legendBorderColor: \"legendBorderColor\",\n          toolTipbgColor: \"toolTipbgColor\",\n          toolTipBorderColor: \"toolTipBorderColor\",\n          baseFontColor: \"baseFontColor\",\n          anchorBgColor: \"anchorBgColor\"\n        },\n        chart3D: {\n          bgColor: \"bgColor3D\",\n          bgAlpha: \"bgAlpha3D\",\n          bgAngle: \"bgAngle3D\",\n          bgRatio: \"bgRatio3D\",\n          canvasBgColor: \"canvasBgColor3D\",\n          canvasBaseColor: \"canvasBaseColor3D\",\n          divLineColor: \"divLineColor3D\",\n          divLineAlpha: v,\n          legendBgColor: \"legendBgColor3D\",\n          legendBorderColor: \"legendBorderColor3D\",\n          toolTipbgColor: \"toolTipbgColor3D\",\n          toolTipBorderColor: \"toolTipBorderColor3D\",\n          baseFontColor: \"baseFontColor3D\",\n          anchorBgColor: \"anchorBgColor3D\"\n        }\n      },\n          N = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.isDual = !0, o.paletteIndex = 3, o.canvasborderthickness = 1, o.hasInteractiveLegend = !1, o.numOfCanvas = 2, o.registerFactory(\"vCanvas\", n[\"default\"], [\"axis\"]), o.registerFactory(\"axis\", l[\"default\"], [\"canvas\"]), o.registerFactory(\"dataset\", i[\"default\"], [\"vCanvas\"]), o;\n        }\n\n        return u(t, e), t.prototype.getName = function () {\n          return \"candlestick\";\n        }, t.getName = function () {\n          return \"candlestick\";\n        }, t.prototype.getDSdef = function (e) {\n          return \"bar\" === e ? s.CandleStickBarDataset : \"line\" === e ? s.CandleStickLineDataset : s.CandleStickDataset;\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.hasLegend = !0, t.defaultDatasetType = \"candlestick\", t.drawanchors = 0, t.enablemousetracking = !0, t.iscandlestick = !0;\n        }, t.prototype.configureAttributes = function (t) {\n          e.prototype.configureAttributes.call(this, t);\n        }, t.prototype.parseChartAttr = function (t) {\n          e.prototype.parseChartAttr.call(this, t);\n          var o,\n              r = this.config,\n              n = this.getFromEnv(\"chart-attrib\"),\n              i = this.getFromEnv(\"color-manager\");\n          r.showVolumeChart = (0, a.pluckNumber)(n.showvolumechart, function (e) {\n            if (!e || !e.dataset) return 0;\n            var t = e.dataset[0].data;\n            return !!(Array.isArray(t) && t.filter(function (e) {\n              return e.volume;\n            }) || []).length;\n          }(t), 1), r.rollOverBandColor = (0, a.convertColor)((0, a.pluck)(n.rolloverbandcolor, i.getColor(p)), (0, a.pluck)(n.rolloverbandalpha, i.getColor(h))), r.crosslinecolor = (0, a.pluck)(n.crosslinecolor, n.rolloverbandcolor, i.getColor(p)), r.drawcrosslineontop = 0, r.crosslinealpha = (0, a.pluckNumber)(n.crosslinealpha, n.rolloverbandalpha, i.getColor(h)), r.drawcrossline = 1, r.skipClipping = !0, n = this.getFromEnv(\"chart-attrib\"), r.vplotbordercolor = (0, a.getFirstValue)(n.vplotbordercolor, \"\"), r.vplotborderalpha = (0, a.getFirstValue)(n.vplotborderalpha, \"\"), r.vplotborderthickness = (0, a.pluckNumber)(n.vplotborderthickness, 1), r.showplotborder = (0, a.pluckNumber)(n.showvplotborder, 1), o = (0, a.pluckNumber)(n.volumeheightpercent, 40), r.volumeHeightPercent = o < 20 ? 20 : o > 80 ? 80 : o, r.canvasBorderWidth = (0, a.pluckNumber)(n.canvasborderthickness, 1);\n        }, t.prototype._spaceManager = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E = this.config,\n              D = this.getChildren(),\n              _ = E.legendPosition,\n              T = D.xAxis && D.xAxis[0],\n              L = D.yAxis && D.yAxis[0],\n              P = D.yAxis && D.yAxis[1],\n              O = E.hasLegend,\n              V = this.getFromEnv(\"legend\"),\n              M = this.config.showVolumeChart,\n              F = M ? E.volumeHeightPercent : 0,\n              I = D.canvas[0],\n              B = I.config,\n              R = E.width,\n              j = E.height,\n              G = {},\n              H = E.chartBorderWidth,\n              W = B.canvasBorderWidth,\n              z = E.minCanvasHeight,\n              U = E.minCanvasWidth,\n              J = E.canvasMarginLeft,\n              K = E.canvasMarginRight,\n              q = E.canvasMarginTop,\n              Y = E.canvasMarginBottom,\n              X = E.origCanvasTopMargin,\n              Q = E.origCanvasBottomMargin,\n              Z = E.origCanvasLeftMargin,\n              $ = E.origCanvasRightMargin;\n          this._allocateSpace({\n            top: H,\n            bottom: H,\n            left: H,\n            right: H\n          }), e = .225 * E.availableHeight, t = this._manageActionBarSpace && this._manageActionBarSpace(e) || {}, this._allocateSpace(t), d = _ === a.POSITION_RIGHT ? .225 * E.canvasWidth : .3 * E.canvasHeight, !1 !== O && T && E.showLegend && this._allocateSpace(V._manageLegendPosition(d)), o = .7 * E.canvasWidth, p = L.placeAxis(o), h = M ? P.placeAxis(o) : {}, G.left = f(p.left, h.left || 0), G.right = f(p.right, h.right || 0), this._allocateSpace(G), U > R - J - K && (S = !0, v = E.canvasWidth - U, A = J + K, J = E.canvasMarginLeft = v * J / A, K = E.canvasMarginRight = v * K / A), k = J > E.canvasLeft ? J - E.canvasLeft : 0, w = K > R - E.canvasRight ? K + E.canvasRight - R : 0, this._allocateSpace({\n            left: k,\n            right: w\n          }), S && (A = Z + $, (y = E.canvasWidth) > U && (k = (v = y - U) * Z / A, w = v * $ / A), this._allocateSpace({\n            left: k,\n            right: w\n          })), r = .225 * E.canvasHeight, r = _ === m ? .6 * E.canvasHeight : .6 * E.canvasWidth, this._manageChartMenuBar(r), this._allocateSpace({\n            top: E.canvasMarginTop,\n            bottom: E.canvasMarginBottom\n          }), r = .3 * E.canvasHeight, i = T.placeAxis(r), T && this._allocateSpace(i), i.bottom += 6, B.intermediarySpace = i.bottom, M && this._allocateSpace({\n            bottom: 10\n          }), this._allocateSpace({\n            top: W,\n            bottom: 2 * W,\n            left: W,\n            right: W\n          }), z > j - q - Y && (x = !0, v = E.canvasHeight - z, A = q + Y, q = E.canvasMarginTop = v * q / A, Y = E.canvasMarginBottom = v * Y / A), C = q > E.canvasTop ? q - E.canvasTop : 0, N = Y > j - E.canvasBottom ? Y + E.canvasBottom - j : 0, this._allocateSpace({\n            top: C,\n            bottom: N\n          }), x && (A = X + Q, (b = E.canvasHeight) > z && (C = (v = b - z) * X / A, N = v * Q / A), this._allocateSpace({\n            top: C,\n            bottom: N\n          })), n = E.canvasHeight, B.canvasHeight = g((100 - F) / 100 * n), B.canvasTop = E.canvasTop, B.canvasLeft = E.canvasLeft, B.canvasBottom = B.canvasTop + B.canvasHeight, B.canvasWidth = E.canvasWidth, B.canvasRight = E.canvasRight, u = E.canvasTop + B.canvasHeight + W, B.canvasY = u, I.setDimension({\n            top: B.canvasTop,\n            left: B.canvasLeft,\n            width: B.canvasWidth,\n            height: B.canvasHeight\n          }), M && ((s = (l = D.canvas[1]).config).canvasHeight = F / 100 * n, s.canvasTop = B.canvasBottom + i.bottom + 2 * W, s.canvasLeft = E.canvasLeft, s.canvasBottom = s.canvasTop + s.canvasHeight + 2 * W, s.canvasRight = E.canvasRight, s.canvasWidth = E.canvasWidth, c = E.canvasTop + B.canvasHeight + i.bottom + 2 * W, s.canvasY = c, l.setDimension({\n            top: s.canvasTop,\n            left: s.canvasLeft,\n            width: s.canvasWidth,\n            height: s.canvasHeight\n          }));\n        }, t.prototype._postSpaceManagement = function () {\n          e.prototype._postSpaceManagement.call(this);\n        }, t.prototype.setAxisDimention = function () {\n          var e = this.getChildren(),\n              t = this.config.showVolumeChart,\n              o = e.xAxis && e.xAxis[0],\n              a = e.yAxis && e.yAxis[0],\n              r = e.yAxis && e.yAxis[1],\n              n = e.canvas,\n              i = n[0].config,\n              l = void 0,\n              s = i.canvasBorderWidth;\n          o && o.setAxisDimention({\n            x: i.canvasLeft,\n            y: i.canvasY,\n            opposite: i.canvasTop - s,\n            axisLength: i.canvasWidth\n          }), a && a.setAxisDimention({\n            x: i.canvasLeft - s,\n            y: i.canvasTop,\n            opposite: i.canvasRight + s,\n            axisLength: i.canvasHeight\n          }), o.setCanvas(i), a.setCanvas(i), t && (l = n[1].config, r && r.setAxisDimention({\n            x: i.canvasLeft - s,\n            y: l.canvasTop,\n            opposite: l.canvasRight + s,\n            axisLength: l.canvasHeight\n          }), r && r.setCanvas(l));\n        }, t.prototype._feedAxesRawData = function () {\n          var e,\n              t,\n              o,\n              r = this.getFromEnv(\"color-manager\"),\n              n = this.getFromEnv(\"dataSource\"),\n              i = this.getFromEnv(\"chart-attrib\"),\n              l = [],\n              s = [],\n              c = this.config.is3D,\n              u = c ? C.chart3D : C.chart2D;\n          return (e = {\n            isVertical: !1,\n            isReverse: !1,\n            isOpposit: !1,\n            drawTrendLabels: !0,\n            outCanfontFamily: (0, a.pluck)(i.outcnvbasefont, i.basefont, b),\n            outCanfontSize: (0, a.pluckFontSize)(i.outcnvbasefontsize, i.basefontsize, 10),\n            outCancolor: (0, a.pluck)(i.outcnvbasefontcolor, i.basefontcolor, r.getColor(u.baseFontColor)).replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: i.xaxisnamepadding,\n            axisValuePadding: i.labelpadding,\n            axisNameFont: i.xaxisnamefont,\n            axisNameFontSize: i.xaxisnamefontsize,\n            axisNameFontColor: i.xaxisnamefontcolor,\n            axisNameFontBold: i.xaxisnamefontbold,\n            axisNameFontItalic: i.xaxisnamefontitalic,\n            axisNameBgColor: i.xaxisnamebgcolor,\n            axisNameBorderColor: i.xaxisnamebordercolor,\n            axisNameAlpha: i.xaxisnamealpha,\n            axisNameFontAlpha: i.xaxisnamefontalpha,\n            axisNameBgAlpha: i.xaxisnamebgalpha,\n            axisNameBorderAlpha: i.xaxisnameborderalpha,\n            axisNameBorderPadding: i.xaxisnameborderpadding,\n            axisNameBorderRadius: i.xaxisnameborderradius,\n            axisNameBorderThickness: i.xaxisnameborderthickness,\n            axisNameBorderDashed: i.xaxisnameborderdashed,\n            axisNameBorderDashLen: i.xaxisnameborderdashlen,\n            axisNameBorderDashGap: i.xaxisnameborderdashgap,\n            useEllipsesWhenOverflow: i.useellipseswhenoverflow,\n            divLineColor: (0, a.pluck)(i.vdivlinecolor, i.divlinecolor, r.getColor(u.divLineColor)),\n            divLineAlpha: (0, a.pluck)(i.vdivlinealpha, i.divlinealpha, c ? r.getColor(v) : r.getColor(y)),\n            divLineThickness: (0, a.pluckNumber)(i.vdivlinethickness, i.divlinethickness, 1),\n            divLineIsDashed: Boolean((0, a.pluckNumber)(i.vdivlinedashed, i.vdivlineisdashed, i.divlinedashed, i.divlineisdashed, 0)),\n            divLineDashLen: (0, a.pluckNumber)(i.vdivlinedashlen, i.divlinedashlen, 4),\n            divLineDashGap: (0, a.pluckNumber)(i.vdivlinedashgap, i.divlinedashgap, 2),\n            showAlternateGridColor: (0, a.pluckNumber)(i.showalternatevgridcolor, 0),\n            alternateGridColor: (0, a.pluck)(i.alternatevgridcolor, r.getColor(x)),\n            alternateGridAlpha: (0, a.pluck)(i.alternatevgridalpha, r.getColor(k)),\n            numDivLines: i.numvdivlines,\n            labelFont: i.labelfont,\n            labelFontSize: i.labelfontsize,\n            labelFontColor: i.labelfontcolor,\n            labelFontAlpha: i.labelalpha,\n            labelFontBold: i.labelfontbold,\n            labelFontItalic: i.labelfontitalic,\n            axisName: i.xaxisname,\n            axisMinValue: i.xaxisminvalue,\n            axisMaxValue: i.xaxismaxvalue,\n            setAdaptiveMin: i.setadaptivexmin,\n            adjustDiv: i.adjustvdiv,\n            labelDisplay: i.labeldisplay,\n            showLabels: i.showlabels,\n            rotateLabels: i.rotatelabels,\n            slantLabel: (0, a.pluckNumber)(i.slantlabels, i.slantlabel),\n            labelStep: (0, a.pluckNumber)(i.labelstep, i.xaxisvaluesstep),\n            showAxisValues: (0, a.pluckNumber)(i.showxaxisvalues, i.showxaxisvalue),\n            showLimits: i.showvlimits,\n            showDivLineValues: (0, a.pluckNumber)(i.showvdivlinevalues, i.showvdivlinevalues),\n            showZeroPlane: i.showvzeroplane,\n            zeroPlaneColor: i.vzeroplanecolor,\n            zeroPlaneThickness: i.vzeroplanethickness,\n            zeroPlaneAlpha: i.vzeroplanealpha,\n            showZeroPlaneValue: i.showvzeroplanevalue,\n            trendlineColor: i.trendlinecolor,\n            trendlineToolText: i.trendlinetooltext,\n            trendlineThickness: i.trendlinethickness,\n            trendlineAlpha: i.trendlinealpha,\n            showTrendlinesOnTop: i.showtrendlinesontop,\n            showAxisLine: (0, a.pluckNumber)(i.showxaxisline, i.showaxislines, i.drawAxisLines, 0),\n            axisLineThickness: (0, a.pluckNumber)(i.xaxislinethickness, i.axislinethickness, 1),\n            axisLineAlpha: (0, a.pluckNumber)(i.xaxislinealpha, i.axislinealpha, 100),\n            axisLineColor: (0, a.pluck)(i.xaxislinecolor, i.axislinecolor, w),\n            freezeLimit: !0\n          }).vtrendlines = n.vtrendlines, s.push(e), (t = {\n            isVertical: !0,\n            isReverse: !0,\n            isOpposit: !1,\n            drawLabelsOpposit: 1,\n            axisNameAlignCanvas: 1,\n            outCanfontFamily: (0, a.pluck)(i.outcnvbasefont, i.basefont, b),\n            outCanfontSize: (0, a.pluckFontSize)(i.outcnvbasefontsize, i.basefontsize, 10),\n            outCancolor: (0, a.pluck)(i.outcnvbasefontcolor, i.basefontcolor, r.getColor(u.baseFontColor)).replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: i.yaxisnamepadding,\n            axisValuePadding: i.yaxisvaluespadding,\n            axisNameFont: i.pyaxisnamefont,\n            axisNameFontSize: i.pyaxisnamefontsize,\n            axisNameFontColor: i.pyaxisnamefontcolor,\n            axisNameFontBold: i.pyaxisnamefontbold,\n            axisNameFontItalic: i.pyaxisnamefontitalic,\n            axisNameBgColor: i.pyaxisnamebgcolor,\n            axisNameBorderColor: i.pyaxisnamebordercolor,\n            axisNameAlpha: i.pyaxisnamealpha,\n            axisNameFontAlpha: i.pyaxisnamefontalpha,\n            axisNameBgAlpha: i.pyaxisnamebgalpha,\n            axisNameBorderAlpha: i.pyaxisnameborderalpha,\n            axisNameBorderPadding: i.pyaxisnameborderpadding,\n            axisNameBorderRadius: i.pyaxisnameborderradius,\n            axisNameBorderThickness: i.pyaxisnameborderthickness,\n            axisNameBorderDashed: i.pyaxisnameborderdashed,\n            axisNameBorderDashLen: i.pyaxisnameborderdashlen,\n            axisNameBorderDashGap: i.pyaxisnameborderdashgap,\n            axisNameWidth: i.yaxisnamewidth,\n            useEllipsesWhenOverflow: i.useellipseswhenoverflow,\n            rotateAxisName: (0, a.pluckNumber)(i.rotateyaxisname, 1),\n            axisName: i.pyaxisname,\n            divLineColor: (0, a.pluck)(i.divlinecolor, r.getColor(u.divLineColor)),\n            divLineAlpha: (0, a.pluck)(i.divlinealpha, r.getColor(y)),\n            divLineThickness: (0, a.pluckNumber)(i.divlinethickness, 1),\n            divLineIsDashed: Boolean((0, a.pluckNumber)(i.divlinedashed, i.divlineisdashed, 1)),\n            divLineDashLen: (0, a.pluckNumber)(i.divlinedashlen, 4),\n            divLineDashGap: (0, a.pluckNumber)(i.divlinedashgap, 2),\n            showAlternateGridColor: (0, a.pluckNumber)(i.showalternatehgridcolor, 1),\n            alternateGridColor: (0, a.pluck)(i.alternatehgridcolor, r.getColor(p)),\n            alternateGridAlpha: (0, a.pluck)(i.alternatehgridalpha, r.getColor(h)),\n            numDivLines: (0, a.pluckNumber)(i.numpdivlines, 5),\n            axisMinValue: i.pyaxisminvalue,\n            axisMaxValue: i.pyaxismaxvalue,\n            setAdaptiveMin: (0, a.pluckNumber)(i.setadaptiveymin, 1),\n            adjustDiv: i.adjustdiv,\n            labelStep: i.yaxisvaluesstep,\n            showAxisValues: (0, a.pluckNumber)(i.showyaxisvalues, i.showyaxisvalue),\n            showLimits: (0, a.pluckNumber)(i.showyaxislimits, i.showlimits, this.showLimits),\n            showDivLineValues: (0, a.pluckNumber)(i.showdivlinevalues, i.showdivlinevalue),\n            showZeroPlane: i.showzeroplane,\n            zeroPlaneColor: i.zeroplanecolor,\n            zeroPlaneThickness: i.zeroplanethickness,\n            zeroPlaneAlpha: i.zeroplanealpha,\n            showZeroPlaneValue: i.showzeroplanevalue,\n            trendlineColor: i.trendlinecolor,\n            trendlineToolText: i.trendlinetooltext,\n            trendlineThickness: i.trendlinethickness,\n            trendlineAlpha: i.trendlinealpha,\n            showTrendlinesOnTop: i.showtrendlinesontop,\n            showAxisLine: (0, a.pluckNumber)(i.showyaxisline, i.showaxislines, i.drawAxisLines, 0),\n            axisLineThickness: (0, a.pluckNumber)(i.yaxislinethickness, i.axislinethickness, 1),\n            axisLineAlpha: (0, a.pluckNumber)(i.yaxislinealpha, i.axislinealpha, 100),\n            axisLineColor: (0, a.pluck)(i.yaxislinecolor, i.axislinecolor, w)\n          }).trendlines = n.trendlines, l.push(t), this.config.showVolumeChart && (o = {\n            isVertical: !0,\n            isReverse: !0,\n            isOpposit: !1,\n            axisIndex: 1,\n            drawLabelsOpposit: 1,\n            axisNameAlignCanvas: 1,\n            uniqueClassName: 1,\n            outCanfontFamily: (0, a.pluck)(i.outcnvbasefont, i.basefont, b),\n            outCanfontSize: (0, a.pluckFontSize)(i.outcnvbasefontsize, i.basefontsize, 10),\n            outCancolor: (0, a.pluck)(i.outcnvbasefontcolor, i.basefontcolor, r.getColor(u.baseFontColor)).replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: i.yaxisnamepadding,\n            axisValuePadding: i.yaxisvaluespadding,\n            axisNameFont: i.vyaxisnamefont,\n            axisNameFontSize: i.vyaxisnamefontsize,\n            axisNameFontColor: i.vyaxisnamefontcolor,\n            axisNameFontBold: i.vyaxisnamefontbold,\n            axisNameFontItalic: i.vyaxisnamefontitalic,\n            axisNameBgColor: i.vyaxisnamebgcolor,\n            axisNameBorderColor: i.vyaxisnamebordercolor,\n            axisNameAlpha: i.vyaxisnamealpha,\n            axisNameFontAlpha: i.vyaxisnamefontalpha,\n            axisNameBgAlpha: i.vyaxisnamebgalpha,\n            axisNameBorderAlpha: i.vyaxisnameborderalpha,\n            axisNameBorderPadding: i.vyaxisnameborderpadding,\n            axisNameBorderRadius: i.vyaxisnameborderradius,\n            axisNameBorderThickness: i.vyaxisnameborderthickness,\n            axisNameBorderDashed: i.vyaxisnameborderdashed,\n            axisNameBorderDashLen: i.vyaxisnameborderdashlen,\n            axisNameBorderDashGap: i.vyaxisnameborderdashgap,\n            axisNameWidth: i.yaxisnamewidth,\n            useEllipsesWhenOverflow: i.useellipseswhenoverflow,\n            rotateAxisName: (0, a.pluckNumber)(i.rotateyaxisname, 1),\n            axisName: i.vyaxisname,\n            divLineColor: (0, a.pluck)(i.divlinecolor, r.getColor(u.divLineColor)),\n            divLineAlpha: (0, a.pluck)(i.divlinealpha, r.getColor(y)),\n            divLineThickness: (0, a.pluckNumber)(i.divlinethickness, 1),\n            divLineIsDashed: Boolean((0, a.pluckNumber)(i.divlinedashed, i.divlineisdashed, 1)),\n            divLineDashLen: (0, a.pluckNumber)(i.divlinedashlen, 4),\n            divLineDashGap: (0, a.pluckNumber)(i.divlinedashgap, 2),\n            showAlternateGridColor: (0, a.pluckNumber)(i.showalternatehgridcolor, 1),\n            alternateGridColor: (0, a.pluck)(i.alternatehgridcolor, r.getColor(p)),\n            alternateGridAlpha: (0, a.pluck)(i.alternatehgridalpha, r.getColor(h)),\n            numDivLines: i.numdivlines,\n            axisMinValue: i.vyaxisminvalue,\n            axisMaxValue: i.vyaxismaxvalue,\n            setAdaptiveMin: i.setadaptiveymin,\n            adjustDiv: i.adjustdiv,\n            labelStep: i.yaxisvaluesstep,\n            showAxisValues: (0, a.pluckNumber)(i.showyaxisvalues, i.showyaxisvalue),\n            showLimits: (0, a.pluckNumber)(i.showsecondarylimits, i.showlimits),\n            showDivLineValues: (0, a.pluckNumber)(i.showdivlinevalues, i.showdivlinevalue),\n            showZeroPlane: i.showzeroplane,\n            zeroPlaneColor: i.zeroplanecolor,\n            zeroPlaneThickness: i.zeroplanethickness,\n            zeroPlaneAlpha: i.zeroplanealpha,\n            showZeroPlaneValue: i.showzeroplanevalue,\n            trendlineColor: i.trendlinecolor,\n            trendlineToolText: i.trendlinetooltext,\n            trendlineThickness: i.trendlinethickness,\n            trendlineAlpha: i.trendlinealpha,\n            showTrendlinesOnTop: i.showtrendlinesontop,\n            showAxisLine: (0, a.pluckNumber)(i.showyaxisline, i.showaxislines, i.drawAxisLines, 0),\n            axisLineThickness: (0, a.pluckNumber)(i.yaxislinethickness, i.axislinethickness, 1),\n            axisLineAlpha: (0, a.pluckNumber)(i.yaxislinealpha, i.axislinealpha, 100),\n            axisLineColor: (0, a.pluck)(i.yaxislinecolor, i.axislinecolor, w)\n          }, l.push(o)), {\n            xAxisConfigure: s,\n            yAxisConfigure: l\n          };\n        }, t.prototype.mouseoutHandler = function (e, t, o) {\n          var a = this.config.datasetOrder || this.getDatasets(),\n              r = this.getChildren(\"mouseTracker\")[0];\n          a[t] && a[t].components.data[o] ? a[t]._firePlotEvent(\"fc-mouseout\", o, e) : this.getFromEnv(\"toolTipController\").hideAll(), delete r._lastDatasetIndex, delete r._lastPointIndex;\n        }, t.prototype._mouseEvtHandler = function (e, t) {\n          var o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u = this,\n              p = t.mouseTracker,\n              h = e.originalEvent,\n              d = u.getChildren(\"canvas\").length,\n              f = h && (0, a.getMouseCoordinate)(u.getFromEnv(\"chart-container\"), h, u),\n              g = f && f.chartX || 0,\n              m = f && f.chartY || 0,\n              v = !1,\n              b = p._lastDatasetIndex,\n              y = p._lastPointIndex;\n\n          for (i = 0; i < d; i++) {\n            for (l = (o = u.getDatasets()).length; l-- && !v;) {\n              (r = o[l]) && r.getState(\"visible\") && (n = r._getHoveredPlot && r._getHoveredPlot(g, m)) && n.hovered && (v = !0, n.datasetIndex = l, c = p.getMouseEvents(e, n.datasetIndex, n.pointIndex));\n            }\n          }\n\n          if ((!v || c && c.fireOut) && void 0 !== b && o[b] && o[b]._firePlotEvent && (c && !c.events.length ? p.mouseoutTimer = setTimeout(function () {\n            u.mouseoutHandler(e, b, y);\n          }, 20) : (u.mouseoutHandler(e, b, y), clearTimeout(p.mouseoutTimer))), v) for ((s = c.events && c.events.length) && (p._lastDatasetIndex = n.datasetIndex, y = p._lastPointIndex = n.pointIndex), l = 0; l < s; l += 1) {\n            r && r._firePlotEvent && r._firePlotEvent(c.events[l], y, e, n.datasetIndex);\n          }\n        }, t.prototype._allocateSpace = function (e) {\n          var t,\n              o,\n              a = this.getChildren(\"canvas\"),\n              r = a && a[0].config,\n              n = this.config,\n              i = n.canvasHeight,\n              l = n.canvasWidth,\n              s = n.availableHeight,\n              c = n.availableWidth;\n          o = n.canvasLeft += e.left || 0, t = n.canvasTop += e.top || 0, l = n.canvasWidth = f(l - ((e.left || 0) + (e.right || 0)), 0), i = n.canvasHeight = f(i - ((e.top || 0) + (e.bottom || 0)), 0), n.availableHeight = f(s - ((e.top || 0) + (e.bottom || 0)), 0), n.availableWidth = f(c - ((e.left || 0) + (e.right || 0)), 0), n.canvasRight = o + l, n.canvasBottom = t + i, r && (r.canvasPaddingLeft = f(r.canvasPaddingLeft, e.paddingLeft || 0), r.canvasPaddingRight = f(r.canvasPaddingRight, e.paddingRight || 0), r.canvasPaddingTop = f(r.canvasPaddingTop, e.paddingTop || 0), r.canvasPaddingBottom = f(r.canvasPaddingBottom, e.paddingBottom || 0));\n        }, t.prototype._checkInvalidSpecificData = function () {\n          var e = this.getFromEnv(\"dataSource\").dataset,\n              t = e && e[0] && e[0].data;\n          if (!e || !t || !Array.isArray(t)) return !0;\n        }, t;\n      }(r[\"default\"]);\n\n      t[\"default\"] = N;\n    },\n    912: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o = e.getFromEnv(\"dataSource\"),\n            l = o.dataset,\n            s = o.trendset,\n            c = e.getFromEnv(\"chart-attrib\"),\n            u = e.getFromEnv(\"chartConfig\").showVolumeChart,\n            p = (0, a.pluck)((0, a.parseUnsafeString)(c.plotpriceas).toLowerCase(), \"candlestick\"),\n            h = e.getChildren(),\n            d = h.canvas[0].getChildren(\"vCanvas\")[0],\n            f = void 0,\n            g = void 0,\n            m = [\"candlestick\", \"candlestickbar\", \"candlestickline\", \"trendset\"];\n        l ? ((g = l.slice(0))[0] && g[0].data && g[0].data.sort(function (e, t) {\n          return e.x - t.x;\n        }), t = e.getDSdef(p), (0, a.datasetFactory)(d, t, \"dataset_\" + p, l.length, g), n(m, \"bar\" === p ? \"candlestickbar\" : \"line\" === p ? \"candlestickline\" : \"candlestick\"), u && (f = h.canvas[1].getChildren(\"vCanvas\")[0], (0, a.datasetFactory)(f, r.VolumeDataset, \"dataset_volume\", l.length, l)), s && ((0, a.datasetFactory)(d, r.TrendSet, \"dataset_trendset\", s.length, s), n(m, \"trendset\")), i(d, m)) : e.setChartMessage();\n      };\n\n      var a = o(125),\n          r = o(913),\n          n = function n(e, t) {\n        var o = e.indexOf(t);\n        -1 !== o && e.splice(o, 1);\n      },\n          i = function i(e, t) {\n        var o = void 0;\n        e && e.iterateComponents(function (e) {\n          for (o = 0; o < t.length; o++) {\n            e.getName() === t[o] && e.remove();\n          }\n        });\n      };\n    },\n    913: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t.TrendSet = t.VolumeDataset = t.CandleStickLineDataset = t.CandleStickBarDataset = t.CandleStickDataset = undefined;\n      var a = s(o(914)),\n          r = s(o(916)),\n          n = s(o(918)),\n          i = s(o(919)),\n          l = s(o(920));\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      t.CandleStickDataset = a[\"default\"], t.CandleStickBarDataset = r[\"default\"], t.CandleStickLineDataset = n[\"default\"], t.VolumeDataset = i[\"default\"], t.TrendSet = l[\"default\"];\n    },\n    914: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t._parseToolText = t._firePlotEvent = t.getPlotIndices = undefined;\n      var a = o(125),\n          r = s(o(833)),\n          n = o(132),\n          i = s(o(915)),\n          l = o(432);\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = a.preDefStr.colors,\n          p = u.B90000,\n          h = u.FFFFFF,\n          d = function d(e, t, o) {\n        var a,\n            r,\n            n,\n            i = this.getFromEnv(\"chart\"),\n            l = this.components.data[t],\n            s = this.config.currentToolTip,\n            c = l.graphics.element,\n            u = o.originalEvent,\n            p = i.getFromEnv(\"paper\").canvas.style,\n            h = this.getFromEnv(\"toolTipController\");\n        if (c) switch (a = (r = l.config).toolText, n = r.setLink, e) {\n          case \"fc-mouseover\":\n            a && (s ? h.draw(u, a, s) : s = this.config.currentToolTip = h.draw(u, a)), i.plotEventHandler(c, o, \"DataPlotRollOver\"), n && (p.cursor = \"pointer\");\n            break;\n\n          case \"fc-mouseout\":\n            h.hide(s), i.plotEventHandler(c, o, \"DataPlotRollOut\"), n && (p.cursor = \"default\");\n            break;\n\n          case \"fc-click\":\n            i.plotEventHandler(c, o);\n            break;\n\n          case \"fc-mousemove\":\n            a && (s ? h.draw(u, a, s) : s = this.config.currentToolTip = h.draw(u, a));\n        }\n      },\n          f = function f(e) {\n        var t,\n            o,\n            a = Math.floor(e),\n            r = Math.ceil(e),\n            n = [],\n            i = this.config.JSONData && this.config.JSONData.data;\n\n        for (t = i.length; t--;) {\n          (o = i[t]).x >= a && o.x <= r && n.push(t);\n        }\n\n        return n;\n      },\n          g = function g(e) {\n        var t,\n            o = this.config,\n            r = o.JSONData.data,\n            n = this.components.data,\n            i = this.getFromEnv(\"xAxis\"),\n            l = this.getFromEnv(\"chart-attrib\"),\n            s = \"line\" === o.plotType ? 1 : 0,\n            c = r[e],\n            u = n[e].config,\n            p = i.getLabel(u.x).label,\n            h = u.open,\n            d = u.close,\n            f = this.getFromEnv(\"yAxis\"),\n            g = u.high,\n            m = u.low,\n            v = u.volume,\n            b = void 0 !== v ? c.volumetooltext : void 0;\n        return o.showTooltip ? void 0 !== (t = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(b, c.tooltext, o.volumeToolText, o.toolText)))) ? t = (0, a.parseTooltext)(t, [3, 5, 6, 10, 54, 55, 56, 57, 58, 59, 60, 61, 81, 82], {\n          label: p,\n          yaxisName: (0, a.parseUnsafeString)(l.yaxisname),\n          xaxisName: (0, a.parseUnsafeString)(l.xaxisname),\n          openValue: c.open,\n          openDataValue: f.dataLabels(h),\n          closeValue: c.close,\n          closeDataValue: f.dataLabels(d),\n          highValue: c.high,\n          highDataValue: f.dataLabels(g),\n          lowValue: c.low,\n          lowDataValue: f.dataLabels(m),\n          volumeValue: c.volume,\n          volumeDataValue: f.dataLabels(v)\n        }, c, l) : (t = null === h || s ? \"\" : \"<b>Open:</b> \" + f.dataLabels(h) + \"<br />\", t += null !== d ? \"<b>Close:</b> \" + f.dataLabels(d) + \"<br />\" : \"\", t += null === g || s ? \"\" : \"<b>High:</b> \" + f.dataLabels(g) + \"<br />\", t += null === m || s ? \"\" : \"<b>Low:</b> \" + f.dataLabels(m) + \"<br />\", t += null !== v ? \"<b>Volume:</b> \" + f.dataLabels(v) : \"\") : t = \"\", t;\n      };\n\n      (0, n.addDep)({\n        name: \"candlestickAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var m = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return c(t, e), t.prototype.trimData = function (e) {\n          if (this.components || !this.components.data || !this.components.data.length) {\n            var t = this.components,\n                o = t && t.data,\n                a = o && o.length,\n                r = e.data,\n                n = Array.isArray(r) && r.filter(function (e) {\n              return e.high || e.open || e.close || e.low;\n            }).length || 0,\n                i = a - n;\n            i > 0 && this.removeData(n, i, !1);\n          }\n        }, t.prototype.removePlots = function () {\n          var e = this.components,\n              t = e && e.removeDataArr;\n          (0, l._removePlots)(t, this.__removeElem);\n        }, t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S = this.config,\n              A = this.getFromEnv(\"chart\"),\n              E = A.getFromEnv(\"dataSource\"),\n              D = this.config.JSONData,\n              _ = D.data || [],\n              T = E.chart,\n              L = _.length,\n              P = this.getFromEnv(\"number-formatter\"),\n              O = this.getFromEnv(\"color-manager\"),\n              V = S.bearBorderColor = (0, a.getFirstColor)((0, a.pluck)(T.bearbordercolor, p)),\n              M = S.bearFillColor = (0, a.getFirstColor)((0, a.pluck)(T.bearfillcolor, p)),\n              F = S.bullBorderColor = (0, a.getFirstColor)((0, a.pluck)(T.bullbordercolor, O.getColor(\"canvasBorderColor\"))),\n              I = S.bullFillColor = (0, a.getFirstColor)((0, a.pluck)(T.bullfillcolor, h)),\n              B = S.linethickness = S.plotBorderThickness = (0, a.pluckNumber)(T.plotlinethickness, 1),\n              R = S.plotLineDashLen = (0, a.pluckNumber)(T.plotlinedashlen, 5),\n              j = S.plotLineDashGap = (0, a.pluckNumber)(T.plotlinedashgap, 4),\n              G = -Infinity,\n              H = +Infinity,\n              W = -Infinity,\n              z = +Infinity;\n\n          for (this.setState(\"visible\", 1 === (0, a.pluckNumber)(D.visible, 1)), this._conatinerHidden = !!this.getState(\"visible\"), S.defaultPadding = {\n            left: .5,\n            right: .5\n          }, S.parentYAxis = 0, S.toolText = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(D.tooltext, T.plottooltext))), S.name = (0, a.getValidValue)(D.seriesname), S.showTooltip = (0, a.pluck)(T.showtooltip, 1), S.showShadow = (0, a.pluckNumber)(T.showshadow, O.getColor(\"showShadow\")), S.showErrorValue = !0, S.errorBarWidthPercent = 0, !0, N = (0, a.pluck)(T.maxcolwidth), S.maxColWidth = Math.abs((0, a.pluckNumber)(N, 50)) || 1, C = Math.max((0, a.pluckNumber)(T.plotspacepercent, 20) % 100, 0), S.plotSpacePercent = S.groupPadding = C / 200, x = this.components.data = this.components.data || (this.components.data = []), S.valuePadding = (0, a.pluckNumber)(D.valuepadding, T.valuepadding, 2), S.plotBorderThickness = B, i = 0; i < L; i += 1) {\n            k = _[i], (l = x[i]) || (l = x[i] = {}), !l.config && (l.config = {}), !l.graphics && (l.graphics = {}), w = l.config, k && !k.vline && (w.setLink = (0, a.pluck)(k.link), s = w.open = P.getCleanValue(k.open), c = w.close = P.getCleanValue(k.close), u = w.high = P.getCleanValue(k.high), d = w.low = P.getCleanValue(k.low), null !== (w.volume = P.getCleanValue(k.volume, !0)) && (A.config.drawVolume = !0), m = w.x = P.getCleanValue(k.x), v = w.closeVal = Math.min(s, c), y = w.yVal = Math.max(s, c), f = Math.min(s, c, u, d), g = Math.max(s, c, u, d), o = (0, a.getFirstColor)((0, a.pluck)(k.bordercolor, c < s ? V : F)), r = (0, a.pluckNumber)(k.alpha, 100), t = (0, a.getFirstColor)((0, a.pluck)(k.color, c < s ? M : I)), w.plotBorderDashStyle = (0, a.pluckNumber)(k.dashed) ? (0, a.getDashStyle)(R, j) : \"none\", n = {\n              opacity: S.showShadow ? r / 100 : 0\n            }, w.color = t, w.alpha = r, w.setColor = w.color, w.setAlpha = w.alpha, w.anchorImageUrl = (0, a.pluck)(k.anchorimageurl, D.anchorimageurl, T.anchorimageurl), b = w.borderColor = o, w.borderAlpha = w.plotLineAlpha, w.colorArr = [{\n              color: w.color,\n              alpha: w.alpha\n            }, {\n              color: w.borderColor,\n              alpha: w.borderAlpha\n            }], w.showValue = 1, w.hoverEffects = {}, w.y = Math.abs(c - s), w.previousY = v, w.link = (0, a.pluck)(k.link), w.errorValueArr = [], u - y > 0 && (w.errorValue = !0, w.errorValueArr.push({\n              errorValue: y - u,\n              errorStartValue: y,\n              errorBarColor: b,\n              errorBarThickness: B,\n              opacity: 1\n            })), d - v < 0 && (w.errorValue = !0, w.errorValueArr.push({\n              errorValue: v - d,\n              errorStartValue: v,\n              errorBarColor: b,\n              errorBarThickness: B,\n              opacity: 1\n            })), w.setValue = y, null !== f && (G = Math.max(G, f), H = Math.min(H, f)), null !== g && (G = Math.max(G, g), H = Math.min(H, g)), null !== m && (W = Math.max(W, m), z = Math.min(z, m)), m = null !== m ? m : i + 1, w._x = m, w._y = y, w._b = v, w.high = Math.max(s, c, u, d), w.low = Math.min(s, c, u, d), w.shadow = n, w.toolText = this._parseToolText(i), w.toolTipValue = \"\", w.displayValue = (0, a.parseUnsafeString)((0, a.pluck)(k.displayvalue, k.valuetext, \"\")));\n          }\n\n          S.yMax = G, S.yMin = H, S.xMax = W, S.xMin = z, this.setState(\"dirty\", !0);\n        }, t.prototype._parseToolText = function (e) {\n          return g.call(this, e);\n        }, t.prototype.calculateScrollRange = function () {\n          var e = this.config,\n              t = this.components.data && this.components.data.length;\n          e.scrollMinVal = e.scrollMinValForLabel = 0, e.scrollMaxVal = e.scrollMaxValForLabel = t;\n        }, t.prototype.getPlotIndices = function (e) {\n          return f.call(this, e);\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o, a, r, n, i;\n\n          for (o = this.getFromEnv(\"xAxis\").getValue(e), a = (n = this.getPlotIndices(o)).length - 1; a > -1 && !(r = (i = n[a]) - o > 0 ? this._checkPointerOverPlot(i, e, t) || this._checkPointerOverPlot(i - 1, e, t) : this._checkPointerOverPlot(i + 1, e, t) || this._checkPointerOverPlot(i, e, t)); a--) {\n            ;\n          }\n\n          return r;\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          d.call(this, e, t, o);\n        }, t.prototype.getDataLimits = function () {\n          var e = this.config;\n          return {\n            max: e.yMax,\n            min: e.yMin,\n            xMax: e.xMax,\n            xMin: e.xMin\n          };\n        }, t.prototype.getName = function () {\n          return \"candlestick\";\n        }, t;\n      }(r[\"default\"]);\n\n      t[\"default\"] = m, t.getPlotIndices = f, t._firePlotEvent = d, t._parseToolText = g;\n    },\n    915: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.candlestick\": function initialDatasetCandlestick() {\n          return {\n            \"rect.appearing\": function rectAppearing(e) {\n              return [{\n                initialAttr: {\n                  y: e.attr.y + e.attr.height,\n                  height: 0\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"group.appearing\": function groupAppearing(e) {\n              return \"label-group\" === e.attr.name ? [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }] : [{\n                initialAttr: {\n                  opacity: 1\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }];\n            },\n            \"*\": null\n          };\n        },\n        \"initial.dataset.volume\": function initialDatasetVolume() {\n          return {\n            \"rect.appearing\": function rectAppearing(e) {\n              return [{\n                initialAttr: {\n                  y: e.attr.y + e.attr.height,\n                  height: 0\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"*\": null\n          };\n        }\n      };\n    },\n    916: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(125),\n          r = c(o(432)),\n          n = o(833),\n          i = o(914),\n          l = o(132),\n          s = c(o(917));\n\n      function c(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = a.preDefStr.colors,\n          h = p.B90000,\n          d = p.FFFFFF,\n          f = a.preDefStr.ROUND,\n          g = a.preDefStr.visibleStr;\n      (0, l.addDep)({\n        name: \"candlestickbarAnimation\",\n        type: \"animationRule\",\n        extension: s[\"default\"]\n      });\n\n      var m = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return u(t, e), t.prototype.trimData = function (e) {\n          if (this.components || !this.components.data || !this.components.data.length) {\n            var t = this.components,\n                o = t && t.data,\n                a = o && o.length,\n                r = e.data,\n                n = Array.isArray(r) && r.filter(function (e) {\n              return e.high || e.open || e.close || e.low;\n            }).length || 0,\n                i = a - n;\n            i > 0 && this.removeData(n, i, !1);\n          }\n        }, t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C = this.config,\n              N = this.getFromEnv(\"chart\").getFromEnv(\"dataSource\"),\n              S = this.config.JSONData,\n              A = S.data || [],\n              E = N.chart,\n              D = A.length,\n              _ = this.getFromEnv(\"number-formatter\"),\n              T = this.getFromEnv(\"color-manager\"),\n              L = C.bearBorderColor = (0, a.getFirstColor)((0, a.pluck)(E.bearbordercolor, h)),\n              P = C.bearFillColor = (0, a.getFirstColor)((0, a.pluck)(E.bearfillcolor, h)),\n              O = C.bullBorderColor = (0, a.getFirstColor)((0, a.pluck)(E.bullbordercolor, T.getColor(\"canvasBorderColor\"))),\n              V = C.bullFillColor = (0, a.getFirstColor)((0, a.pluck)(E.bullfillcolor, d)),\n              M = -Infinity,\n              F = +Infinity,\n              I = -Infinity,\n              B = +Infinity;\n\n          for (this.setState(\"visible\", 1 === (0, a.pluckNumber)(S.visible, 1)), this._conatinerHidden = !!this.getState(\"visible\"), C.defaultPadding = {\n            left: .5,\n            right: .5\n          }, C.linethickness = (0, a.pluckNumber)(E.plotlinethickness, 2), C.toolText = (0, a.getValidValue)((0, a.parseUnsafeString)((0, a.pluck)(S.tooltext, E.plottooltext))), C.name = (0, a.getValidValue)(S.seriesname), C.showTooltip = (0, a.pluck)(E.showtooltip, 1), C.showErrorValue = !0, C.errorBarWidthPercent = 0, !0, k = (0, a.pluck)(E.maxcolwidth), C.maxColWidth = Math.abs((0, a.pluckNumber)(k, 50)) || 1, C.enableAnimation = w = (0, a.pluckNumber)(E.animation, E.defaultanimation, 1), C.animation = !!w && {\n            duration: 1e3 * (0, a.pluckNumber)(E.animationduration, 1)\n          }, m = C.plotLineDashLen = (0, a.pluckNumber)(E.plotlinedashlen, 5), v = C.plotLineDashGap = (0, a.pluckNumber)(E.plotlinedashgap, 4), b = this.components.data = this.components.data || (this.components.data = []), C.valuePadding = (0, a.pluckNumber)(S.valuepadding, E.valuepadding, 2), C.showShadow = (0, a.pluckNumber)(E.showshadow, T.getColor(\"showShadow\")), n = 0; n < D; n++) {\n            y = A[n], (i = b[n]) || (i = b[n] = {}), !i.config && (i.config = {}), !i.graphics && (i.graphics = {}), x = i.config, y && !y.vline && (x.setLink = (0, a.pluck)(y.link), l = x.open = _.getCleanValue(y.open), s = x.close = _.getCleanValue(y.close), c = _.getCleanValue(y.high), u = _.getCleanValue(y.low), x.volume = _.getCleanValue(y.volume, !0), g = x.x = _.getCleanValue(y.x), x.high = Math.max(l, s, c, u), x.low = Math.min(l, s, c, u), x.yVal = Math.max(l, s), p = Math.min(l, s, c, u), f = Math.max(l, s, c, u), o = (0, a.getFirstColor)((0, a.pluck)(y.bordercolor, s < l ? L : O)), r = (0, a.pluckNumber)(y.alpha, 100), t = (0, a.getFirstColor)((0, a.pluck)(y.color, s < l ? P : V)), x.color = t, x.alpha = r, x.setColor = x.color, x.setAlpha = x.alpha, x.borderColor = o, x.borderAlpha = x.plotLineAlpha, x.colorArr = [{\n              color: x.color,\n              alpha: x.alpha\n            }, {\n              color: x.borderColor,\n              alpha: x.borderAlpha\n            }], x.showValue = 1, x.hoverEffects = {}, x.link = (0, a.pluck)(y.link), x.setValue = x.y, null !== p && (M = Math.max(M, p), F = Math.min(F, p)), null !== f && (M = Math.max(M, f), F = Math.min(F, f)), null !== g && (I = Math.max(I, g), B = Math.min(B, g)), x.dashStyle = (0, a.pluckNumber)(y.dashed) ? (0, a.getDashStyle)(m, v) : \"none\", x.shadow = {\n              opacity: C.showShadow ? r / 100 : 0\n            }, g = null !== g ? g : n + 1, x.toolText = this._parseToolText(n), x.toolTipValue = \"\", x._x = g, x.y = l, x.previousY = s);\n          }\n\n          C.yMax = M, C.yMin = F, C.xMax = I, C.xMin = B, this.setState(\"dirty\", !0);\n        }, t.prototype.drawPlots = function () {\n          var e,\n              t,\n              o,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              m,\n              v,\n              b,\n              y,\n              x = this.getFromEnv(\"animationManager\"),\n              k = this.config,\n              w = this.components.data,\n              C = w.length,\n              N = this.getFromEnv(\"xAxis\"),\n              S = this.getFromEnv(\"yAxis\"),\n              A = function A(e) {\n            return function () {\n              this.shadow(e);\n            };\n          },\n              E = k.linethickness > 5 ? k.linethickness / 2 : 2.5,\n              D = this.getContainer(\"plotGroup\"),\n              _ = this.getState(\"visible\");\n\n          for (x.setAnimation({\n            el: D,\n            attr: {\n              opacity: _ ? 1 : 0\n            },\n            component: this\n          }), this.setColumnPosition(), t = this.getFromEnv(\"columnXShift\"), o = 0; o < C; o += 1) {\n            e = (r = w[o]).config, y = r.graphics, h = null, null === (l = e.y) ? h = y.element : (i = e._x, n = e.link, e.setLink = e.link, c = N.getPixel(i), s = e.previousY, p = S.getPixel(s), u = S.getPixel(l), d = S.getPixel(e.high), m = S.getPixel(e.low), v = t, r.errorBar = [], r.errorBar.push([{\n              _xPos: c - E,\n              _yPos: d,\n              _height: Math.abs(d - m),\n              _width: 2 * E\n            }, {\n              _xPos: c + v,\n              _yPos: u,\n              _height: 2 * E,\n              _width: Math.abs(v)\n            }, {\n              _xPos: c,\n              _yPos: p,\n              _height: 2 * E,\n              _width: Math.abs(v)\n            }]), b = [\"M\", c, m, \"L\", c, d, \"M\", c, u, \"L\", c + v, u, \"M\", c, p, \"L\", c - v, p], h = y.element, h = x.setAnimation({\n              el: h || \"path\",\n              container: D,\n              attr: {\n                path: b,\n                cursor: n ? \"pointer\" : \"\",\n                fill: (0, a.toRaphaelColor)(e.color),\n                stroke: (0, a.toRaphaelColor)(e.borderColor),\n                \"stroke-width\": k.linethickness,\n                \"stroke-dasharray\": e.dashStyle,\n                \"stroke-linecap\": f,\n                \"stroke-linejoin\": f,\n                \"shape-rendering\": \"crisp\",\n                visibility: g\n              },\n              label: \"path\",\n              component: this,\n              callback: A.call(h, e.shadow)\n            }), y.element = h);\n          }\n        }, t.prototype._parseToolText = function (e) {\n          return i._parseToolText.call(this, e);\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          i._firePlotEvent.call(this, e, t, o);\n        }, t.prototype._checkPointerOverColumn = function () {}, t.prototype._getHoveredPlot = function (e, t) {\n          var o, a, r, n, l;\n\n          for (o = this.getFromEnv(\"xAxis\").getValue(e), a = (n = i.getPlotIndices.call(this, o)).length - 1; a > -1 && !(r = (l = n[a]) - o > 0 ? this._checkPointerOverPlot(l, e, t) || this._checkPointerOverPlot(l - 1, e, t) : this._checkPointerOverPlot(l + 1, e, t) || this._checkPointerOverPlot(l, e, t)); a--) {\n            ;\n          }\n\n          return r;\n        }, t.prototype._checkPointerOverPlot = function (e, t, o) {\n          return n._checkPointerOverPlot.call(this, e, t, o);\n        }, t.prototype._checkPointerOverErrorBar = function (e, t, o) {\n          return n._checkPointerOverErrorBar.call(this, e, t, o);\n        }, t.prototype.drawLabel = function () {}, t.prototype.getDataLimits = function () {\n          var e = this.config;\n          return {\n            max: e.yMax,\n            min: e.yMin,\n            xMax: e.xMax,\n            xMin: e.xMin\n          };\n        }, t.prototype.getName = function () {\n          return \"candlestickbar\";\n        }, t;\n      }(r[\"default\"]);\n\n      t[\"default\"] = m;\n    },\n    917: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.candlestickbar\": function initialDatasetCandlestickbar() {\n          return {\n            \"path.appearing\": function pathAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 1,\n                  \"stroke-width\": 1\n                },\n                finalAttr: {\n                  opacity: 1\n                }\n              }];\n            },\n            \"*\": null\n          };\n        }\n      };\n    },\n    918: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(125),\n          n = o(449),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      },\n          l = o(914);\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = r.preDefStr.colors,\n          u = c.B90000,\n          p = c.FFFFFF,\n          h = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C = this.config,\n              N = this.config.JSONData,\n              S = N.data || [],\n              A = this.getFromEnv(\"chart-attrib\"),\n              E = S.length,\n              D = this.getFromEnv(\"number-formatter\"),\n              _ = this.getFromEnv(\"color-manager\"),\n              T = C.bearBorderColor = (0, r.getFirstColor)((0, r.pluck)(A.bearbordercolor, u)),\n              L = C.bearFillColor = (0, r.getFirstColor)((0, r.pluck)(A.bearfillcolor, u)),\n              P = C.bullBorderColor = (0, r.getFirstColor)((0, r.pluck)(A.bullbordercolor, _.getColor(\"canvasBorderColor\"))),\n              O = C.bullFillColor = (0, r.getFirstColor)((0, r.pluck)(A.bullfillcolor, p)),\n              V = C.linethickness = C.plotBorderThickness = (0, r.pluckNumber)(A.plotlinethickness, 2),\n              M = C.plotLineDashLen = (0, r.pluckNumber)(A.plotlinedashlen, 5),\n              F = C.plotLineDashGap = (0, r.pluckNumber)(A.plotlinedashgap, 4),\n              I = !!(0, r.pluckNumber)(A.drawanchors, 0),\n              B = (0, r.pluckNumber)(A.anchorstartangle, 90),\n              R = (0, r.pluckNumber)(A.anchorradius, this.anchorRadius, 3),\n              j = (0, r.getFirstColor)((0, r.pluck)(A.anchorbordercolor, P)),\n              G = (0, r.pluckNumber)(A.anchorborderthickness, this.anchorBorderThickness, 1),\n              H = (0, r.getFirstColor)((0, r.pluck)(A.anchorbgcolor, _.getColor(\"anchorBgColor\"))),\n              W = (0, r.pluck)(A.anchoralpha, \"0\"),\n              z = (0, r.pluck)(A.anchorbgalpha, W),\n              U = -Infinity,\n              J = +Infinity,\n              K = -Infinity,\n              q = +Infinity;\n\n          for (this.setState(\"visible\", 1 === (0, r.pluckNumber)(N.visible, 1)), this._conatinerHidden = !!this.getState(\"visible\"), C.defaultPadding = {\n            left: .5,\n            right: .5\n          }, C.plotType = \"line\", C.parentYAxis = 0, C.toolText = (0, r.getValidValue)((0, r.parseUnsafeString)((0, r.pluck)(N.tooltext, A.plottooltext))), C.name = (0, r.getValidValue)(N.seriesname), C.showTooltip = (0, r.pluck)(A.showtooltip, 1), k = (0, r.pluck)(A.maxcolwidth), C.maxColWidth = Math.abs((0, r.pluckNumber)(k, 50)) || 1, C.enableAnimation = w = (0, r.pluckNumber)(A.animation, A.defaultanimation, 1), C.animation = !!w && {\n            duration: 1e3 * (0, r.pluckNumber)(A.animationduration, 1)\n          }, C.lineAlpha = (0, r.pluck)(A.plotlinealpha, \"100\"), x = Math.max((0, r.pluckNumber)(A.plotspacepercent, 20) % 100, 0), C.plotSpacePercent = C.groupPadding = x / 200, v = this.components.data = this.components.data || (this.components.data = []), C.valuePadding = (0, r.pluckNumber)(N.valuepadding, A.valuepadding, 2), C.plotBorderThickness = V, C.showvalues = 1, C.showShadow = (0, r.pluckNumber)(A.showshadow, _.getColor(\"showShadow\")), i = 0; i < E; i += 1) {\n            b = S[i], (l = v[i]) || (l = v[i] = {}), !l.config && (l.config = {}), !l.graphics && (l.graphics = {}), y = l.config, b && !b.vline && (y.setLink = (0, r.pluck)(b.link), s = y.open = D.getCleanValue(b.open), c = y.close = D.getCleanValue(b.close), h = y.high = D.getCleanValue(b.high), d = y.low = D.getCleanValue(b.low), y.volume = D.getCleanValue(b.volume, !0), m = y.x = D.getCleanValue(b.x), y.closeVal = Math.min(s, c), y.yVal = Math.max(s, c), f = Math.min(s, c, h, d), g = Math.max(s, c, h, d), t = (0, r.getFirstColor)((0, r.pluck)(b.bordercolor, c < s ? T : P)), o = (0, r.pluck)(b.alpha, C.lineAlpha), (0, r.getFirstColor)((0, r.pluck)(b.color, c < s ? L : O)), a = (0, r.pluckNumber)(b.dashed) ? (0, r.getDashStyle)(M, F) : \"none\", y.dashStyle = a, n = {\n              opacity: C.showShadow ? o / 100 : 0\n            }, y.color = t, y.alpha = o, y.setColor = y.color, y.setAlpha = y.alpha, y.anchorImageUrl = (0, r.pluck)(b.anchorimageurl, N.anchorimageurl, A.anchorimageurl), y.borderColor = t, y.borderAlpha = y.plotLineAlpha, y.colorArr = [{\n              color: y.color,\n              alpha: y.alpha\n            }, {\n              color: y.borderColor,\n              alpha: y.borderAlpha\n            }], y.anchorSides = (0, r.pluckNumber)(b.anchorsides, N.anchorsides, A.anchorsides), y.symbol = (0, r.mapSymbolName)(y.anchorSides).split(\"_\"), y.anchorProps = {\n              enabled: I,\n              bgColor: H,\n              symbol: y.symbol,\n              bgAlpha: z * W / 100 + \"\",\n              borderColor: j,\n              borderAlpha: W,\n              anchorAlpha: W,\n              borderThickness: G,\n              imageUrl: y.anchorImageUrl,\n              radius: R,\n              imageScale: (0, r.pluckNumber)(b.imagescale, N.imagescale, A.imagescale, 100),\n              imagePadding: (0, r.pluckNumber)(b.anchorimagepadding, N.anchorimagepadding, A.anchorimagepadding, 1),\n              imageAlpha: (0, r.pluckNumber)(N.anchorimagealpha, A.anchorimagealpha, 100),\n              startAngle: B\n            }, y.showValue = b.displayvalue ? 1 : 0, y.hoverEffects = {}, y.anchorSides = (0, r.pluckNumber)(b.anchorsides, N.anchorsides, A.anchorsides), y.symbol = (0, r.mapSymbolName)(y.anchorSides).split(\"_\"), y.hoverEffects = {}, y.y = c, y.link = (0, r.pluck)(b.link), y.toolText = this._parseToolText(i), y.toolTipValue = \"\", y.setValue = y._y = y.y, y.displayValue = (0, r.parseUnsafeString)((0, r.pluck)(b.displayvalue, b.valuetext, \"\")), null !== f && (U = Math.max(U, f), J = Math.min(J, f)), null !== g && (U = Math.max(U, g), J = Math.min(J, g)), null !== m && (K = Math.max(K, m), q = Math.min(q, m)), m = m || i + 1, y._x = y.x = m, y.high = Math.max(s, c, h, d), y.low = Math.min(s, c, h, d), y.shadow = n);\n          }\n\n          C.yMax = U, C.yMin = J, C.xMax = K, C.xMin = q, this.setState(\"dirty\", !0);\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this), this.config.drawLine = 1;\n        }, t.prototype.trimData = function (e) {\n          if (this.components || !this.components.data || !this.components.data.length) {\n            var t = this.components,\n                o = t && t.data,\n                a = o && o.length,\n                r = e.data,\n                n = Array.isArray(r) && r.filter(function (e) {\n              return e.high || e.open || e.close || e.low;\n            }).length || 0,\n                i = a - n;\n            i > 0 && this.removeData(n, i, !1);\n          }\n        }, t.prototype.calculateScrollRange = function () {\n          var e = this.config,\n              t = this.components.data && this.components.data.length;\n          e.scrollMinVal = e.scrollMinValForLabel = 0, e.scrollMaxVal = e.scrollMaxValForLabel = t;\n        }, t.prototype.getDataLimits = function () {\n          var e = this.config;\n          return {\n            max: e.yMax,\n            min: e.yMin,\n            xMax: e.xMax,\n            xMin: e.xMin\n          };\n        }, t.prototype.getPlotIndices = function (e) {\n          var t,\n              o,\n              a = Math.floor(e),\n              r = Math.ceil(e),\n              n = [],\n              i = this.config.JSONData && this.config.JSONData.data;\n\n          for (t = i.length; t--;) {\n            (o = i[t]).x >= a && o.x <= r && n.push(t);\n          }\n\n          return n;\n        }, t.prototype._parseToolText = function (e) {\n          return l._parseToolText.call(this, e);\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s = this.getFromEnv(\"xAxis\"),\n              c = this.components.data,\n              u = c.length,\n              p = this.config,\n              h = p && p.radius || 0;\n          e += s.getTranslation();\n          var d = (r = (a = this.getPlotIndices(Math.floor(Math.max(s.getValue(e - h), 0))))[0]) > (n = (a = this.getPlotIndices(Math.ceil(Math.min(s.getValue(e + h), u - 1))))[a.length - 1]) ? [n, r] : [r, n];\n\n          for (r = d[0], l = n = d[1]; l >= r && (!(o = c[l]) || !(i = this.isWithinShape(o, l, e, t))); l--) {\n            ;\n          }\n\n          return i;\n        }, t.prototype.getName = function () {\n          return \"candlestickline\";\n        }, t;\n      }(i[\"default\"]);\n\n      t[\"default\"] = h;\n    },\n    919: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(432),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      },\n          i = o(125),\n          l = o(914);\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = i.preDefStr.colors,\n          u = c.B90000,\n          p = c.FFFFFF,\n          h = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              a,\n              r,\n              n,\n              l,\n              s,\n              c,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w = this.config,\n              C = this.config.JSONData,\n              N = C.data || [],\n              S = this.getFromEnv(\"chart-attrib\"),\n              A = this.getFromEnv(\"chartConfig\"),\n              E = N.length,\n              D = this.getFromEnv(\"color-manager\"),\n              _ = w.bearBorderColor = (0, i.getFirstColor)((0, i.pluck)(S.bearbordercolor, A.vplotbordercolor, u)),\n              T = w.bearFillColor = (0, i.getFirstColor)((0, i.pluck)(S.bearfillcolor, u)),\n              L = w.bullBorderColor = (0, i.getFirstColor)((0, i.pluck)(S.bullbordercolor, A.vplotbordercolor, D.getColor(\"canvasBorderColor\"))),\n              P = w.bullFillColor = (0, i.getFirstColor)((0, i.pluck)(S.bullfillcolor, p)),\n              O = (0, i.pluckNumber)(A.showplotborder, 1) ? (0, i.pluckNumber)(S.vplotborderthickness, 1) : 0,\n              V = this.getFromEnv(\"number-formatter\"),\n              M = -Infinity,\n              F = +Infinity,\n              I = -Infinity,\n              B = +Infinity,\n              R = this.getFromEnv(\"number-formatter\");\n\n          for (this.setState(\"visible\", 1 === (0, i.pluckNumber)(C.visible, 1)), !0 === this.getState(\"visible\") ? this._conatinerHidden = !1 : this._containerHidden = !0, w.parentYAxis = 1, w.volumeToolText = (0, i.getValidValue)((0, i.parseUnsafeString)((0, i.pluck)(C.volumetooltext, S.volumetooltext, S.plottooltext))), w.name = (0, i.getValidValue)(C.seriesname), w.showTooltip = (0, i.pluck)(S.showtooltip, 1), w.showShadow = (0, i.pluckNumber)(S.showshadow, D.getColor(\"showShadow\")), k = (0, i.pluck)(S.maxcolwidth), w.maxColWidth = Math.abs((0, i.pluckNumber)(k, 50)) || 1, x = Math.max((0, i.pluckNumber)(S.plotspacepercent, 20) % 100, 0), w.plotSpacePercent = w.groupPadding = x / 200, w.plotborderthickness = O, v = this.components.data = this.components.data || (this.components.data = []), f = (0, i.extend2)((0, i.extend2)({}, S), {\n            sforcedecimals: (0, i.getFirstValue)(S.forcevdecimals, S.forcedecimals),\n            sforceyaxisvaluedecimals: (0, i.getFirstValue)(S.forcevyaxisvaluedecimals, S.forceyaxisvaluedecimals),\n            syaxisvaluedecimals: (0, i.getFirstValue)(S.vyaxisvaluedecimals, S.yaxisvaluedecimals),\n            sformatnumber: (0, i.getFirstValue)(S.vformatnumber, S.formatnumber),\n            sformatnumberscale: (0, i.getFirstValue)(S.vformatnumberscale, S.formatnumberscale, \"1\"),\n            sdefaultnumberscale: (0, i.getFirstValue)(S.vdefaultnumberscale, S.defaultnumberscale),\n            snumberscaleunit: (0, i.getFirstValue)(S.vnumberscaleunit, S.numberscaleunit),\n            vnumberscalevalue: (0, i.getFirstValue)(S.vnumberscalevalue, S.numberscalevalue),\n            sscalerecursively: (0, i.getFirstValue)(S.vscalerecursively, S.scalerecursively),\n            smaxscalerecursion: (0, i.getFirstValue)(S.vmaxscalerecursion, S.maxscalerecursion),\n            sscaleseparator: (0, i.getFirstValue)(S.vscaleseparator, S.scaleseparator),\n            snumberprefix: (0, i.getFirstValue)(S.vnumberprefix, S.numberprefix),\n            snumbersuffix: (0, i.getFirstValue)(S.vnumbersuffix, S.numbersuffix),\n            sdecimals: (0, i.getFirstValue)(S.vdecimals, S.decimals)\n          }), g = w.plotLineDashLen = (0, i.pluckNumber)(S.plotlinedashlen, 5), m = w.plotLineDashGap = (0, i.pluckNumber)(S.plotlinedashgap, 4), R.configure(f), r = 0; r < E; r += 1) {\n            b = N[r], (n = v[r]) || (n = v[r] = {}), !n.config && (n.config = {}), !n.graphics && (n.graphics = {}), y = n.config, b && !b.vline && (l = y.open = V.getCleanValue(b.open), s = y.close = V.getCleanValue(b.close), c = y.volume = V.getCleanValue(b.volume, !0), y.high = V.getCleanValue(b.high), y.low = V.getCleanValue(b.low), h = y.x = V.getCleanValue(b.x), M = Math.max(M, c), F = Math.min(F, c), I = Math.max(I, h), B = Math.min(B, h), y.borderColor = (0, i.getFirstColor)((0, i.pluck)(b.bordercolor, s < l ? _ : L)), o = (0, i.pluckNumber)(b.alpha, 100), d = (0, i.pluckNumber)(A.vplotborderalpha, b.alpha, 100), t = (0, i.getFirstColor)((0, i.pluck)(b.color, s < l ? T : P)), a = {\n              opacity: w.showShadow ? o / 100 : 0\n            }, y.color = t, y.alpha = o, y.setLink = b.link, y.borderWidth = O, y.borderAlpha = d, y.y = c, y.colorArr = [{\n              color: y.color,\n              alpha: y.alpha\n            }, {\n              color: y.borderColor,\n              alpha: y.borderAlpha\n            }], y.toolText = this._parseToolText(r), y.toolTipValue = \"\", y.setValue = y._y = y.y, y.plotBorderDashStyle = (0, i.pluckNumber)(b.dashed) ? (0, i.getDashStyle)(g, m) : \"none\", h = null !== h ? h : r + 1, y._x = h, y.shadow = a);\n          }\n\n          w.defaultPadding = {\n            left: 0,\n            right: 0\n          }, w.yMax = M, w.yMin = F, w.xMax = I, w.xMin = B, this.setState(\"dirty\", !0);\n        }, t.prototype._parseToolText = function (e) {\n          return l._parseToolText.call(this, e);\n        }, t.prototype.getPlotIndices = function (e) {\n          var t,\n              o,\n              a = Math.floor(e),\n              r = Math.ceil(e),\n              n = [],\n              i = this.config.JSONData && this.config.JSONData.data;\n\n          for (t = i.length; t--;) {\n            (o = i[t]).x >= a && o.x <= r && n.push(t);\n          }\n\n          return n;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i,\n              l = this.getFromEnv(\"xAxis\");\n\n          for (e += l.getTranslation(), o = l.getValue(e), a = (n = this.getPlotIndices(o)).length - 1; a > -1 && !(r = (i = n[a]) - o > 0 ? this._checkPointerOverColumn(i, e, t) || this._checkPointerOverColumn(i - 1, e, t) : this._checkPointerOverColumn(i + 1, e, t) || this._checkPointerOverColumn(i, e, t)); a--) {\n            ;\n          }\n\n          return r;\n        }, t.prototype.getDataLimits = function () {\n          var e = this.config;\n          return {\n            max: e.yMax,\n            min: e.yMin,\n            xMax: e.xMax,\n            xMin: e.xMin\n          };\n        }, t.prototype.calculateScrollRange = function () {\n          var e = this.config,\n              t = this.components.data && this.components.data.length;\n          e.scrollMinVal = 0, e.scrollMaxVal = t, e.scrollMinValForLabel = e.scrollMinVal, e.scrollMaxValForLabel = e.scrollMaxVal;\n        }, t.prototype.drawLabel = function () {}, t.prototype.getName = function () {\n          return \"volume\";\n        }, t;\n      }(n[\"default\"]);\n\n      t[\"default\"] = h;\n    },\n    920: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(449)),\n          r = o(125),\n          n = o(132),\n          i = l(o(921));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      (0, n.addDep)({\n        name: \"trendsetAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var c = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this), this.config.drawLine = 1;\n        }, t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n          var t,\n              o,\n              a,\n              n,\n              i,\n              l,\n              s = this.getFromEnv(\"chart-attrib\"),\n              c = this.getFromEnv(\"chartConfig\"),\n              u = this.config.JSONData,\n              p = this.index,\n              h = u.data || u.set || [],\n              d = this.config,\n              f = this.components.data,\n              g = -Infinity,\n              m = +Infinity,\n              v = -Infinity,\n              b = +Infinity,\n              y = this.getFromEnv(\"number-formatter\"),\n              x = (0, r.getFirstColor)((0, r.pluck)(u.color, s.trendsetcolor, \"666666\")),\n              k = (0, r.pluck)(u.alpha, s.trendsetalpha, \"100\"),\n              w = (0, r.pluckNumber)(u.thickness, s.trendsetthickness, 2),\n              C = Boolean((0, r.pluckNumber)(u.dashed, s.trendsetdashed, 0)),\n              N = (0, r.pluckNumber)(u.dashlen, s.trendsetdashlen, 4),\n              S = (0, r.pluckNumber)(u.dashgap, s.trendsetdashgap, 4);\n\n          for (d.includeInLegend = (0, r.pluckNumber)(u.includeinlegend, 1), d.lineColor = x, d.lineAlpha = k, d.connectNullData = (0, r.pluckNumber)(s.connectnulldata, 0), d.linethickness = w, d.lineDashStyle = C ? (0, r.getDashStyle)(N, S) : \"none\", d.name = (0, r.getValidValue)(u.name), d.includeInLegend = (0, r.pluckNumber)(u.includeinlegend, 1), d.defaultPadding = {\n            left: .5,\n            right: .5\n          }, f || (f = this.components.data = []), p = 0, l = h.length; p < l; p += 1) {\n            (t = h[p]) && !t.vline && (o = (n = (a = f[p] = f[p] || (f[p] = {})).config = a.config || (a.config = {}))._y = n.setValue = y.getCleanValue(t.value), n.setColor = d.lineColor, n.setAlpha = d.lineAlpha, i = y.getCleanValue(t.x), i = n._x = n.x = null !== i ? i : p + 1, g = Math.max(g, o), m = Math.min(m, o), b = Math.min(b, i), v = Math.max(v, i), n.anchorProps = this._parseAnchorProperties(p), n.hoverEffects = {}, a.graphics || (a.graphics = {}));\n          }\n\n          d.max = g, d.min = m, d.xMax = v, d.xMin = b, c.showLegend && this._addLegend(), this.setState(\"visible\", !0), this.setState(\"dirty\", !0);\n        }, t.prototype._addLegend = function () {\n          var e,\n              t = this.config.JSONData,\n              o = this.config,\n              a = this.getFromEnv(\"legend\"),\n              n = {\n            enabled: o.includeInLegend,\n            interactiveLegend: !1,\n            type: this.type,\n            drawLine: !0,\n            label: (0, r.getFirstValue)(t.name)\n          };\n          o.includeinlegend ? ((e = a.getItem(this.config.legendItemId)) ? e.configure({\n            style: a.config.itemStyle,\n            hiddenStyle: a.config.itemHiddenStyle,\n            datasetVisible: a.config.datasetVisible,\n            hoverStyle: a.config.itemHoverStyle\n          }) : (this.config.legendItemId = a.createItem(this), e = a.getItem(this.config.legendItemId)), e.configure(n), e.setStateCosmetics(\"default\", {\n            symbol: {\n              stroke: (0, r.toRaphaelColor)({\n                color: o.lineColor,\n                alpha: \"100\"\n              }),\n              rawFillColor: o.lineColor\n            }\n          })) : this.config.legendItemId && a.disposeItem(this.config.legendItemId);\n        }, t.prototype.getDataLimits = function () {\n          var e = this.config;\n          return {\n            max: e.max,\n            min: e.min,\n            xMax: e.xMax,\n            xMin: e.xMin\n          };\n        }, t.prototype.getType = function () {\n          return \"trendset\";\n        }, t.prototype.drawLabel = function () {}, t.prototype.getName = function () {\n          return \"trendset\";\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = c;\n    },\n    921: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(452),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.trendset.trendset\": n[\"default\"][\"initial.dataset.line\"]\n      };\n    },\n    922: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o = e.getChildren(\"canvas\"),\n            a = o[0],\n            n = o[1],\n            l = e.config.showVolumeChart,\n            s = {\n          zoomable: !0,\n          pannable: !0\n        },\n            c = a.getChildren(\"axisRefVisualCartesian\")[0],\n            u = void 0,\n            p = void 0,\n            h = void 0,\n            d = void 0,\n            f = function f() {\n          return c.asyncDraw();\n        },\n            g = function g() {\n          return u.asyncDraw();\n        };\n\n        t = e._feedAxesRawData(), (0, r.componentFactory)(e, i[\"default\"], \"yAxis\", l ? 2 : 1, t.yAxisConfigure), (0, r.componentFactory)(e, i[\"default\"], \"xAxis\", 1, t.xAxisConfigure), h = e.getChildren(\"yAxis\")[0], p = e.getChildren(\"yAxis\")[1], h.setAxisConfig({\n          relativeAxis: p\n        }), p && p.setAxisConfig({\n          relativeAxis: h\n        }), d = e.getChildren(\"xAxis\")[0], h.setLinkedItem(\"canvas\", a), d.setLinkedItem(\"canvas\", a), c.setLinkedItem(h.getId(), h), c.setLinkedItem(d.getId(), d), c.addExtEventListener(\"visiblerangeset\", f, h), c.addExtEventListener(\"visiblerangeset\", f, d), a.attachAxis(d, !1, e.zoomX ? s : {}), a.attachAxis(h, !0, e.zoomY ? s : {}), l && (u = n.getChildren(\"axisRefVisualCartesian\")[0], n.attachAxis(d, !1, e.zoomX ? s : {}), p.setLinkedItem(\"canvas\", n), u.setLinkedItem(p.getId(), p), u.setLinkedItem(d.getId(), d), u.addExtEventListener(\"visiblerangeset\", g, p), u.addExtEventListener(\"visiblerangeset\", g, d), n.attachAxis(p, !0, e.zoomY ? s : {})), e._setCategories();\n      };\n      var a,\n          r = o(125),\n          n = o(377),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      };\n    },\n    923: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(924),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    924: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(518)),\n          r = s(o(925)),\n          n = s(o(929)),\n          i = o(125),\n          l = s(o(930));\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      i.setAttribDefs && (0, i.setAttribDefs)({\n        whiskerslimitswidthratio: {\n          type: i.attrTypeNum,\n          pAttr: \"whiskerslimitswidthratio\"\n        },\n        outliersupperrangeratio: {\n          type: i.attrTypeNum,\n          pAttr: \"outliersupperrangeratio\"\n        },\n        outlierslowerrangeratio: {\n          type: i.attrTypeNum,\n          pAttr: \"outlierslowerrangeratio\"\n        },\n        showalloutliers: {\n          type: i.attrTypeNum,\n          pAttr: \"showalloutliers\"\n        },\n        showmean: {\n          type: i.attrTypeNum,\n          pAttr: \"showmean\"\n        },\n        showsd: {\n          type: i.attrTypeNum,\n          pAttr: \"showsd\"\n        },\n        showmd: {\n          type: i.attrTypeNum,\n          pAttr: \"showmd\"\n        },\n        showqd: {\n          type: i.attrTypeNum,\n          pAttr: \"showqd\"\n        },\n        showminvalues: {\n          type: i.attrTypeNum,\n          pAttr: \"showminvalues\"\n        },\n        showmaxvalues: {\n          type: i.attrTypeNum,\n          pAttr: \"showmaxvalues\"\n        },\n        showq1values: {\n          type: i.attrTypeNum,\n          pAttr: \"showq1values\"\n        },\n        showq3values: {\n          type: i.attrTypeNum,\n          pAttr: \"showq3values\"\n        },\n        showmedianvalues: {\n          type: i.attrTypeNum,\n          pAttr: \"showmedianvalues\"\n        }\n      });\n\n      var u = i.preDefStr.POLYGON,\n          p = i.preDefStr.colors.c000000,\n          h = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this)),\n              a = o;\n\n          return a.maxColWidth = +Infinity, a.useErrorAnimation = 1, a.avoidCrispError = 0, a.plotSpacePercent = 20, a.useplotgradientcolor = 1, a.fireGroupEvent = !0, o.registerFactory(\"dataset\", l[\"default\"], [\"vCanvas\"]), o;\n        }\n\n        return c(t, e), t.getName = function () {\n          return \"BoxAndWhisker2D\";\n        }, t.prototype.getName = function () {\n          return \"BoxAndWhisker2D\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.decimals = 2, t.friendlyName = \"Box and Whisker iapi\", t.defaultDatasetType = \"boxandwhisker2d\", t.showplotborder = 1, t.plotborderdashlen = 5, t.plotborderdashgap = 4, t.plotfillalpha = i.HUNDREDSTRING, t.useroundedges = 0, t.plotborderthickness = 1, t.showvalues = 1, t.valuepadding = 2, t.decimals = 2, t.showtooltip = 1, t.maxcolwidth = 50, t.rotatevalues = 0, t.use3dlighting = 1, t.whiskerslimitswidthratio = 40, t.outliersupperrangeratio = 0, t.outlierslowerrangeratio = 0, t.showalloutliers = 0, t.showmean = 0, t.showsd = 0, t.showmd = 0, t.showqd = 0, t.showminvalues = 1, t.showmaxvalues = 1, t.showq1values = 0, t.showq3values = 0, t.showmedianvalues = 1, t.tooltipsepchar = \": \", t.anchorborderthickness = 1, t.anchorimageurl = void 0, t.anchorimagepadding = 1, t.anchorsides = 1, t.anchoralpha = void 0, t.anchorbgalpha = i.HUNDREDSTRING, t.anchorimagealpha = i.HUNDREDSTRING, t.anchorimagescale = 100, t.anchorstartangle = 90, t.anchorshadow = 0, t.anchorbgcolor = void 0, t.anchorbordercolor = void 0, t.anchorradius = 3, t.linedashlen = 5, t.linedashgap = 4, t.linedashed = void 0, t.linealpha = i.HUNDREDSTRING, t.linethickness = 2, t.drawfullareaborder = 1, t.connectnulldata = 0;\n        }, t.prototype._getLineJSONdata = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              l,\n              s,\n              c,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C = this.getChildren(\"BoxAndWhiskerStatisticalCalc\")[0],\n              N = this.getFromEnv(\"dataSource\"),\n              S = N.chart,\n              A = N.dataset,\n              E = A.length,\n              D = [],\n              _ = [],\n              T = [],\n              L = function L(e) {\n            y = Number(e);\n            var t = (0, i.extent)(C.values);\n            v = t[0], b = t[1], (y < v || y > b) && m.push({\n              value: y,\n              index: x,\n              anchorbgcolor: r.outliericoncolor,\n              anchorradius: r.outliericonradius,\n              anchoralpha: r.outliericonalpha,\n              anchorbgalpha: r.outliericonalpha,\n              anchorsides: r.outliericonsides,\n              dip: r.outliericonshape\n            });\n          };\n\n          for (w = 0; w < E; w++) {\n            for (t = A[w], c = _[w] = {}, l = T[w] = {\n              showMean: {\n                seriesname: \"Mean\",\n                showvalues: 0,\n                anchorbgcolor: (0, i.pluck)(t.meaniconcolor, S.meaniconcolor, p),\n                anchorbordercolor: p,\n                anchorradius: (0, i.pluckNumber)(t.meaniconradius, S.meaniconradius, 5),\n                anchoralpha: (0, i.pluck)(t.alpha, t.meaniconalpha, S.meaniconalpha),\n                linethickness: (0, i.pluck)(t.linethickness, S.linethickness, 1),\n                anchorsides: (0, i.pluck)(t.meaniconsides, S.meaniconsides, 3),\n                showline: !(0, i.pluckNumber)(t.drawmeanconnector, S.drawmeanconnector),\n                dip: (0, i.pluck)(t.meaniconshape, S.meaniconshape, u),\n                color: (0, i.pluck)(t.meaniconcolor, S.meaniconcolor, p),\n                data: []\n              },\n              showSD: {\n                seriesname: \"SD\",\n                showvalues: 0,\n                anchorbgcolor: (0, i.pluck)(t.sdiconcolor, S.sdiconcolor, p),\n                anchorbordercolor: p,\n                anchorradius: (0, i.pluckNumber)(t.sdiconradius, S.sdiconradius, 5),\n                anchoralpha: (0, i.pluck)(t.alpha, t.sdiconalpha, S.sdiconalpha),\n                anchorbgalpha: (0, i.pluck)(t.sdiconalpha, S.sdiconalpha, 100),\n                linethickness: (0, i.pluck)(t.linethickness, S.linethickness, 1),\n                anchorsides: (0, i.pluck)(t.sdiconsides, S.sdiconsides, 3),\n                showline: !(0, i.pluckNumber)(t.drawsdconnector, S.drawsdconnector),\n                dip: (0, i.pluck)(t.sdiconshape, S.sdiconshape, u),\n                color: (0, i.pluck)(t.sdiconcolor, S.sdiconcolor, p),\n                data: []\n              },\n              showQD: {\n                seriesname: \"QD\",\n                showvalues: 0,\n                anchorbgcolor: (0, i.pluck)(t.qdiconcolor, S.qdiconcolor, p),\n                anchorbordercolor: p,\n                anchorradius: (0, i.pluckNumber)(t.qdiconradius, S.qdiconradius, 5),\n                anchoralpha: (0, i.pluck)(t.alpha, t.qdiconalpha, S.qdiconalpha),\n                anchorbgalpha: (0, i.pluck)(t.qdiconalpha, S.qdiconalpha, 100),\n                linethickness: (0, i.pluck)(t.linethickness, S.linethickness, 1),\n                anchorsides: (0, i.pluck)(t.qdiconsides, S.qdiconsides, 3),\n                showline: !(0, i.pluckNumber)(t.drawqdconnector, S.drawqdconnector),\n                dip: (0, i.pluck)(t.qdiconshape, S.qdiconshape, u),\n                color: (0, i.pluck)(t.qdiconcolor, S.qdiconcolor, p),\n                data: []\n              },\n              showMD: {\n                seriesname: \"MD\",\n                showvalues: 0,\n                anchorbgcolor: (0, i.pluck)(t.mdiconcolor, S.mdiconcolor, p),\n                anchorbordercolor: p,\n                anchorradius: (0, i.pluckNumber)(t.mdiconradius, S.mdiconradius, 5),\n                anchoralpha: (0, i.pluck)(t.alpha, t.mdiconalpha, S.mdiconalpha),\n                anchorbgalpha: (0, i.pluck)(t.mdiconalpha, S.mdiconalpha, 100),\n                linethickness: (0, i.pluck)(t.linethickness, S.linethickness, 1),\n                anchorsides: (0, i.pluck)(t.mdiconsides, S.mdiconsides, 3),\n                showline: !(0, i.pluckNumber)(t.drawmdconnector, S.drawmdconnector),\n                dip: (0, i.pluck)(t.mdiconshape, S.mdiconshape, u),\n                color: (0, i.pluck)(t.mdiconcolor, S.mdiconcolor, p),\n                data: []\n              },\n              outliers: {\n                seriesname: \"Outliers\",\n                showvalues: 0,\n                anchorbgcolor: (0, i.pluck)(t.outliericoncolor, S.outliericoncolor, p),\n                anchorbordercolor: p,\n                anchorradius: (0, i.pluckNumber)(t.outliericonradius, S.outliericonradius, 5),\n                anchoralpha: (0, i.pluck)(t.alpha, t.outliericonalpha, S.outliericonalpha),\n                includeinlegend: t.seriesname ? 1 : 0,\n                anchorbgalpha: (0, i.pluck)(t.outliericonalpha, S.outliericonalpha, 100),\n                linethickness: (0, i.pluck)(t.linethickness, S.linethickness, 1),\n                anchorsides: (0, i.pluck)(t.outliericonsides, S.outliericonsides, 3),\n                showline: !(0, i.pluckNumber)(t.drawoutliersconnector, S.drawoutliersconnector),\n                color: (0, i.pluck)(t.outliericoncolor, S.outliericoncolor, p),\n                dip: (0, i.pluck)(t.outliericonshape, S.outliericonshape, u),\n                data: []\n              }\n            }, e = (0, i.pluckNumber)(t.showmean, S.showmean, 0), h = (0, i.pluckNumber)(t.showsd, S.showsd, 0), d = (0, i.pluckNumber)(t.showqd, S.showqd, 0), f = (0, i.pluckNumber)(t.showmd, S.showmd, 0), a = (o = t.data) && o.length || 0, x = 0; x < a; x++) {\n              r = o[x], C.setArray(r.value), C.getQuartiles(), g = r.outliers, e = c.showMean = c.showMean || (0, i.pluckNumber)(r.showmean, e), h = c.showSD = c.showSD || (0, i.pluckNumber)(r.showsd, h), d = c.showQD = c.showQD || (0, i.pluckNumber)(r.showqd, d), f = c.showMD = c.showMD || (0, i.pluckNumber)(r.showmd, f), l.showMean.data.push({\n                value: e && C.getMean(),\n                anchorbgcolor: r.meaniconcolor,\n                anchorradius: r.meaniconradius,\n                anchoralpha: r.meaniconalpha,\n                anchorbgalpha: r.meaniconalpha,\n                anchorsides: r.meaniconsides,\n                dip: r.meaniconshape\n              }), l.showSD.data.push({\n                value: h && C.getSD(),\n                anchorbgcolor: r.sdiconcolor,\n                anchorradius: r.sdiconradius,\n                anchoralpha: r.sdiconalpha,\n                anchorbgalpha: r.sdiconalpha,\n                anchorsides: r.sdiconsides,\n                dip: r.sdiconshape\n              }), l.showQD.data.push({\n                value: d && C.getQD(),\n                anchorbgcolor: r.qdiconcolor,\n                anchorradius: r.qdiconradius,\n                anchoralpha: r.qdiconalpha,\n                anchorbgalpha: r.qdiconalpha,\n                anchorsides: r.qdiconsides,\n                dip: r.qdiconshape\n              }), l.showMD.data.push({\n                value: f && C.getMD(),\n                anchorbgcolor: r.mdiconcolor,\n                anchorradius: r.mdiconradius,\n                anchoralpha: r.mdiconalpha,\n                anchorbgalpha: r.mdiconalpha,\n                anchorsides: r.mdiconsides,\n                dip: r.mdiconshape\n              }), g && (m = l.outliers.data, g.split(i.COMMA).forEach(L), c.outliers = !0);\n            }\n          }\n\n          for (s = _.length, k = 0; k < s; k++) {\n            for (w in c = _[k], n = D[k] = [], c) {\n              c[w] && n.push(T[k][w]);\n            }\n          }\n\n          return D;\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSGroupdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = h;\n    },\n    925: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(432)),\n          r = s(o(926)),\n          n = o(125),\n          i = o(132),\n          l = s(o(928));\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = n.preDefStr.colors.c000000,\n          p = n.preDefStr.LABEL,\n          h = n.preDefStr.UNDERSCORE,\n          d = n.preDefStr.POINTER,\n          f = n.preDefStr.BLANK,\n          g = n.preDefStr.ROUND,\n          m = n.preDefStr.GROUPID,\n          v = n.preDefStr.POSITION_START,\n          b = n.preDefStr.POSITION_BOTTOM,\n          y = n.preDefStr.POSITION_TOP,\n          x = n.preDefStr.showHoverEffectStr,\n          k = n.preDefStr.EVENTARGS,\n          w = n.preDefStr.POSITION_END,\n          C = \"M\",\n          N = \"H\",\n          S = \"V\",\n          A = n.preDefStr.pStr,\n          E = n.preDefStr.sStr,\n          D = function D(e, t, o) {\n        return o.getFromEnv(\"animationManager\").setAnimation({\n          el: \"group\",\n          attr: e,\n          container: t,\n          component: o,\n          label: \"group\"\n        });\n      },\n          _ = function _() {\n        return function () {\n          this.hide();\n        };\n      };\n\n      (0, i.addDep)({\n        name: \"boxandwhisker2dAnimation\",\n        type: \"animationRule\",\n        extension: l[\"default\"]\n      });\n\n      var T = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return c(t, e), t.prototype.createContainer = function () {\n          var e,\n              t,\n              o = this.type,\n              a = this.groupName,\n              r = this.getLinkedParent(),\n              n = a || this.dsGroup || o;\n          !r.getChildContainer(n + \"VcanvasGroup\") && (n = \"default\"), e = r.getChildContainer(n + \"VcanvasGroup\"), t = r.getChildContainer(n + \"ShadowVcanvasGroup\"), !this.getContainer(\"shadowGroup\") && this.addContainer(\"shadowGroup\", D({\n            name: \"shadow-group\"\n          }, t, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"lowerBoxGroup\", D({\n            name: \"lower-box-group\"\n          }, e, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"upperBoxGroup\", D({\n            name: \"upper-box-group\"\n          }, e, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"upperWhiskerGroup\", D({\n            name: \"upper-whisker-group\"\n          }, e, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"lowerWhiskerGroup\", D({\n            name: \"lower-whisker-group\"\n          }, e, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"medianGroup\", D({\n            name: \"median-group\"\n          }, e, this)), !this.getContainer(\"labelGroup\") && this.addContainer(\"labelGroup\", D({\n            name: \"label-group\",\n            \"class\": \"fusioncharts-datalabels\"\n          }, r.getChildContainer(\"vcanvasLabelGroup\"), this));\n        }, t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H,\n              W,\n              z,\n              U,\n              J,\n              K,\n              q,\n              Y,\n              X,\n              Q,\n              Z,\n              $,\n              ee,\n              te,\n              oe,\n              ae,\n              re,\n              ne,\n              ie,\n              le,\n              se,\n              ce,\n              ue,\n              pe,\n              he,\n              de,\n              fe,\n              ge,\n              me,\n              ve,\n              be,\n              ye,\n              xe,\n              ke,\n              we = this.config,\n              Ce = this.config.JSONData,\n              Ne = Ce.data,\n              Se = Ne && Ne.length,\n              Ae = this.getFromEnv(\"chartConfig\"),\n              Ee = this.getFromEnv(\"xAxis\"),\n              De = Ee.getTicksLen(),\n              _e = Math.min(De, Se),\n              Te = this.getFromEnv(\"chart-attrib\"),\n              Le = this.getFromEnv(\"color-manager\"),\n              Pe = we.index,\n              Oe = we.plotColor = Le.getPlotColor(Pe),\n              Ve = (0, n.pluckNumber)(Ce.dashed, Te.plotborderdashed),\n              Me = Ae.useplotgradientcolor,\n              Fe = Ae.yaxisname,\n              Ie = Ae.xaxisname,\n              Be = (0, n.parseUnsafeString)((0, n.pluck)(Te.tooltipsepchar, \": \")),\n              Re = this.components.data,\n              je = this.getFromEnv(\"number-formatter\"),\n              Ge = -Infinity,\n              He = +Infinity,\n              We = this.getFromEnv(\"BoxAndWhiskerStatisticalCalc\");\n\n          for (this.setState(\"visible\", !(1 !== (0, n.pluckNumber)(this.config.JSONData.visible, !Number(this.config.JSONData.initiallyhidden), 1))), (0, n.parseConfiguration)(Ce, we, Ae, {\n            data: !0\n          }), we.defaultPadding = {\n            left: .5,\n            right: .5\n          }, we.seriesname = (0, n.parseUnsafeString)(Ce.seriesname), we.includeInLegend = (0, n.pluckNumber)(Ce.includeinlegend, we.seriesname ? 1 : 0), we.legendSymbolColor = we.plotColor, t = we.showplotborder, u = we.plotborderdashlen, p = we.plotborderdashgap, m = we.plotfillalpha, d = we.useroundedges, v = we.ratio, h = we.plotborderthickness, ve = we.showvalues = (0, n.pluckNumber)(Ce.showvalues, Te.showvalues, 1), o = we.showtooltip, we.rotatevalues && (we.rotatevalues = 270), be = we.showalloutliers, we.plotfillAngle = g = (0, n.pluckNumber)(360 - Te.plotfillangle, 90), we.plotColor = Oe = (0, n.pluck)(Ce.color, Oe), we.plotRadius = (0, n.pluckNumber)(Te.useroundedges, d ? 1 : 0), we.plotgradientcolor = b = (0, n.getDefinedColor)(Te.plotgradientcolor, Le.getColor(\"plotGradientColor\")), !Me && (b = n.BLANKSTRING), we.plotBorderAlpha = y = t ? (0, n.pluck)(Te.plotborderalpha, m, n.HUNDREDSTRING) : 0, we.plotBorderColor = x = (0, n.pluck)(Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), we.plotBorderDashStyle = k = Ve ? (0, n.getDashStyle)(u, p, h) : \"none\", we.showShadow = d ? (0, n.pluckNumber)(Te.showshadow, 1) : (0, n.pluckNumber)(Te.showshadow, Le.getColor(\"showShadow\")), we.showHoverEffect = f = (0, n.pluckNumber)(Te.plothovereffect, Te.showhovereffect, void 0), we.parentYAxis = X = (0, n.pluck)(Ce.parentyaxis && Ce.parentyaxis.toLowerCase(), A) === E ? 1 : 0, we.dataSeparator = n.COMMASTRING, we.textDirection = \"1\" === Te.hasrtltext ? \"rtl\" : n.BLANKSTRING, we.showMeanLegend = we.showSDLegend = we.showMDLegend = we.showQDLegend = we.showOutliersLegend = 0, !this.components.data && (this.components.data = []), Re = this.components.data, we.upperBoxColor = he = (0, n.pluck)(Ce.upperboxcolor, Te.upperboxcolor, Le.getPlotColor(2 * Pe)), de = we.upperBoxAlpha = (0, n.pluck)(Ce.upperboxalpha, Te.upperboxalpha, m, n.HUNDREDSTRING), we.lowerBoxColor = fe = (0, n.pluck)(Ce.lowerboxcolor, Te.lowerboxcolor, Le.getPlotColor(2 * Pe + 1)), ge = we.lowerBoxAlpha = (0, n.pluck)(Ce.lowerboxalpha, Te.lowerboxalpha, m, n.HUNDREDSTRING), ee = 0; ee < _e; ee++) {\n            w = Ne && Ne[ee], S = (N = Re[ee]) && N.config, N || (N = Re[ee] = {\n              graphics: {}\n            }), N.config || (S = Re[ee].config = {}), w.value ? (w.value && (We.setArray(w.value), oe = (te = We.getQuartiles()).q1, ae = te.q3, re = We.getMinMax(), S.min = ne = re.min, S.max = ie = re.max, le = We.getMedian(), S.mean = se = We.getMean(), S.md = ce = We.getMD(), S.sd = ue = We.getSD(), S.qd = pe = We.getQD()), S.upperQuartile = {\n              value: ae,\n              color: (0, n.convertColor)((0, n.pluck)(w.upperquartilecolor, Ce.upperquartilecolor, Te.upperquartilecolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), (0, n.pluckNumber)(w.upperquartilealpha, Ce.upperquartilealpha, Te.upperquartilealpha, Te.plotborderalpha, 100)),\n              borderWidth: (0, n.pluckNumber)(w.upperquartilethickness, Ce.upperquartilethickness, Te.upperquartilethickness, Te.plotborderthickness, d ? 0 : 1),\n              displayValue: je.dataLabels(ae)\n            }, S.lowerQuartile = {\n              value: oe,\n              color: (0, n.convertColor)((0, n.pluck)(w.lowerquartilecolor, Ce.lowerquartilecolor, Te.lowerquartilecolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), (0, n.pluckNumber)(w.lowerquartilealpha, Ce.lowerquartilealpha, Te.lowerquartilealpha, Te.plotborderalpha, 100)),\n              borderWidth: (0, n.pluckNumber)(w.lowerquartilethickness, Ce.lowerquartilethickness, Te.lowerquartilethickness, Te.plotborderthickness, d ? 0 : 1),\n              displayValue: je.dataLabels(oe)\n            }, S.upperBoxBorder = {\n              color: (0, n.convertColor)((0, n.pluck)(w.upperboxbordercolor, Ce.upperboxbordercolor, Te.upperboxbordercolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), (0, n.pluckNumber)(w.upperboxborderalpha, Ce.upperboxborderalpha, Te.upperboxborderalpha, Te.plotborderalpha, 100)),\n              borderWidth: (0, n.pluckNumber)(w.upperboxborderthickness, Ce.upperboxborderthickness, Te.upperboxborderthickness, !d && Te.plotborderthickness, d ? 0 : 1)\n            }, S.lowerBoxBorder = {\n              color: (0, n.convertColor)((0, n.pluck)(w.lowerboxbordercolor, Ce.lowerboxbordercolor, Te.lowerboxbordercolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), (0, n.pluckNumber)(w.lowerboxborderalpha, Ce.lowerboxborderalpha, Te.lowerboxborderalpha, Te.plotborderalpha, 100)),\n              borderWidth: (0, n.pluckNumber)(w.lowerboxborderthickness, Ce.lowerboxborderthickness, Te.lowerboxborderthickness, !d && Te.plotborderthickness, d ? 0 : 1)\n            }, S.median = {\n              value: le,\n              color: (0, n.convertColor)((0, n.pluck)(w.mediancolor, Ce.mediancolor, Te.mediancolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), (0, n.pluckNumber)(w.medianalpha, Ce.medianalpha, Te.medianalpha, Te.plotborderalpha, 100)),\n              borderWidth: (0, n.pluckNumber)(w.medianthickness, Ce.medianthickness, Te.medianthickness, Te.plotborderthickness, 1),\n              displayValue: je.dataLabels(le)\n            }, we.upperBoxColor = he = (0, n.pluck)(w.upperboxcolor, Ce.upperboxcolor, Te.upperboxcolor, Le.getPlotColor(2 * Pe)), de = we.upperBoxAlpha = (0, n.pluck)(w.upperboxalpha, Ce.upperboxalpha, Te.upperboxalpha, m, n.HUNDREDSTRING), we.lowerBoxColor = fe = (0, n.pluck)(w.lowerboxcolor, Ce.lowerboxcolor, Te.lowerboxcolor, Le.getPlotColor(2 * Pe + 1)), ge = we.lowerBoxAlpha = (0, n.pluck)(w.lowerboxalpha, Ce.lowerboxalpha, Te.lowerboxalpha, m, n.HUNDREDSTRING), S.upperColorArr = (0, n.getColumnColor)(he, de, void 0, void 0, d, x, y.toString(), 0, !1), S.lowerColorArr = (0, n.getColumnColor)(fe, ge, void 0, void 0, d, x, y.toString(), 0, !1), S.showValue = (0, n.pluckNumber)(w.showvalue, ve), S.showMinValues = S.showValue ? (0, n.pluckNumber)(w.showminvalues, we.showminvalues) : 0, S.showMaxValues = S.showValue ? (0, n.pluckNumber)(w.showmaxvalues, we.showmaxvalues) : 0, S.showQ1Values = S.showValue ? (0, n.pluckNumber)(w.showq1values, we.showq1values) : 0, S.showQ3Values = S.showValue ? (0, n.pluckNumber)(w.showq3values, we.showq3values) : 0, S.showMedianValues = S.showValue ? (0, n.pluckNumber)(w.showmedianvalues, we.showmedianvalues) : 0, S.upperWhiskerAlpha = me = (0, n.getFirstAlpha)((0, n.pluck)(w.upperwhiskeralpha, Ce.upperwhiskeralpha, Te.upperwhiskeralpha, Te.plotborderalpha, 100)), S.upperWhiskerColor = (0, n.convertColor)((0, n.getFirstColor)((0, n.pluck)(w.upperwhiskercolor, Ce.upperwhiskercolor, Te.upperwhiskercolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\"))), me), S.upperWhiskerThickness = (0, n.pluckNumber)(w.upperwhiskerthickness, Ce.upperwhiskerthickness, Te.upperwhiskerthickness, Te.plotborderthickness, 1), S.upperWhiskerShadowOpacity = we.showShadow ? me / 100 : 0, S.lowerWhiskerAlpha = xe = (0, n.getFirstAlpha)((0, n.pluck)(w.lowerwhiskeralpha, Ce.lowerwhiskeralpha, Te.lowerwhiskeralpha, Te.plotborderalpha, 100)), S.lowerWhiskerColor = (0, n.convertColor)((0, n.getFirstColor)((0, n.pluck)(w.lowerwhiskercolor, Ce.lowerwhiskercolor, Te.lowerwhiskercolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\"))), xe), S.lowerWhiskerThickness = (0, n.pluckNumber)(w.lowerwhiskerthickness, Ce.lowerwhiskerthickness, Te.lowerwhiskerthickness, Te.plotborderthickness, 1), S.lowerWhiskerShadowOpacity = we.showShadow ? xe / 100 : 0, S.setValue = C = je.getCleanValue(w.value), S.setLink = (0, n.pluck)(w.link), S.toolTipValue = q = je.dataLabels(C, X), S.setDisplayValue = Y = (0, n.parseUnsafeString)(w.displayvalue), S.displayValue = (0, n.pluck)(Y, q), Q = (0, n.pluckNumber)(w.dashed), Z = (0, n.pluckNumber)(w.dashlen, u), $ = p = (0, n.pluckNumber)(w.dashgap, p), Ge = Math.max(Ge, ie), He = Math.min(He, ne), S.plotBorderDashStyle = 1 === Q ? (0, n.getDashStyle)(Z, $, h) : 0 === Q ? \"none\" : k, Oe = (0, n.pluck)(w.color, we.plotColor), m = (0, n.pluck)(w.alpha, we.plotfillalpha), C < 0 && !d && (s = g, g = 360 - g), S.colorArr = (0, n.getColumnColor)(Oe + n.COMMA + b, m, v, g, d, x, y.toString(), 0, !1), S.label = D = (0, n.getValidValue)((0, n.parseUnsafeString)(Ee.getLabel((0, n.pluckNumber)(ee)).label)), 0 !== f && (_ = (0, n.pluck)(w.upperboxhovercolor, Ce.upperboxhovercolor, Te.upperboxhovercolor, he), T = (0, n.pluck)(w.upperboxhoveralpha, Ce.upperboxhoveralpha, Te.upperboxhoveralpha, de), L = (0, n.pluck)(w.upperboxborderhovercolor, Ce.upperboxborderhovercolor, Te.upperboxborderhovercolor, w.upperboxbordercolor, Ce.upperboxbordercolor, Te.upperboxbordercolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), P = (0, n.pluck)(w.upperboxborderhoveralpha, Ce.upperboxborderhoveralpha, Te.upperboxborderhoveralpha, w.upperboxborderalpha, Ce.upperboxborderalpha, Te.upperboxborderalpha, Te.plotborderalpha, 100), O = d ? 0 : (0, n.pluck)(w.upperboxborderhoverthickness, Ce.upperboxborderhoverthickness, Te.upperboxborderhoverthickness, S.upperBoxBorder.borderWidth), V = (0, n.pluck)(w.lowerboxhovercolor, Ce.lowerboxhovercolor, Te.lowerboxhovercolor, fe), M = (0, n.pluck)(w.lowerboxhoveralpha, Ce.lowerboxhoveralpha, Te.lowerboxhoveralpha, ge), F = (0, n.pluck)(w.lowerboxborderhovercolor, Ce.lowerboxborderhovercolor, Te.lowerboxborderhovercolor, w.lowerboxbordercolor, Ce.lowerboxbordercolor, Te.lowerboxbordercolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), I = (0, n.pluck)(w.lowerboxborderhoveralpha, Ce.lowerboxborderhoveralpha, Te.lowerboxborderhoveralpha, w.lowerboxborderalpha, Ce.lowerboxborderalpha, Te.lowerboxborderalpha, Te.plotborderalpha, 100), B = d ? 0 : (0, n.pluck)(w.lowerboxborderhoverthickness, Ce.lowerboxborderhoverthickness, Te.lowerboxborderhoverthickness, S.lowerBoxBorder.borderWidth), R = (0, n.pluck)(w.upperquartilehovercolor, Ce.upperquartilehovercolor, Te.upperquartilehovercolor, w.upperquartilecolor, Ce.upperquartilecolor, Te.upperquartilecolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), j = (0, n.pluck)(w.upperquartilehoveralpha, Ce.upperquartilehoveralpha, Te.upperquartilehoveralpha, w.upperquartilealpha, Ce.upperquartilealpha, Te.upperquartilealpha, Te.plotborderalpha, 100), G = (0, n.pluck)(w.upperquartilehoverthickness, Ce.upperquartilehoverthickness, Te.upperquartilehoverthickness, S.upperQuartile.borderWidth), H = (0, n.pluck)(w.lowerquartilehovercolor, Ce.lowerquartilehovercolor, Te.lowerquartilehovercolor, w.lowerquartilecolor, Ce.lowerquartilecolor, Te.lowerquartilecolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), W = (0, n.pluck)(w.lowerquartilehoveralpha, Ce.lowerquartilehoveralpha, Te.lowerquartilehoveralpha, w.lowerquartilealpha, Ce.lowerquartilealpha, Te.lowerquartilealpha, Te.plotborderalpha, 100), z = (0, n.pluck)(w.lowerquartilehoverthickness, Ce.lowerquartilehoverthickness, Te.lowerquartilehoverthickness, S.lowerQuartile.borderWidth), U = (0, n.pluck)(w.medianhovercolor, Ce.medianhovercolor, Te.medianhovercolor, w.mediancolor, Ce.mediancolor, Te.mediancolor, Te.plotbordercolor, Le.getColor(\"plotBorderColor\")), J = (0, n.pluck)(w.medianhoveralpha, Ce.medianhoveralpha, Te.medianhoveralpha, w.medianalpha, Ce.medianalpha, Te.medianalpha, Te.plotborderalpha, 100), K = (0, n.pluck)(w.medianhoverthickness, Ce.medianhoverthickness, Te.medianhoverthickness, S.median.borderWidth), 1 === f && (he === _ && (_ = (0, n.getLightColor)(_, 70)), fe === V && (V = (0, n.getLightColor)(V, 70))), S.upperBoxHoverColorArr = (0, n.getColumnColor)(_, T, void 0, void 0, d, x, y.toString(), 0, !1), S.lowerBoxHoverColorArr = (0, n.getColumnColor)(V, M, void 0, void 0, d, x, y.toString(), 0, !1), S.setUpperBoxRolloutAttr = {\n              fill: (0, n.toRaphaelColor)(S.upperColorArr[0])\n            }, S.setUpperBoxRolloverAttr = {\n              fill: (0, n.toRaphaelColor)(S.upperBoxHoverColorArr[0])\n            }, S.setLowerBoxRolloutAttr = {\n              fill: (0, n.toRaphaelColor)(S.lowerColorArr[0])\n            }, S.setLowerBoxRolloverAttr = {\n              fill: (0, n.toRaphaelColor)(S.lowerBoxHoverColorArr[0])\n            }, S.setUpperBoxBorderRolloverAttr = {\n              stroke: (0, n.convertColor)(L, P),\n              \"stroke-width\": O\n            }, S.setUpperBoxBorderRolloutAttr = {\n              stroke: S.upperBoxBorder.color,\n              \"stroke-width\": S.upperBoxBorder.borderWidth\n            }, S.setLowerBoxBorderRolloverAttr = {\n              stroke: (0, n.convertColor)(F, I),\n              \"stroke-width\": B\n            }, S.setLowerBoxBorderRolloutAttr = {\n              stroke: S.lowerBoxBorder.color,\n              \"stroke-width\": S.lowerBoxBorder.borderWidth\n            }, S.setUpperQuartileRolloverAttr = {\n              stroke: (0, n.convertColor)(R, j),\n              \"stroke-width\": G\n            }, S.setUpperQuartileRolloutAttr = {\n              stroke: S.upperQuartile.color,\n              \"stroke-width\": S.upperQuartile.borderWidth\n            }, S.setLowerQuartileRolloverAttr = {\n              stroke: (0, n.convertColor)(H, W),\n              \"stroke-width\": z\n            }, S.setLowerQuartileRolloutAttr = {\n              stroke: S.lowerQuartile.color,\n              \"stroke-width\": S.lowerQuartile.borderWidth\n            }, S.setMedianRolloverAttr = {\n              stroke: (0, n.convertColor)(U, J),\n              \"stroke-width\": K\n            }, S.setMedianRolloutAttr = {\n              stroke: S.median.color,\n              \"stroke-width\": S.median.borderWidth\n            }), a = S.toolTipValue, i = (0, n.getValidValue)((0, n.parseUnsafeString)((0, n.pluck)(w.tooltext, Ce.plottooltext, Te.plottooltext))), o ? null === a ? c = !1 : void 0 !== i ? (l = [1, 2, 3, 4, 5, 6, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], r = {\n              maxValue: ie,\n              maxDataValue: je.dataLabels(ie),\n              minValue: ne,\n              minDataValue: je.dataLabels(ne),\n              Q1: je.dataLabels(oe),\n              unformattedQ1: oe,\n              Q3: je.dataLabels(ae),\n              unformattedQ3: ae,\n              median: je.dataLabels(le),\n              unformattedMedian: le,\n              SD: je.dataLabels(ue),\n              unformattedsd: ue,\n              QD: je.dataLabels(pe),\n              unformattedQD: pe,\n              MD: je.dataLabels(ce),\n              unformattedMD: ce,\n              mean: je.dataLabels(se),\n              unformattedMean: se,\n              label: D,\n              yaxisName: Fe,\n              xaxisName: Ie,\n              formattedValue: a,\n              value: D\n            }, c = (0, n.parseTooltext)(i, l, r, w, Te, Ce)) : c = \"<b>Maximum\" + Be + \"</b>\" + je.dataLabels(ie) + \"<br /><b>Q3\" + Be + \"</b>\" + je.dataLabels(ae) + \"<br /><b>Median\" + Be + \"</b>\" + je.dataLabels(le) + \"<br /><b>Q1\" + Be + \"</b>\" + je.dataLabels(oe) + \"<br /><b>Minimum\" + Be + \"</b>\" + je.dataLabels(ne) : c = !1, S.toolText = c, S.setTooltext = c, s && (g = s)) : S.setValue = void 0;\n          }\n\n          be ? (ke = this._getOutLiersLimit(), Ge = Math.max(Ge, ke.max), He = Math.min(He, ke.min)) : (ye = Ge - He, Ge += we.outliersupperrangeratio * ye, He -= we.outlierslowerrangeratio * ye), we.maxValue = Ge, we.minValue = He, this.setState(\"dirty\", !0), this._createSubDS(), Ae.showLegend && this._addLegend();\n        }, t.prototype._createSubDS = function () {\n          var e = this.config.index,\n              t = this.getFromEnv(\"lineJSON\")[e],\n              o = t.length;\n          (0, n.datasetFactory)(this, r[\"default\"], \"dataset\", o, t, function (e, t) {\n            for (var o = []; t;) {\n              o.unshift(e + Number(\".\" + t)), t--;\n            }\n\n            return o;\n          }(e, o)), o || this.iterateComponents(function (e) {\n            \"line\" === e.getName() && e.remove();\n          });\n        }, t.prototype._getOutLiersLimit = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n = this.config.index,\n              i = this.getFromEnv(\"lineJSON\")[n],\n              l = i.length,\n              s = -Infinity,\n              c = +Infinity;\n\n          for (r = 0; r < l; r++) {\n            if (\"Outliers\" === (e = i[r]).seriesname) {\n              for (t = (a = e.data).length, o = 0; o < t; o++) {\n                s = Math.max(a[o].value, s), c = Math.min(a[o].value, c);\n              }\n\n              return {\n                max: s,\n                min: c\n              };\n            }\n          }\n\n          return {\n            max: s,\n            min: c\n          };\n        }, t.prototype.parsePlotAttributes = function (e, t) {\n          var o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              m,\n              x,\n              k,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H,\n              W,\n              z,\n              U,\n              J,\n              K,\n              q,\n              Y,\n              X,\n              Q,\n              Z,\n              $,\n              ee,\n              te,\n              oe,\n              ae,\n              re,\n              ne,\n              ie,\n              le,\n              se,\n              ce,\n              ue,\n              pe,\n              he = this.config.JSONData,\n              de = this.config,\n              fe = de.index,\n              ge = t,\n              me = this.getState(\"visible\"),\n              ve = this.getFromEnv(\"chart\"),\n              be = this.getFromEnv(\"chartConfig\"),\n              ye = this.getFromEnv(\"xAxis\"),\n              xe = this.getFromEnv(\"yAxis\"),\n              ke = this.components.data,\n              we = be.dataLabelStyle,\n              Ce = de.rotatevalues,\n              Ne = de.valuepadding,\n              Se = this.getFromEnv(\"number-formatter\"),\n              Ae = Ce ? n.POSITION_LEFT : n.POSITION_MIDDLE,\n              Ee = this.getFromEnv(\"smartLabel\"),\n              De = +Infinity;\n\n          r = this.getFromEnv(\"columnXShift\"), a = this.getFromEnv(\"columnWidth\"), s = (c = e && e.config) && c.setValue, void 0 !== e && void 0 !== s && null !== s && (I = e.graphics, l = c.setLink, e.graphics || (ke[ge].graphics = {}), I.label || (ke[ge].graphics.label = []), o = ye.getPixel(ge) + r, h = ((p = (u = c.upperQuartile || {}) && u.value) || 0 === p) && xe.getPixel(p), k = ((x = (m = c.lowerQuartile || {}) && m.value) || 0 === x) && xe.getPixel(x), _ = (D = ((E = (A = c.median) && A.value) || 0 === E) && xe.getPixel(E)) - h, T = k - D, L = c.upperBoxBorder || {}, P = c.lowerBoxBorder || {}, i = c.toolText, c.eventArgs = {\n            index: ge,\n            link: l,\n            maximum: c.max,\n            minimum: c.min,\n            median: E,\n            q3: u.value,\n            q1: m.value,\n            maxDisplayValue: c.showMaxValues ? Se.dataLabels(c.max) : n.BLANKSTRING,\n            minDisplayValue: c.showMinValues ? Se.dataLabels(c.min) : n.BLANKSTRING,\n            medianDisplayValue: c.showMedianValues ? Se.dataLabels(E) : n.BLANKSTRING,\n            q1DisplayValue: c.showQ1Values ? Se.dataLabels(m.value) : n.BLANKSTRING,\n            q3DisplayValue: c.showQ3Values ? Se.dataLabels(u.value) : n.BLANKSTRING,\n            categoryLabel: c.label,\n            toolText: i,\n            datasetIndex: fe,\n            datasetName: he.seriesname,\n            visible: me\n          }, O = Math.round(o) + L.borderWidth % 2 * .5, V = Math.round(o + a) + L.borderWidth % 2 * .5, M = Math.round(h) + u.borderWidth % 2 * .5, a = V - O, F = {\n            upperBox: {\n              fill: (0, n.toRaphaelColor)(c.upperColorArr[0]),\n              \"stroke-width\": 0,\n              \"stroke-dasharray\": \"none\",\n              cursor: l ? d : n.BLANKSTRING,\n              visibility: me\n            },\n            lowerBox: {\n              fill: (0, n.toRaphaelColor)(c.lowerColorArr[0]),\n              \"stroke-width\": 0,\n              \"stroke-dasharray\": \"none\",\n              cursor: l ? d : f,\n              visibility: me\n            },\n            upperBoxBorder: {\n              stroke: L.color,\n              \"stroke-width\": L.borderWidth,\n              \"stroke-linecap\": g,\n              dashstyle: L.dashStyle,\n              visibility: me\n            },\n            lowerBoxBorder: {\n              stroke: P.color,\n              \"stroke-width\": P.borderWidth,\n              dashstyle: P.dashStyle,\n              \"stroke-linecap\": g,\n              visibility: me\n            },\n            upperQuartile: {\n              stroke: (0, n.toRaphaelColor)(u.color),\n              \"stroke-width\": u.borderWidth,\n              \"stroke-dasharray\": u.dashSyle,\n              \"stroke-linecap\": g,\n              cursor: l ? d : f,\n              visibility: me\n            },\n            lowerQuartile: {\n              stroke: (0, n.toRaphaelColor)(m.color),\n              \"stroke-width\": m.borderWidth,\n              \"stroke-dasharray\": m.dashSyle,\n              cursor: l ? d : n.BLANKSTRING,\n              \"stroke-linecap\": g,\n              visibility: me\n            },\n            median: {\n              stroke: (0, n.toRaphaelColor)(A.color),\n              \"stroke-width\": A.borderWidth,\n              \"stroke-dasharray\": A.dashSyle,\n              cursor: l ? d : n.BLANKSTRING,\n              \"stroke-linecap\": g,\n              visibility: me\n            }\n          }, se = M, ee = Object.assign({\n            x: O,\n            y: M,\n            width: Math.max(a, 0),\n            height: Math.max(Math.min(De, _), 0),\n            r: 0\n          }, F.upperBox), $ = Object.assign({\n            path: [C, O, M, S, M + _, C, V, M, S, M + _]\n          }, F.upperBoxBorder), te = Object.assign({\n            path: [C, O, M, N, O + a]\n          }, F.upperQuartile), B = M, R = a * (de.whiskerslimitswidthratio / 100) / 2, H = j = xe.getPixel(c.max), G = O, H = Math.round(j) + c.upperWhiskerThickness % 2 / 2, O = Math.round(O + a / 2) + c.upperWhiskerThickness % 2 / 2, oe = {\n            path: W = [C, O, B, S, Math.min(H, se), C, O - R, Math.min(H, se), N, O + R],\n            \"stroke-width\": c.upperWhiskerThickness,\n            cursor: l ? d : n.BLANKSTRING,\n            \"stroke-linecap\": g,\n            stroke: c.upperWhiskerColor\n          }, Ee.useEllipsesOnOverflow(ve.config.useEllipsesWhenOverflow), Ee.setStyle(we), z = Ee.getOriSize(Se.dataLabels(c.max)), U = Ce ? z.width : z.height, (K = j - .5 * c.upperWhiskerThickness - Ne - U * (Ce ? .5 : 1)) - (Ce ? U / 2 : 0) < be.canvasTop && (K = be.canvasTop + (Ce ? U / 2 : 0)), ae = {\n            text: Se.dataLabels(c.max),\n            x: G + a / 2,\n            title: u.originalText || n.BLANKSTRING,\n            y: K,\n            \"text-anchor\": Ce ? n.POSITION_MIDDLE : Ae,\n            \"vertical-align\": Ce ? n.POSITION_MIDDLE : y,\n            visibility: n.visibleStr,\n            direction: de.textDirection,\n            fill: we.color,\n            transform: (0, n.getSuggestiveRotation)(Ce, G + a / 2, K),\n            \"text-bound\": [we.backgroundColor, we.borderColor, we.borderThickness, we.borderPadding, we.borderRadius, we.borderDash]\n          }, O = Math.round(o) + P.borderWidth % 2 * .5, V = Math.round(o + a) + P.borderWidth % 2 * .5, M = Math.round(D + T) + m.borderWidth % 2 * .5, pe = (ce = D) + (ue = Math.max(Math.min(De, M - D), 0)), Y = Object.assign({\n            x: O,\n            y: ce,\n            width: Math.max(a, 0),\n            height: ue,\n            r: 0\n          }, F.lowerBox), q = Object.assign({\n            path: [C, O, D, S, D + T, C, V, D, S, D + T]\n          }, F.lowerBoxBorder), M = Math.round(D + T) + m.borderWidth % 2 * .5, X = Object.assign({\n            path: [C, O, M, N, O + a]\n          }, F.lowerQuartile), B = M, R = a * (de.whiskerslimitswidthratio / 100) / 2, H = j = xe.getPixel(c.min), G = O, H = Math.round(j) + c.lowerWhiskerThickness % 2 / 2, G = Math.round(G + a / 2) + c.lowerWhiskerThickness % 2 / 2, W = [C, G, B, S, Math.max(H, pe), C, G - R, Math.max(H, pe), N, G + R], Ee.setStyle(we), z = Ee.getOriSize(Se.dataLabels(c.min)), U = Ce ? z.width : z.height, (J = j + .5 * c.lowerWhiskerThickness + Ne) + U > be.canvasBottom && (J = be.canvasBottom - U), re = {\n            text: Se.dataLabels(c.min),\n            x: G,\n            title: u.originalText || n.BLANKSTRING,\n            y: J,\n            \"text-anchor\": Ce ? w : Ae,\n            \"vertical-align\": Ce ? n.POSITION_MIDDLE : y,\n            visibility: n.visibleStr,\n            direction: de.textDirection,\n            fill: we.color,\n            transform: (0, n.getSuggestiveRotation)(Ce, G, J),\n            \"text-bound\": [we.backgroundColor, we.borderColor, we.borderThickness, we.borderPadding, we.borderRadius, we.borderDash]\n          }, Q = {\n            path: W,\n            \"stroke-width\": c.lowerWhiskerThickness,\n            cursor: l ? d : n.BLANKSTRING,\n            \"stroke-linecap\": g,\n            stroke: c.lowerWhiskerColor\n          }, M = Math.round(D) + A.borderWidth % 2 * .5, Z = Object.assign({\n            path: [C, O, M, N, O + a]\n          }, F.median), Ae = Ce ? n.POSITION_LEFT : n.POSITION_MIDDLE, ne = {\n            text: u.displayValue,\n            x: o + a / 2,\n            title: u.originalText || n.BLANKSTRING,\n            y: h - Ne,\n            \"text-anchor\": Ce ? v : Ae,\n            \"vertical-align\": Ce ? n.POSITION_MIDDLE : b,\n            visibility: n.visibleStr,\n            direction: de.textDirection,\n            fill: we.color,\n            transform: (0, n.getSuggestiveRotation)(Ce, o + a / 2, h - Ne),\n            \"text-bound\": [we.backgroundColor, we.borderColor, we.borderThickness, we.borderPadding, we.borderRadius, we.borderDash]\n          }, le = {\n            text: A.displayValue,\n            x: O + a / 2,\n            y: D - Ne,\n            title: A.originalText || n.BLANKSTRING,\n            \"text-anchor\": Ce ? v : Ae,\n            \"vertical-align\": Ce ? n.POSITION_MIDDLE : b,\n            visibility: n.visibleStr,\n            direction: de.textDirection,\n            fill: we.color,\n            transform: (0, n.getSuggestiveRotation)(Ce, O + a / 2, D - Ne),\n            \"text-bound\": [we.backgroundColor, we.borderColor, we.borderThickness, we.borderPadding, we.borderRadius, we.borderDash]\n          }, ie = {\n            text: m.displayValue,\n            x: o + a / 2,\n            y: k + Ne,\n            title: m.originalText || n.BLANKSTRING,\n            \"text-anchor\": Ce ? v : Ae,\n            \"vertical-align\": Ce ? n.POSITION_MIDDLE : y,\n            visibility: n.visibleStr,\n            direction: de.textDirection,\n            fill: we.color,\n            transform: (0, n.getSuggestiveRotation)(Ce, o + a / 2, k + Ne),\n            \"text-bound\": [we.backgroundColor, we.borderColor, we.borderThickness, we.borderPadding, we.borderRadius, we.borderDash]\n          }, c.props = {\n            lowerBoxBorderEle: {\n              attr: q\n            },\n            lowerBoxElem: {\n              attr: Y\n            },\n            lowerQuartileEle: {\n              attr: X\n            },\n            lowerWhiskerEle: {\n              attr: Q\n            },\n            midLineElem: {\n              attr: Z\n            },\n            upperBoxElem: {\n              attr: ee\n            },\n            upperBoxBorderEle: {\n              attr: $\n            },\n            upperQuartileEle: {\n              attr: te\n            },\n            upperWhiskerEle: {\n              attr: oe\n            },\n            upperQuartileMaxLabel: {\n              attr: ae\n            },\n            upperQuartileMinLabel: {\n              attr: re\n            },\n            medianLabel: {\n              attr: le\n            },\n            upperQuartileLabel: {\n              attr: ne\n            },\n            lowerQuartileLabel: {\n              attr: ie\n            }\n          });\n        }, t.prototype.allocatePosition = function () {\n          var e,\n              t,\n              o,\n              a = this.config.JSONData.data,\n              r = a && a.length,\n              n = this.getFromEnv(\"xAxis\").getTicksLen(),\n              i = this.components.data;\n\n          for (o = Math.min(n, r), this.setColumnPosition(), t = 0; t < o; t++) {\n            e = i[t], this.parsePlotAttributes(e, t);\n          }\n        }, t.prototype.drawPlots = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              d,\n              g,\n              v,\n              b,\n              y,\n              w,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H,\n              W,\n              z,\n              U,\n              J,\n              K,\n              q,\n              Y,\n              X,\n              Q,\n              Z,\n              $,\n              ee,\n              te,\n              oe = this,\n              ae = oe.config.JSONData,\n              re = oe.config,\n              ne = re.index,\n              ie = ae.data,\n              le = ie && ie.length,\n              se = oe.getState(\"visible\"),\n              ce = oe.getFromEnv(\"chart\"),\n              ue = oe.getFromEnv(\"xAxis\").getTicksLen(),\n              pe = re.showtooltip,\n              he = oe.getFromEnv(\"toolTipController\"),\n              de = oe.components.data,\n              fe = re.showShadow,\n              ge = oe.getContainer(\"upperBoxGroup\").toBack(),\n              me = oe.getContainer(\"lowerBoxGroup\"),\n              ve = oe.getContainer(\"medianGroup\"),\n              be = oe.getContainer(\"upperWhiskerGroup\"),\n              ye = oe.getContainer(\"lowerWhiskerGroup\"),\n              xe = oe.getContainer(\"labelGroup\"),\n              ke = oe.getContainer(\"shadowGroup\"),\n              we = oe.getFromEnv(\"smartLabel\"),\n              Ce = (oe.components.removeDataArr || []).length,\n              Ne = re.showHoverEffect,\n              Se = oe.getFromEnv(\"animationManager\"),\n              Ae = function Ae(e) {\n            return function (t) {\n              ce.plotEventHandler(e, t);\n            };\n          },\n              Ee = function Ee(e, t) {\n            return function (o) {\n              var a;\n              if (0 !== t.data(x)) for (a in e) {\n                a !== p && (Se.setAnimation({\n                  el: e[a],\n                  doNotRemove: !0,\n                  attr: t.data(\"setRolloverAttr\")[a],\n                  component: oe\n                }), ce.plotEventHandler(t, o, \"DataPlotRollOver\"));\n              }\n            };\n          },\n              De = function De(e, t) {\n            return function (o) {\n              var a;\n              if (0 !== t.data(x)) for (a in e) {\n                a !== p && (Se.setAnimation({\n                  el: e[a],\n                  doNotRemove: !0,\n                  attr: t.data(\"setRolloutAttr\")[a],\n                  component: oe\n                }), ce.plotEventHandler(t, o, \"DataPlotRollOut\"));\n              }\n            };\n          };\n\n          for (s = function s(e) {\n            return function () {\n              this.show(), this.shadow(e);\n            };\n          }, oe.setColumnPosition(), se ? (ge.show(), me.show(), be.show(), ye.show(), ve.show(), ke.show(), xe.show(), oe._conatinerHidden = !1) : (xe.hide(), be.hide(), ge.hide(), ye.hide(), me.hide(), ve.hide(), ke.hide()), e = Math.min(ue, le), t = 0; t < e; t++) {\n            if (r = (i = (a = de[t]) && a.config) && i.setValue, H = !1, W = !1, z = !1, U = !1, J = !1, K = !1, q = !1, Y = !1, X = !1, void 0 !== a && void 0 !== r && null !== r) V = a.graphics, a.graphics || (de[t].graphics = {}), V.label || (de[t].graphics.label = []), l = i.upperQuartile || {}, c = i.lowerQuartile || {}, u = i.median, o = i.toolText, M = ne + h + t, g = a.graphics.upperBoxElem, d = Se.setAnimation({\n              el: g || \"rect\",\n              attr: i.props.upperBoxElem.attr,\n              label: \"upperBox\",\n              container: ge,\n              component: oe\n            }), g || (a.graphics.upperBoxElem = d, H = !0), d.shadow({\n              opacity: fe ? re.upperBoxAlpha / 100 : 0\n            }, ke), b = a.graphics.upperBoxBorderEle, v = Se.setAnimation({\n              el: b || \"path\",\n              attr: i.props.upperBoxBorderEle.attr,\n              container: ge,\n              label: \"path\",\n              component: oe\n            }), b || (a.graphics.upperBoxBorderEle = v, z = !0), w = a.graphics.upperQuartileEle, y = Se.setAnimation({\n              el: w || \"path\",\n              attr: i.props.upperQuartileEle.attr,\n              label: \"path\",\n              container: ge,\n              component: oe\n            }), w || (a.graphics.upperQuartileEle = y, J = !0), I = a.graphics.upperWhiskerEle, F = Se.setAnimation({\n              el: I || \"path\",\n              attr: i.props.upperWhiskerEle.attr,\n              label: \"path\",\n              container: be,\n              component: oe\n            }), s({\n              opacity: i.upperWhiskerShadowOpacity\n            }), I || (a.graphics.upperWhiskerEle = F, Y = !0), we.useEllipsesOnOverflow(ce.config.useEllipsesWhenOverflow), i.showMaxValues ? ((O = V.label[3]) && O.show(), P = Se.setAnimation({\n              el: O || \"text\",\n              attr: i.props.upperQuartileMaxLabel.attr,\n              component: oe,\n              label: \"text\",\n              container: xe\n            }), O || (V.label[3] = P), V.label[3].data(m, M)) : V.label[3] && Se.setAnimation({\n              el: V.label[3],\n              component: oe,\n              attr: {\n                \"text-bound\": []\n              },\n              callback: _.call(V.label[3])\n            }), N = a.graphics.lowerBoxElem, C = Se.setAnimation({\n              el: N || \"rect\",\n              attr: i.props.lowerBoxElem.attr,\n              label: \"lowerBox\",\n              container: me,\n              component: oe\n            }), N || (a.graphics.lowerBoxElem = C, W = !0), C.shadow({\n              opacity: fe ? re.lowerBoxAlpha / 100 : 0\n            }, ke), A = a.graphics.lowerBoxBorderEle, S = Se.setAnimation({\n              el: A || \"path\",\n              attr: i.props.lowerBoxBorderEle.attr,\n              component: oe,\n              label: \"path\",\n              container: me\n            }), A || (a.graphics.lowerBoxBorderEle = S, U = !0), D = a.graphics.lowerQuartileEle, E = Se.setAnimation({\n              el: D || \"path\",\n              attr: i.props.lowerQuartileEle.attr,\n              component: oe,\n              label: \"path\",\n              container: me\n            }), D || (a.graphics.lowerQuartileEle = E, K = !0), B = a.graphics.lowerWhiskerEle, i.showMinValues ? ((O = V.label[4]) && O.show(), P = Se.setAnimation({\n              el: O || \"text\",\n              attr: i.props.upperQuartileMinLabel.attr,\n              label: \"text\",\n              container: xe,\n              component: oe\n            }), O || (V.label[4] = P), V.label[4].data(m, M)) : V.label[4] && Se.setAnimation({\n              el: V.label[4],\n              component: oe,\n              attr: {\n                \"text-bound\": []\n              },\n              callback: _.call(V.label[4])\n            }), R = a.graphics.lowerWhiskerEle, B = Se.setAnimation({\n              el: R || \"path\",\n              attr: i.props.lowerWhiskerEle.attr,\n              label: \"path\",\n              container: ye,\n              component: oe\n            }), s({\n              opacity: i.lowerWhiskerShadowOpacity\n            }), R || (a.graphics.lowerWhiskerEle = B, X = !0), L = a.graphics.midLineElem, T = Se.setAnimation({\n              el: L || \"path\",\n              component: oe,\n              label: \"midline\",\n              container: ve,\n              attr: i.props.midLineElem.attr\n            }), L || (a.graphics.midLineElem = T, q = !0), Q = {\n              upperBoxElem: i.setUpperBoxRolloverAttr,\n              lowerBoxElem: i.setLowerBoxRolloverAttr,\n              upperBoxBorderEle: i.setUpperBoxBorderRolloverAttr,\n              lowerBoxBorderEle: i.setLowerBoxBorderRolloverAttr,\n              upperQuartileEle: i.setUpperQuartileRolloverAttr,\n              lowerQuartileEle: i.setLowerQuartileRolloverAttr,\n              midLineElem: i.setMedianRolloverAttr\n            }, Z = {\n              upperBoxElem: i.setUpperBoxRolloutAttr,\n              lowerBoxElem: i.setLowerBoxRolloutAttr,\n              upperBoxBorderEle: i.setUpperBoxBorderRolloutAttr,\n              lowerBoxBorderEle: i.setLowerBoxBorderRolloutAttr,\n              upperQuartileEle: i.setUpperQuartileRolloutAttr,\n              lowerQuartileEle: i.setLowerQuartileRolloutAttr,\n              midLineElem: i.setMedianRolloutAttr\n            }, d.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), H && (d.on(\"fc-click\", Ae(d)), d.on(\"fc-mouseover\", Ee(a.graphics, d)), d.on(\"fc-mouseout\", De(a.graphics, d))), C.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), W && (C.on(\"fc-click\", Ae(C)), C.on(\"fc-mouseover\", Ee(a.graphics, C)), C.on(\"fc-mouseout\", De(a.graphics, C))), v.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), z && (v.on(\"fc-click\", Ae(v)), v.on(\"fc-mouseover\", Ee(a.graphics, v)), v.on(\"fc-mouseout\", De(a.graphics, v))), S.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), U && (S.on(\"fc-click\", Ae(S)), S.on(\"fc-mouseover\", Ee(a.graphics, S)), S.on(\"fc-mouseout\", De(a.graphics, S))), y.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), J && (y.on(\"fc-click\", Ae(y)), y.on(\"fc-mouseover\", Ee(a.graphics, y)), y.on(\"fc-mouseout\", De(a.graphics, y))), E.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), K && (E.on(\"fc-click\", Ae(E)), E.on(\"fc-mouseover\", Ee(a.graphics, E)), E.on(\"fc-mouseout\", De(a.graphics, E))), T.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), q && (T.on(\"fc-click\", Ae(T)), T.on(\"fc-mouseover\", Ee(a.graphics, T)), T.on(\"fc-mouseout\", De(a.graphics, T))), F.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), Y && (F.on(\"fc-click\", Ae(F)), F.on(\"fc-mouseover\", Ee(a.graphics, F)), F.on(\"fc-mouseout\", De(a.graphics, F))), B.data(m, M).data(k, i.eventArgs).data(x, Ne).data(\"setRolloverAttr\", Q).data(\"setRolloutAttr\", Z), X && (B.on(\"fc-click\", Ae(B)), B.on(\"fc-mouseover\", Ee(a.graphics, B)), B.on(\"fc-mouseout\", De(a.graphics, B))), (0, n.defined)(l.displayValue) && l.displayValue !== f && i.showQ3Values ? ((O = V.label[0]) && O.show(), P = Se.setAnimation({\n              el: O || \"text\",\n              attr: i.props.upperQuartileLabel.attr,\n              component: oe,\n              label: \"text\",\n              container: xe\n            }), O || (V.label[0] = P), V.label[0].data(m, M)) : V.label[0] && Se.setAnimation({\n              el: V.label[0],\n              component: oe,\n              attr: {\n                \"text-bound\": []\n              },\n              callback: _.call(V.label[0])\n            }), (0, n.defined)(u.displayValue) && u.displayValue !== f && i.showMedianValues ? ((O = V.label[1]) && O.show(), P = Se.setAnimation({\n              el: O || \"text\",\n              attr: i.props.medianLabel.attr,\n              component: oe,\n              label: \"text\",\n              container: xe\n            }), O || (V.label[1] = P), V.label[1].data(m, M)) : V.label[1] && Se.setAnimation({\n              el: V.label[1],\n              component: oe,\n              attr: {\n                \"text-bound\": []\n              },\n              callback: _.call(V.label[1])\n            }), (0, n.defined)(c.displayValue) && c.displayValue !== f && i.showQ1Values ? (O = V.label[2], P = Se.setAnimation({\n              el: O || \"text\",\n              component: oe,\n              attr: i.props.lowerQuartileLabel.attr,\n              container: xe\n            }), O || (V.label[2] = P, P.show()), V.label[2].data(m, M)) : V.label[2] && Se.setAnimation({\n              el: V.label[2],\n              component: oe,\n              attr: {\n                \"text-bound\": []\n              },\n              callback: _.call(V.label[2])\n            }), pe ? (he.enableToolTip(d, o), he.enableToolTip(C, o), he.enableToolTip(v, o), he.enableToolTip(S, o), he.enableToolTip(y, o), he.enableToolTip(E, o), he.enableToolTip(T, o), he.enableToolTip(F, o), he.enableToolTip(B, o)) : (he.enableToolTip(d, !1), he.enableToolTip(C, !1), he.enableToolTip(v, !1), he.enableToolTip(S, !1), he.enableToolTip(y, !1), he.enableToolTip(E, !1), he.enableToolTip(T, !1), he.enableToolTip(F, !1), he.enableToolTip(B, !1));else for (j in G = a.graphics) {\n              if (G[j] instanceof Array) for ($ = 0, te = (ee = G[j]).length; $ < te; $++) {\n                ee[$] && ee[$].hide();\n              } else G[j].hide();\n            }\n          }\n\n          !1 !== oe.getState(\"visible\") || !1 !== oe._conatinerHidden && void 0 !== oe._conatinerHidden || (ge.hide(), me.hide(), be.hide(), ye.hide(), ve.hide(), ke.hide(), xe && xe.hide(), oe._conatinerHidden = !0), Ce && oe.removePlots();\n        }, t.prototype.removePlots = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i = this.components.removeDataArr,\n              l = this.getFromEnv(\"animationManager\"),\n              s = i.length;\n\n          for (a = 0; a < s; a++) {\n            if (e = i[0], i.splice(0, 1), e && e.graphics) for (t in o = e.graphics) {\n              if (t !== p) o[t].shadow({\n                opacity: 0\n              }), o[t].hide();else for (r = o[t].length, n = 0; n < r; n++) {\n                o[t][n] && (o[t][n].shadow({\n                  opacity: 0\n                }), l.setAnimation({\n                  el: o[t][n],\n                  component: this,\n                  attr: {\n                    \"text-bound\": []\n                  },\n                  callback: _.call(o[t][n])\n                }));\n              }\n            }\n          }\n        }, t.prototype.removeData = function (e, t, o) {\n          var a = this.components,\n              r = a.data,\n              n = a.removeDataArr || (a.removeDataArr = []);\n          t = t || 1, (e = e || 0) + t === r.length ? this.endPosition = !0 : 0 !== e && void 0 !== e || (this.endPosition = !1), a.removeDataArr = n = n.concat(r.splice(e, t)), o && this.asyncDraw();\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.showplotborder = void 0, t.plotborderdashlen = void 0, t.plotborderdashgap = void 0, t.plotfillalpha = void 0, t.useroundedges = void 0, t.ratio = void 0, t.plotborderthickness = void 0, t.showvalues = void 0, t.valuepadding = void 0, t.showtooltip = void 0, t.maxcolwidth = void 0, t.rotatevalues = void 0, t.use3dlighting = void 0, t.whiskerslimitswidthratio = void 0, t.outliersupperrangeratio = void 0, t.outlierslowerrangeratio = void 0, t.showalloutliers = void 0, t.showmean = void 0, t.showsd = void 0, t.showmd = void 0, t.showqd = void 0, t.showminvalues = void 0, t.showmaxvalues = void 0, t.showq1values = void 0, t.showq3values = void 0, t.showmedianvalues = void 0;\n        }, t.prototype.getDataLimits = function () {\n          var e = this.config,\n              t = this.getState(\"removed\");\n          return {\n            max: t ? -Infinity : e.maxValue,\n            min: t ? +Infinity : e.minValue\n          };\n        }, t.prototype._addLegend = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.config,\n              i = this.getFromEnv(\"legend\"),\n              l = r.upperBoxColor,\n              s = r.lowerBoxColor;\n          e = u, t = {\n            FCcolor: {\n              color: l + n.COMMA + s,\n              angle: 90,\n              ratio: \"50, 0\",\n              alpha: \"100, 100\"\n            }\n          }, o = {\n            label: (0, n.getFirstValue)(this.config.JSONData.seriesname),\n            index: this.getJSONIndex(),\n            mainDS: !0\n          }, r.includeInLegend ? ((a = i.getItem(this.config.legendItemId)) || (this.config.legendItemId = i.createItem(this), a = i.getItem(this.config.legendItemId), this.addExtEventListener(\"fc-click\", function () {\n            a.itemClickFn();\n          }, a)), a.configure(o), a.setStateCosmetics(\"default\", {\n            symbol: {\n              fill: (0, n.toRaphaelColor)(t),\n              rawFillColor: r.upperBoxColor,\n              stroke: (0, n.toRaphaelColor)(e)\n            },\n            background: {\n              legendBackgroundColor: (0, n.toRaphaelColor)(l),\n              alpha: 20\n            }\n          }), this.getState(\"visible\") ? a.removeLegendState(\"hidden\") : a.setLegendState(\"hidden\")) : this.config.legendItemId && i.disposeItem(this.config.legendItemId), this._mapChildren(function (e) {\n            e.getState(\"removed\") || (e.addToEnv(\"legendBackgroundColor\", l), e && e._addLegend(!0));\n          });\n        }, t.prototype.legendInteractivity = function () {\n          var e,\n              t,\n              o = this.getChildren(\"dataset\");\n\n          for (e = this.getState(\"visible\") ? \"hide\" : \"show\", t = 0; t < (o && o.length); t++) {\n            o[t][e]();\n          }\n\n          this[e]();\n        }, t.prototype.drawLabel = function () {\n          return this;\n        }, t.prototype.getName = function () {\n          return \"boxandwhisker2D\";\n        }, t.prototype.childChanged = function () {\n          return this;\n        }, t.prototype.show = function () {\n          e.prototype.show.call(this);\n        }, t.prototype.hide = function () {\n          e.prototype.hide.call(this);\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = T;\n    },\n    926: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = l(o(449)),\n          r = o(125),\n          n = o(132),\n          i = l(o(927));\n\n      function l(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = r.preDefStr.POLYGON,\n          u = r.preDefStr.SPOKE,\n          p = function p(e, t, o) {\n        return o.getFromEnv(\"animationManager\").setAnimation({\n          el: \"group\",\n          attr: e,\n          container: t,\n          component: o,\n          label: \"group\"\n        });\n      };\n\n      (0, n.addDep)({\n        name: \"boxandwhiskerlineAnimation\",\n        type: \"animationRule\",\n        extension: i[\"default\"]\n      });\n\n      var h = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getName = function () {\n          return \"boxandwhiskerline\";\n        }, t.prototype.createCoordinates = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n = this.components.data,\n              i = this.getFromEnv(\"yAxis\"),\n              l = this.getFromEnv(\"xAxis\"),\n              s = n.length,\n              c = this.components.data,\n              u = this.getFromEnv(\"columnXShift\"),\n              p = this.getFromEnv(\"columnWidth\");\n\n          for (o = 0; o < s; o++) {\n            t = (e = c[o]) && e.config, void 0 !== e && (a = l.getPixel(t._x), r = i.getPixel(t._y), t._Px = a + u + p / 2, t._Py = r);\n          }\n        }, t.prototype.getAllPlots = function (e, t) {\n          var o,\n              a = this.components.data,\n              r = [],\n              n = void 0;\n\n          for (n = 0, o = a.length; n < o; n++) {\n            (a[n].config._x >= e || a[n].config._x <= t) && r.push(a[n]);\n          }\n\n          return r;\n        }, t.prototype.calculateScrollRange = function () {\n          var e = this.config,\n              t = this.components.data;\n          e.scrollMinVal = 0, e.scrollMaxVal = t.length, e.scrollMinValForLabel = e.scrollMinVal, e.scrollMaxValForLabel = e.scrollMaxVal;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s = this.getFromEnv(\"xAxis\"),\n              c = this.components.data.length,\n              u = this.config,\n              p = u && u.radius || 0;\n\n          for (e += s.getTranslation(), a = Math.floor(Math.max(s.getValue(e - p), 0)), r = Math.ceil(Math.min(s.getValue(e + p), c - 1)), i = (l = this.getAllPlots(a, r)).length; i >= 0 && (!(o = l[i]) || !(n = this.isWithinShape(o, i, e, t))); i--) {\n            ;\n          }\n\n          return n;\n        }, t.prototype._addLegend = function (e) {\n          if (e) {\n            var t,\n                o,\n                a = this.getFromEnv(\"chart\"),\n                n = this.config,\n                i = a.getChildren(\"legend\")[0],\n                l = (0, r.pluckNumber)(n.drawanchors, 1);\n            n.includeinlegend ? (o = {\n              anchorSide: l ? n.anchorsides : 0,\n              label: (0, r.getFirstValue)(n.JSONData.seriesname),\n              customLegendIcon: !1,\n              spoke: \"spoke\" === n.dip ? 1 : 0,\n              drawLine: !n.showline,\n              index: this.getJSONIndex()\n            }, (t = i.getItem(this.config.legendItemId)) || (this.config.legendItemId = i.createItem(this), t = i.getItem(this.config.legendItemId), this.addExtEventListener(\"fc-click\", function () {\n              t.itemClickFn();\n            }, t)), t.configure(o), t.setStateCosmetics(\"default\", {\n              symbol: {\n                fill: (0, r.toRaphaelColor)({\n                  color: n.anchorbgcolor,\n                  alpha: n.anchorbgalpha\n                }),\n                rawFillColor: n.anchorbgcolor,\n                stroke: (0, r.toRaphaelColor)({\n                  color: n.anchorbordercolor,\n                  alpha: \"100\"\n                })\n              },\n              background: {\n                legendBackgroundColor: (0, r.toRaphaelColor)(this.getFromEnv(\"legendBackgroundColor\")),\n                alpha: 20\n              }\n            }), this.getState(\"visible\") ? t.removeLegendState(\"hidden\") : t.setLegendState(\"hidden\")) : this.config.legendItemId && i.disposeItem(this.config.legendItemId);\n          }\n        }, t.prototype.configureAttributes = function (t) {\n          e.prototype.configureAttributes.call(this, t);\n          var o = this.config.JSONData,\n              a = this.config;\n          this.setState(\"visible\", this.getLinkedParent().getState(\"visible\")), a.skipCommonElements = o.showline, a.dip = o.dip;\n        }, t.prototype.createContainer = function () {\n          var e,\n              t,\n              o = this.getType(),\n              a = this.groupName,\n              r = this.getLinkedParent().getLinkedParent(),\n              n = a || this.dsGroup || o;\n          !r.getChildContainer(n + \"VcanvasGroup\") && (n = \"default\"), e = r.getChildContainer(\"manager-defaultVcanvasGroup-lines\"), t = r.getChildContainer(n + \"ShadowVcanvasGroup\"), !this.getContainer(\"shadowGroup\") && this.addContainer(\"shadowGroup\", p({\n            name: \"shadow-group\"\n          }, t, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"commonElemsGroup\", p({\n            name: \"common-elems-group\"\n          }, e, this)), !this.getContainer(\"plotGroup\") && this.addContainer(\"plotGroup\", p({\n            name: \"common-elems-group\"\n          }, e, this)), !this.getContainer(\"labelGroup\") && this.addContainer(\"labelGroup\", p({\n            name: \"label-group\",\n            \"class\": \"fusioncharts-datalabels\",\n            opacity: 1\n          }, r.getChildContainer(\"vcanvasLabelGroup\"), this));\n        }, t.prototype._setConfigure = function (e, t) {\n          var o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              p,\n              h,\n              d = this.getFromEnv(\"chart\"),\n              f = this.config,\n              g = d.config,\n              m = this.config.JSONData,\n              v = e || m.data || [],\n              b = this.getFromEnv(\"xAxis\").getTicksLen(),\n              y = e && e.data.length,\n              x = \"Outliers\" === m.seriesname ? v.length : y || Math.min(b, v.length);\n\n          for (f.imageCount = 0, (n = this.components.data) || (n = this.components.data = []), f.maxRadius = -Infinity, i = 0; i < x; i++) {\n            e ? (o = e && e.data[i] || {}, a = void 0 !== t ? n[h = t + i] : n[h = n.length - x + i], l = h) : (a = n[i], o = v && v[i] || {}, l = i), a || (a = n[l] = {}), a.config || (a.config = {}), a.graphics || (a.graphics = {}), this._plotConfigure(l, o, y), h && h++, s = a && a.config, p = (0, r.pluck)(o.dip, m.dip), s.dip = p === c ? 0 : p === u ? 1 : 0, s.toolText = s.finalTooltext = \"<b>\" + m.seriesname + g.tooltipsepchar + \"</b>\" + s.displayValue;\n          }\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = h;\n    },\n    927: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.boxandwhiskerline\": function initialDatasetBoxandwhiskerline() {\n          return {\n            \"line.appearing\": [{\n              initialAttr: {\n                opacity: 0\n              },\n              finalAttr: {\n                opacity: 1\n              },\n              slot: \"plot\",\n              startEnd: {\n                start: .5,\n                end: 1\n              }\n            }],\n            \"anchor.appearing\": [{\n              initialAttr: {\n                opacity: 0\n              },\n              finalAttr: {\n                opacity: 1\n              },\n              slot: \"plot\",\n              startEnd: {\n                start: .5,\n                end: 1\n              }\n            }]\n          };\n        }\n      };\n    },\n    928: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.boxandwhisker2D\": function initialDatasetBoxandwhisker2D() {\n          return {\n            \"upperBox.appearing\": function upperBoxAppearing(e) {\n              return [{\n                initialAttr: {\n                  x: e.attr.x,\n                  y: e.attr.y + e.attr.height,\n                  height: 0,\n                  width: e.attr.width\n                },\n                slot: \"plot\",\n                startEnd: {\n                  start: 0,\n                  end: .5\n                }\n              }];\n            },\n            \"lowerBox.appearing\": function lowerBoxAppearing(e) {\n              return [{\n                initialAttr: {\n                  x: e.attr.x,\n                  y: e.attr.y,\n                  height: 0,\n                  width: e.attr.width\n                },\n                slot: \"plot\",\n                startEnd: {\n                  start: 0,\n                  end: .5\n                }\n              }];\n            },\n            \"path.appearing\": [{\n              initialAttr: {\n                opacity: 0\n              },\n              finalAttr: {\n                opacity: 1\n              },\n              slot: \"plot\",\n              startEnd: {\n                start: .5,\n                end: 1\n              }\n            }],\n            \"midline.appearing\": [{\n              initialAttr: {\n                opacity: 0\n              },\n              finalAttr: {\n                opacity: 1\n              },\n              slot: \"plot\",\n              startEnd: {\n                start: 0,\n                end: .2\n              }\n            }],\n            \"group.appearing\": function groupAppearing(e) {\n              return \"label-group\" === e.attr.name ? [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }] : [{\n                initialAttr: {\n                  opacity: 1\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }];\n            },\n            \"*\": null\n          };\n        }\n      };\n    },\n    929: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(516);\n\n      function n(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var i = \"manager-defaultVcanvasGroup-lines\",\n          l = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return n(t, e), t.prototype.createContainer = function () {\n          e.prototype.createContainer.call(this);\n          var t = this.getFromEnv(\"animationManager\"),\n              o = this.getLinkedParent().getChildContainer(\"defaultVcanvasGroup\");\n          !this.getChildContainer(i) && this.addChildContainer(i, t.setAnimation({\n            el: \"group\",\n            component: this,\n            attr: {\n              name: i\n            },\n            container: o\n          }));\n        }, t;\n      }(((a = r) && a.__esModule ? a : {\n        \"default\": a\n      })[\"default\"]);\n\n      t[\"default\"] = l;\n    },\n    930: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t,\n            o,\n            a,\n            n = e.getFromEnv(\"dataSource\").dataset,\n            l = void 0,\n            s = l = e.getChildren().canvas[0].getChildren(\"vCanvas\")[0],\n            c = e.config.defaultDatasetType || \"\";\n        n || e.setChartMessage(), t = e.getDSGroupdef(), (0, r.componentFactory)(l, t, \"datasetGroup_\" + c), (a = l.getChildren(\"datasetGroup_\" + c)) && (s = a[0]), o = e.getDSdef(), (0, r.componentFactory)(e, i[\"default\"], \"BoxAndWhiskerStatisticalCalc\"), l.getChildren(\"datasetGroup_\" + c)[0].addToEnv(\"BoxAndWhiskerStatisticalCalc\", e.getChildren(\"BoxAndWhiskerStatisticalCalc\")[0]), s.addToEnv(\"lineJSON\", e._getLineJSONdata()), (0, r.datasetFactory)(s, o, \"dataset\", n.length, n);\n      };\n      var a,\n          r = o(125),\n          n = o(931),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      };\n    },\n    931: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(138),\n          r = o(125);\n\n      function n(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var i = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return n(t, e), t.prototype.setArray = function (e) {\n          var t,\n              o,\n              a = this.getFromEnv(\"number-formatter\"),\n              n = r.COMMASTRING,\n              i = 0;\n\n          for (!e && (e = r.BLANK), o = e.replace(/\\s/g, r.BLANK).split(n), t = this.dataLength = o && o.length; t--;) {\n            i += o[t] = a.getCleanValue(o[t]);\n          }\n\n          o && o.sort(function (e, t) {\n            return e - t;\n          }), this.values = o, this.mean = i / this.dataLength, this.getFrequencies();\n        }, t.prototype.getQuartiles = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              i,\n              l = this.values,\n              s = this.dataLength,\n              c = s % 2;\n\n          switch (r.BLANKSTRING) {\n            case \"tukey\":\n              c ? (e = (s + 3) / 4, o = (3 * s + 1) / 4) : (e = (s + 2) / 4, o = (3 * s + 2) / 4);\n              break;\n\n            case \"mooremccabe\":\n              c ? o = 3 * (e = (s + 1) / 4) : (e = (s + 2) / 4, o = (3 * s + 2) / 4);\n              break;\n\n            case \"freundperles\":\n              e = (s + 3) / 4, o = (3 * s + 1) / 4;\n              break;\n\n            case \"mendenhallsincich\":\n              e = Math.round((s + 1) / 4), o = Math.round(3 * e);\n              break;\n\n            default:\n              o = 3 * (e = (s + 1) / 4);\n          }\n\n          return e -= 1, o -= 1, t = Math.floor(e), a = Math.floor(o), n = e - t ? l[t] + (l[Math.ceil(e)] - l[t]) * (e - t) : l[e], i = o - a ? l[a] + (l[Math.ceil(o)] - l[a]) * (o - a) : l[o], this.quartiles = {\n            q1: n,\n            q3: i\n          };\n        }, t.prototype.getMinMax = function () {\n          var e = this.values;\n          return {\n            min: e[0],\n            max: e[this.dataLength - 1]\n          };\n        }, t.prototype.getMean = function () {\n          return this.mean;\n        }, t.prototype.getMD = function () {\n          for (var e, t = this.mean, o = this.frequencies, a = o.length, r = 0; a--;) {\n            r += (e = o[a]).frequency * Math.abs(e.value - t);\n          }\n\n          return r / this.dataLength;\n        }, t.prototype.getSD = function () {\n          for (var e = this.mean, t = this.values, o = this.dataLength, a = o, r = 0; o--;) {\n            r += Math.pow(t[o] - e, 2);\n          }\n\n          return Math.sqrt(r / (a - 1));\n        }, t.prototype.getQD = function () {\n          return .5 * (this.quartiles.q3 - this.quartiles.q1);\n        }, t.prototype.getFrequencies = function () {\n          var e,\n              t,\n              o,\n              a = [],\n              n = this.dataLength,\n              i = this.values,\n              l = 0;\n\n          for (o = 0; o < n; o += 1) {\n            l += e = i[o], (0, r.defined)(a[o]) ? a[o].frequency += 1 : ((t = {}).value = e, t.frequency = 1, a[o] = t);\n          }\n\n          this.sum = l, this.frequencies = a;\n        }, t.prototype.getMedian = function () {\n          var e = this.dataLength,\n              t = .5 * e,\n              o = this.values;\n          return e % 2 == 0 ? (o[t] + o[t - 1]) / 2 : o[Math.floor(t)];\n        }, t;\n      }(a.ComponentInterface);\n\n      t[\"default\"] = i;\n    },\n    932: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(933),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    933: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = p(o(459)),\n          r = p(o(934)),\n          n = p(o(936)),\n          i = p(o(937)),\n          l = p(o(461)),\n          s = p(o(938)),\n          c = p(o(942)),\n          u = o(125);\n\n      function p(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function h(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var d = u.preDefStr.defaultFontStr,\n          f = u.preDefStr.divLineAlpha3DStr,\n          g = u.preDefStr.divLineAlphaStr,\n          m = u.preDefStr.altVGridColorStr,\n          v = u.preDefStr.altVGridAlphaStr,\n          b = u.preDefStr.altHGridColorStr,\n          y = u.preDefStr.altHGridAlphaStr,\n          x = u.preDefStr.colors.c000000,\n          k = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.tooltipsepchar = \" = \", o.hasGradientLegend = !0, o.registerFactory(\"axis\", i[\"default\"], [\"canvas\"]), o.registerFactory(\"legend\", c[\"default\"], [\"canvas\"]), o.registerFactory(\"colormanager-decider\", s[\"default\"], [\"legend\"]), o.registerFactory(\"dataset\", l[\"default\"], [\"colormanager-decider\", \"vCanvas\"]), o;\n        }\n\n        return h(t, e), t.getName = function () {\n          return \"HeatMap\";\n        }, t.prototype.getName = function () {\n          return \"HeatMap\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.isSingleSeries = !0, t.friendlyName = \"Heatmap Chart\", t.hasLegend = !0, t.defaultDatasetType = \"heatmap\", t.enablemousetracking = !0;\n        }, t.prototype._checkInvalidSpecificData = function () {\n          var e = this.getFromEnv(\"dataSource\"),\n              t = e.dataset,\n              o = e.colorrange;\n          if (!t || !o || !o.color && !Number(o.gradient)) return !0;\n        }, t.prototype.parseChartAttr = function (t) {\n          e.prototype.parseChartAttr.call(this, t), this.config.drawTrendRegion = 0;\n        }, t.prototype.configureAttributes = function (e) {\n          var t,\n              o,\n              a = this.config,\n              r = this.getFromEnv(\"dataSource\"),\n              n = this.config.skipConfigureIteration = {},\n              i = e.dataset,\n              l = [];\n\n          if (t = r.rows && r.rows.row.filter(function (e) {\n            return \"\" !== e.id && e.id !== undefined;\n          }), o = r.columns && r.columns.column.filter(function (e) {\n            return \"\" !== e.id && e.id !== undefined;\n          }), !t || !o) {\n            for (var s = 0; s < i.length; s++) {\n              for (var c = 0; c < i[s].data.length; c++) {\n                l.push(i[s].data[c]);\n              }\n            }\n\n            t || (t = l.map(function (e) {\n              return e.rowid;\n            }).filter(function (e, t, o) {\n              return o.indexOf(e) === t;\n            })), o || (o = l.map(function (e) {\n              return e.columnid;\n            }).filter(function (e, t, o) {\n              return o.indexOf(e) === t;\n            }));\n          }\n\n          this.parseChartAttr(e), this.addToEnv(\"chartColorRange\", e.colorrange || {}), this.createComponent(e), this._feedAxesRawData(), n.axis = !0, this.addToEnv(\"totalRows\", t.length), this.addToEnv(\"totalColumns\", o.length), this._createToolBox(), this.configureChildren(), this.asyncDraw(), this.getFromEnv(\"toolTipController\").setStyle({\n            bgColor: (0, u.convertColor)(a.tooltipbgcolor || \"FFF\", a.tooltipbgalpha || 100),\n            rawBgColor: (a.tooltipbgcolor || \"FFF\").replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            fontColor: (a.tooltipcolor || a.basefontcolor || \"545454\").replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            borderColor: (0, u.convertColor)(a.tooltipbordercolor || \"666\", a.tooltipborderalpha || 100),\n            rawBorderColor: (a.tooltipbordercolor || \"666\").replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            bgAlpha: (0, u.pluckNumber)(a.tooltipbgalpha, 100),\n            borderThickness: (0, u.pluckNumber)(a.tooltipborderthickness, 1),\n            showToolTipShadow: (0, u.pluckNumber)(a.showtooltipshadow || 0),\n            borderRadius: (0, u.pluckNumber)(a.tooltipborderradius, 0),\n            \"font-size\": a.basefontsize || 10,\n            \"font-family\": a.basefont || this.getFromEnv(\"style\").inCanfontFamily,\n            padding: (0, u.pluckNumber)(a.tooltippadding || 3),\n            borderAlpha: (0, u.pluckNumber)(a.tooltipborderalpha, 100)\n          });\n        }, t.prototype._postSpaceManagement = function () {\n          var e = this.config,\n              t = this.getChildren(\"xAxis\")[0],\n              o = this.getFromEnv(\"legend\"),\n              a = e.xDepth;\n          this.setAxisDimention(), t && t.shiftLabels(-a, 0), o && o.postSpaceManager(), this.allocateDimensionOfChartMenuBar();\n        }, t.prototype.setAxisDimention = function () {\n          var e = this.getChildren(\"xAxis\") && this.getChildren(\"xAxis\")[0],\n              t = this.getChildren(\"yAxis\") && this.getChildren(\"yAxis\")[0],\n              o = this.getFromEnv(\"chartConfig\"),\n              a = o.placeAxisLabelsOnTop,\n              r = this.getChildren(\"canvas\")[0],\n              n = r.config,\n              i = r.getEffectiveDimensions(),\n              l = i.left,\n              s = i.top,\n              c = i.width,\n              u = i.height,\n              p = i.paddingLeft,\n              h = i.paddingRight,\n              d = n && n.canvasBorderWidth,\n              f = n && n.canvasPadding;\n          e && e.setAxisConfig({\n            canvasPaddingLeft: Math.max(p, f),\n            canvasPaddingRight: Math.max(h, f)\n          }), e && e.setAxisDimention({\n            x: l,\n            y: a ? s + (o.shift || 0) - d : s + u + (o.shift || 0) + d,\n            opposite: a ? s + u + d : s - d,\n            axisLength: c\n          }), t && t.setAxisDimention({\n            x: l - d,\n            y: s,\n            opposite: l + c + d,\n            axisLength: u\n          });\n        }, t.prototype._feedAxesRawData = function () {\n          var e,\n              t,\n              o = this.getFromEnv(\"color-manager\"),\n              a = this.getFromEnv(\"dataSource\"),\n              r = a.chart,\n              n = this.config.is3D,\n              i = n ? u.chartPaletteStr.chart3D : u.chartPaletteStr.chart2D;\n          return e = {\n            mapTickValuesById: !0,\n            isVertical: !1,\n            isReverse: !1,\n            isOpposit: !!this.config.placeAxisLabelsOnTop,\n            outCanfontFamily: (0, u.pluck)(r.outcnvbasefont, r.basefont, d),\n            outCanfontSize: (0, u.pluckFontSize)(r.outcnvbasefontsize, r.basefontsize, 10),\n            outCancolor: (0, u.pluck)(r.outcnvbasefontcolor, r.basefontcolor, o.getColor(i.baseFontColor)).replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: r.xaxisnamepadding,\n            axisValuePadding: r.labelpadding,\n            axisNameFont: r.xaxisnamefont,\n            axisNameFontSize: r.xaxisnamefontsize,\n            axisNameFontColor: r.xaxisnamefontcolor,\n            axisNameFontBold: r.xaxisnamefontbold,\n            axisNameFontItalic: r.xaxisnamefontitalic,\n            axisNameBgColor: r.xaxisnamebgcolor,\n            axisNameBorderColor: r.xaxisnamebordercolor,\n            axisNameAlpha: r.xaxisnamealpha,\n            axisNameFontAlpha: r.xaxisnamefontalpha,\n            axisNameBgAlpha: r.xaxisnamebgalpha,\n            axisNameBorderAlpha: r.xaxisnameborderalpha,\n            axisNameBorderPadding: r.xaxisnameborderpadding,\n            axisNameBorderRadius: r.xaxisnameborderradius,\n            axisNameBorderThickness: r.xaxisnameborderthickness,\n            axisNameBorderDashed: r.xaxisnameborderdashed,\n            axisNameBorderDashLen: r.xaxisnameborderdashlen,\n            axisNameBorderDashGap: r.xaxisnameborderdashgap,\n            useEllipsesWhenOverflow: r.useellipseswhenoverflow,\n            divLineColor: (0, u.pluck)(r.vdivlinecolor, r.divlinecolor, o.getColor(i.divLineColor)),\n            divLineAlpha: (0, u.pluck)(r.vdivlinealpha, r.divlinealpha, n ? o.getColor(f) : o.getColor(g)),\n            divLineThickness: (0, u.pluckNumber)(r.vdivlinethickness, r.divlinethickness, 1),\n            divLineIsDashed: Boolean((0, u.pluckNumber)(r.vdivlinedashed, r.vdivlineisdashed, r.divlinedashed, r.divlineisdashed, 0)),\n            divLineDashLen: (0, u.pluckNumber)(r.vdivlinedashlen, r.divlinedashlen, 4),\n            divLineDashGap: (0, u.pluckNumber)(r.vdivlinedashgap, r.divlinedashgap, 2),\n            showAlternateGridColor: (0, u.pluckNumber)(r.showalternatevgridcolor, 0),\n            alternateGridColor: (0, u.pluck)(r.alternatevgridcolor, o.getColor(m)),\n            alternateGridAlpha: (0, u.pluck)(r.alternatevgridalpha, o.getColor(v)),\n            numDivLines: r.numvdivlines,\n            labelFont: r.labelfont,\n            labelFontSize: r.labelfontsize,\n            labelFontColor: r.labelfontcolor,\n            labelFontAlpha: r.labelalpha,\n            labelFontBold: r.labelfontbold,\n            labelFontItalic: r.labelfontitalic,\n            axisName: r.xaxisname,\n            axisMinValue: r.xaxisminvalue,\n            axisMaxValue: r.xaxismaxvalue,\n            setAdaptiveMin: r.setadaptivexmin,\n            adjustDiv: r.adjustvdiv,\n            labelDisplay: r.labeldisplay,\n            showLabels: (0, u.pluckNumber)(r.showxaxislabels, r.showlabels),\n            rotateLabels: r.rotatexaxislabels,\n            slantLabel: (0, u.pluckNumber)(r.slantlabels, r.slantlabel),\n            labelStep: (0, u.pluckNumber)(r.labelstep, r.xaxisvaluesstep),\n            showAxisValues: (0, u.pluckNumber)(r.showxaxisvalues, r.showxaxisvalue),\n            maxLabelHeight: r.maxlabelheight,\n            showZeroPlane: r.showvzeroplane,\n            zeroPlaneColor: r.vzeroplanecolor,\n            zeroPlaneThickness: r.vzeroplanethickness,\n            zeroPlaneAlpha: r.vzeroplanealpha,\n            showZeroPlaneValue: r.showvzeroplanevalue,\n            trendlineColor: r.trendlinecolor,\n            trendlineToolText: r.trendlinetooltext,\n            trendlineThickness: r.trendlinethickness,\n            trendlineAlpha: r.trendlinealpha,\n            showTrendlinesOnTop: r.showtrendlinesontop,\n            showAxisLine: (0, u.pluckNumber)(r.showxaxisline, r.showaxislines, r.drawAxisLines, 0),\n            axisLineThickness: (0, u.pluckNumber)(r.xaxislinethickness, r.axislinethickness, 1),\n            axisLineAlpha: (0, u.pluckNumber)(r.xaxislinealpha, r.axislinealpha, 100),\n            axisLineColor: (0, u.pluck)(r.xaxislinecolor, r.axislinecolor, x)\n          }, t = {\n            mapTickValuesById: !0,\n            isVertical: !0,\n            isReverse: !1,\n            isOpposit: !1,\n            outCanfontFamily: (0, u.pluck)(r.outcnvbasefont, r.basefont, d),\n            outCanfontSize: (0, u.pluckFontSize)(r.outcnvbasefontsize, r.basefontsize, 10),\n            outCancolor: (0, u.pluck)(r.outcnvbasefontcolor, r.basefontcolor, o.getColor(i.baseFontColor)).replace(/^#?([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: r.yaxisnamepadding,\n            axisValuePadding: r.yaxisvaluespadding,\n            axisNameFont: r.yaxisnamefont,\n            axisNameFontSize: r.yaxisnamefontsize,\n            axisNameFontColor: r.yaxisnamefontcolor,\n            axisNameFontBold: r.yaxisnamefontbold,\n            axisNameFontItalic: r.yaxisnamefontitalic,\n            axisNameBgColor: r.yaxisnamebgcolor,\n            axisNameBorderColor: r.yaxisnamebordercolor,\n            axisNameAlpha: r.yaxisnamealpha,\n            axisNameFontAlpha: r.yaxisnamefontalpha,\n            axisNameBgAlpha: r.yaxisnamebgalpha,\n            axisNameBorderAlpha: r.yaxisnameborderalpha,\n            axisNameBorderPadding: r.yaxisnameborderpadding,\n            axisNameBorderRadius: r.yaxisnameborderradius,\n            axisNameBorderThickness: r.yaxisnameborderthickness,\n            axisNameBorderDashed: r.yaxisnameborderdashed,\n            axisNameBorderDashLen: r.yaxisnameborderdashlen,\n            axisNameBorderDashGap: r.yaxisnameborderdashgap,\n            axisNameWidth: r.yaxisnamewidth,\n            useEllipsesWhenOverflow: r.useellipseswhenoverflow,\n            rotateAxisName: (0, u.pluckNumber)(r.rotateyaxisname, 1),\n            axisName: r.yaxisname,\n            showAlternateGridColor: (0, u.pluckNumber)(r.showalternatehgridcolor, 1),\n            alternateGridColor: (0, u.pluck)(r.alternatehgridcolor, o.getColor(b)),\n            alternateGridAlpha: (0, u.pluck)(r.alternatehgridalpha, o.getColor(y)),\n            numDivLines: r.numdivlines,\n            axisMinValue: r.yaxisminvalue,\n            axisMaxValue: r.yaxismaxvalue,\n            setAdaptiveMin: r.setadaptiveymin,\n            adjustDiv: r.adjustdiv,\n            labelStep: r.yaxisvaluesstep,\n            showLabels: (0, u.pluckNumber)(r.showyaxislabels, r.showlabels),\n            maxLabelWidthPercent: r.maxlabelwidthpercent,\n            showAxisValues: (0, u.pluckNumber)(r.showyaxisvalues, r.showyaxisvalue),\n            divLineColor: (0, u.pluck)(r.hdivlinecolor, o.getColor(i.divLineColor)),\n            divLineAlpha: (0, u.pluck)(r.hdivlinealpha, o.getColor(g)),\n            divLineThickness: (0, u.pluckNumber)(r.hdivlinethickness, 1),\n            divLineIsDashed: Boolean((0, u.pluckNumber)(r.hdivlinedashed, r.hdivlineisdashed, 0)),\n            divLineDashLen: (0, u.pluckNumber)(r.hdivlinedashlen, 4),\n            divLineDashGap: (0, u.pluckNumber)(r.hdivlinedashgap, 2),\n            showZeroPlane: r.showzeroplane,\n            zeroPlaneColor: r.zeroplanecolor,\n            zeroPlaneThickness: r.zeroplanethickness,\n            zeroPlaneAlpha: r.zeroplanealpha,\n            showZeroPlaneValue: r.showzeroplanevalue,\n            trendlineColor: r.trendlinecolor,\n            trendlineToolText: r.trendlinetooltext,\n            trendlineThickness: r.trendlinethickness,\n            trendlineAlpha: r.trendlinealpha,\n            showTrendlinesOnTop: r.showtrendlinesontop,\n            showAxisLine: (0, u.pluckNumber)(r.showyaxisline, r.showaxislines, r.drawAxisLines, 0),\n            axisLineThickness: (0, u.pluckNumber)(r.yaxislinethickness, r.axislinethickness, 1),\n            axisLineAlpha: (0, u.pluckNumber)(r.yaxislinealpha, r.axislinealpha, 100),\n            axisLineColor: (0, u.pluck)(r.yaxislinecolor, r.axislinecolor, x)\n          }, e.vtrendlines = a.vtrendlines, t.trendlines = a.trendlines, {\n            yAxisConf: [t],\n            xAxisConf: [e]\n          };\n        }, t.prototype._setCategories = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l,\n              s,\n              c,\n              p = this.getFromEnv(\"dataSource\"),\n              h = this.getChildren(\"xAxis\"),\n              d = this.getChildren(\"yAxis\"),\n              f = [],\n              g = [];\n          if (!p.columns || !p.rows) for (p.columns = {}, p.columns.column = n = [], p.rows = {}, p.rows.row = i = [], o = 0; o < (p.dataset && p.dataset.length); o++) {\n            for (e = p.dataset && p.dataset[o].data && p.dataset[o].data.length, t = 0; t < e; t++) {\n              for (l = !0, s = !0, c = 0; c < n.length; c++) {\n                p.dataset[o].data[t].columnid == n[c].id && (l = !1);\n              }\n\n              for (l && (a = {\n                id: p.dataset[o].data[t].columnid,\n                label: p.dataset[o].data[t].columnid\n              }, p.columns.column.push(a)), c = 0; c < i.length; c++) {\n                p.dataset[o].data[t].rowid == i[c].id && (s = !1);\n              }\n\n              s && (r = {\n                id: p.dataset[o].data[t].rowid,\n                label: p.dataset[o].data[t].rowid\n              }, p.rows.row.push(r));\n            }\n          }\n\n          for (n = p.columns.column, i = p.rows.row, t = 0; t < (n && n.length); t++) {\n            n[t].label = (0, u.pluck)(n[t].label, n[t].name, n[t].id), void 0 !== n[t].label && f.push(n[t]);\n          }\n\n          for (p.columns.column = f, t = 0; t < (i && i.length); t++) {\n            i[t].label = (0, u.pluck)(i[t].label, i[t].name, i[t].id), void 0 !== i[t].label && g.push(i[t]);\n          }\n\n          p.rows.row = g, p.columns && h[0].setTickValues(p.columns.column), p.rows && d[0].setTickValues(p.rows.row), h[0].setAxisConfig({\n            categoryNumDivLines: this.getFromEnv(\"totalColumns\") - 1,\n            categoryDivLinesFromZero: 0,\n            showAlternateGridColor: 0\n          }), d[0].setAxisConfig({\n            categoryNumDivLines: this.getFromEnv(\"totalRows\") - 1,\n            categoryDivLinesFromZero: 0,\n            showAlternateGridColor: 0\n          });\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t.prototype.getDSGroupdef = function () {\n          return n[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = k;\n    },\n    934: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(138),\n          n = o(125),\n          i = o(132),\n          l = o(935),\n          s = (a = l) && a.__esModule ? a : {\n        \"default\": a\n      },\n          c = o(136);\n\n      function u(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var p = n.preDefStr.pStr,\n          h = n.preDefStr.sStr,\n          d = n.preDefStr.miterStr,\n          f = n.preDefStr.hiddenStr,\n          g = n.preDefStr.showHoverEffectStr,\n          m = n.preDefStr.POSITION_START,\n          v = n.preDefStr.POSITION_TOP,\n          b = n.preDefStr.POSITION_END,\n          y = n.preDefStr.POSITION_BOTTOM,\n          x = n.preDefStr.DEFAULT,\n          k = function k(e) {\n        return void 0 !== e && null !== e;\n      },\n          w = function w(e, t, o) {\n        return o.getFromEnv(\"animationManager\").setAnimation({\n          el: \"group\",\n          attr: e,\n          container: t,\n          component: o,\n          label: \"group\"\n        });\n      },\n          C = \"rgba(192,192,192,\" + (n.isIE ? .002 : 1e-6) + \")\",\n          N = n.hasTouch ? n.TOUCH_THRESHOLD_PIXELS : n.CLICK_THRESHOLD_PIXELS,\n          S = Math.max,\n          A = Math.min,\n          E = Math.abs;\n\n      (0, i.addDep)({\n        name: \"heatmapAnimation\",\n        type: \"animationRule\",\n        extension: s[\"default\"]\n      });\n\n      var D = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.components = {}, o.graphics = {}, o.dataSetArray = [], o;\n        }\n\n        return u(t, e), t.prototype.getType = function () {\n          return \"dataset\";\n        }, t.prototype.getName = function () {\n          return \"heatMap\";\n        }, t.prototype.configureAttributes = function (e) {\n          if (!e) return !1;\n          this.trimData(e), this.config.JSONData = e;\n\n          var t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k = this.getFromEnv(\"chart\"),\n              w = this.getFromEnv(\"chartConfig\").style,\n              C = this.config,\n              N = C.JSONData,\n              S = N.data,\n              A = S && S.length,\n              E = this.getFromEnv(\"chart-attrib\"),\n              D = this.getFromEnv(\"color-manager\"),\n              _ = this.index || this.positionIndex,\n              T = C.plotColor = D.getPlotColor(_),\n              L = (0, n.pluckNumber)(N.dashed, E.plotborderdashed),\n              P = this.components.data,\n              O = this.components.plotGrid = [],\n              V = this.getFromEnv(\"number-formatter\"),\n              M = k.isBar,\n              F = k.config.is3D,\n              I = -Infinity,\n              B = +Infinity,\n              R = this.getFromEnv(\"totalRows\"),\n              j = this.getFromEnv(\"totalColumns\");\n\n          for (g = 0; g < R; g++) {\n            for (O.push([]), m = 0; m < j; m++) {\n              O[g].push([]);\n            }\n          }\n\n          for (this.setState(\"visible\", 1 === (0, n.pluckNumber)(this.getState(\"visible\"), this.config.JSONData.visible, !Number(this.config.JSONData.initiallyhidden), 1)), t = C.showplotborder = (0, n.pluckNumber)(E.showplotborder, F ? 0 : 1), C.plotDashLen = o = (0, n.pluckNumber)(E.plotborderdashlen, 5), C.plotDashGap = a = (0, n.pluckNumber)(E.plotborderdashgap, 4), C.plotfillAngle = (0, n.pluckNumber)(360 - E.plotfillangle, M ? 180 : 90), C.plotFillAlpha = i = (0, n.pluck)(N.alpha, E.plotfillalpha, \"100\"), C.plotColor = T = (0, n.pluck)(N.color, T), C.isRoundEdges = r = (0, n.pluckNumber)(E.useroundedges, 0), C.plotRadius = (0, n.pluckNumber)(E.useRoundEdges, C.isRoundEdges ? 1 : 0), C.plotFillRatio = (0, n.pluck)(N.ratio, E.plotfillratio), C.plotgradientcolor = (0, n.getDefinedColor)(E.plotgradientcolor, D.getColor(\"plotGradientColor\")), C.plotBorderAlpha = t ? (0, n.pluck)(E.plotborderalpha, i, \"100\") : 0, C.plotBorderColor = (0, n.pluck)(E.plotbordercolor, F ? \"FFFFFF\" : D.getColor(\"plotBorderColor\")), C.plotBorderThickness = (0, n.pluckNumber)(E.plotborderthickness, 1), C.plotBorderDashStyle = L ? (0, n.getDashStyle)(o, a) : \"none\", C.showValues = (0, n.pluckNumber)(N.showvalues, E.showvalues, 1), C.valuePadding = (0, n.pluckNumber)(E.valuepadding, 2), C.enableAnimation = d = (0, n.pluckNumber)(E.animation, E.defaultanimation, 1), C.animation = !!d && {\n            duration: 1e3 * (0, n.pluckNumber)(E.animationduration, 1)\n          }, C.transposeAnimation = (0, n.pluckNumber)(E.transposeanimation, d), C.transposeAnimDuration = 1e3 * (0, n.pluckNumber)(E.transposeanimduration, .2), C.showShadow = r || F ? (0, n.pluckNumber)(E.showshadow, 1) : (0, n.pluckNumber)(E.showshadow, D.getColor(\"showShadow\")), C.showHoverEffect = (0, n.pluckNumber)(E.plothovereffect, E.showhovereffect, void 0), C.showTooltip = (0, n.pluckNumber)(E.showtooltip, 1), C.definedGroupPadding = Math.max((0, n.pluckNumber)(E.plotspacepercent), 0), C.plotSpacePercent = Math.max((0, n.pluckNumber)(E.plotspacepercent, 20) % 100, 0), C.maxColWidth = (0, n.pluckNumber)(M ? E.maxbarheight : E.maxcolwidth, 50), C.plotPaddingPercent = (0, n.pluckNumber)(E.plotpaddingpercent), C.rotateValues = (0, n.pluckNumber)(E.rotatevalues) ? 270 : 0, C.placeValuesInside = (0, n.pluckNumber)(E.placevaluesinside, 0), C.defaultPadding = {\n            left: .5,\n            right: .5,\n            top: .5,\n            bottom: .5\n          }, v = w.inCanfontFamily, x = w.inCanfontSize, b = parseInt(x, 10 || 10), y = w.inCancolor, \"normal\", \"normal\", C.tlLabelStyle = {\n            fontFamily: (0, n.pluck)(E.tlfont, v),\n            fontSize: (0, n.pluckNumber)(E.tlfontsize, b) + \"px\",\n            color: (0, n.convertColor)((0, n.pluck)(E.tlfontcolor, y), 100),\n            fontWeight: \"normal\",\n            fontStyle: \"normal\"\n          }, (0, n.setLineHeight)(C.tlLabelStyle), C.trLabelStyle = {\n            fontFamily: (0, n.pluck)(E.trfont, v),\n            fontSize: (0, n.pluckNumber)(E.trfontsize, b) + \"px\",\n            color: (0, n.convertColor)((0, n.pluck)(E.trfontcolor, y), 100),\n            fontWeight: \"normal\",\n            fontStyle: \"normal\"\n          }, C.brLabelStyle = {\n            fontFamily: (0, n.pluck)(E.brfont, v),\n            fontSize: (0, n.pluckNumber)(E.brfontsize, b) + \"px\",\n            color: (0, n.convertColor)((0, n.pluck)(E.brfontcolor, y), 100),\n            fontWeight: \"normal\",\n            fontStyle: \"normal\"\n          }, C.blLabelStyle = {\n            fontFamily: (0, n.pluck)(E.blfont, v),\n            fontSize: (0, n.pluckNumber)(E.blfontsize, b) + \"px\",\n            color: (0, n.convertColor)((0, n.pluck)(E.blfontcolor, y), 100),\n            fontWeight: \"normal\",\n            fontStyle: \"normal\"\n          }, C.use3DLighting = (0, n.pluckNumber)(E.use3dlighting, 1), C.parentYAxis = (0, n.pluck)(N.parentyaxis && N.parentyaxis.toLowerCase(), p) === h ? 1 : 0, P || (P = this.components.data = []), f = 0; f < A; f++) {\n            l = S && S[f], u = (c = P[f]) && c.config, c || (c = P[f] = {\n              graphics: {}\n            }), c.config || (u = P[f].config = {}), u.setValue = s = V.getCleanValue(l.value), I = Math.max(I, s), B = Math.min(B, s);\n          }\n\n          C.maxValue = I, C.minValue = B, this._setConfigure(), this.setState(\"dirty\", !0);\n        }, t.prototype._setConfigure = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              f,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x,\n              k,\n              w,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G = this,\n              H = G.getFromEnv(\"chart\"),\n              W = G.config,\n              z = G.config.JSONData,\n              U = z.data,\n              J = U && U.length,\n              K = G.getFromEnv(\"chart-attrib\"),\n              q = G.getFromEnv(\"color-manager\"),\n              Y = G.index || G.positionIndex,\n              X = W.showplotborder,\n              Q = W.plotColor = q.getPlotColor(Y),\n              Z = (0, n.pluckNumber)(K.showtooltip, 1),\n              $ = (0, n.parseUnsafeString)(K.yaxisname),\n              ee = (0, n.parseUnsafeString)(K.xaxisname),\n              te = (0, n.parseUnsafeString)((0, n.pluck)(K.tooltipsepchar, \": \")),\n              oe = (0, n.pluckNumber)(K.useplotgradientcolor, 1),\n              ae = \"\",\n              re = W.plotDashLen,\n              ne = W.plotDashGap,\n              ie = W.plotBorderThickness,\n              le = W.isRoundEdges,\n              se = W.showHoverEffect,\n              ce = W.plotfillAngle,\n              ue = W.plotFillAlpha,\n              pe = W.plotFillRatio,\n              he = W.plotBorderAlpha,\n              de = W.plotBorderColor,\n              fe = G.getFromEnv(\"chartColorRange\"),\n              ge = G.getFromEnv(\"xAxis\"),\n              me = G.getFromEnv(\"yAxis\"),\n              ve = W.mapByPercent = (0, n.pluckNumber)(fe.mapbypercent, 0),\n              be = W.mapByCategory = (0, n.pluckNumber)(K.mapbycategory, 0),\n              ye = fe && (0, n.pluckNumber)(fe.gradient),\n              xe = G.components.data,\n              ke = G.getFromEnv(\"number-formatter\"),\n              we = H.isBar,\n              Ce = H.config.is3D,\n              Ne = W.parentYAxis,\n              Se = W.maxValue,\n              Ae = W.minValue,\n              Ee = (0, n.getValidValue)(K.tltype, n.BLANK),\n              De = (0, n.getValidValue)(K.trtype, n.BLANK),\n              _e = (0, n.getValidValue)(K.bltype, n.BLANK),\n              Te = (0, n.getValidValue)(K.brtype, n.BLANK),\n              Le = n.BLANK,\n              Pe = n.BLANK,\n              Oe = n.BLANK,\n              Ve = n.BLANK,\n              Me = H.getFromEnv(\"colorManager\");\n\n          if (A = Se - Ae, W.eventAttached || (G.addExtEventListener(\"legendUpdate\", function (e, t) {\n            if (\"legend\" === t.component) t.legendItem.hasState(\"hidden\") ? G.show(t.legendItem, e) : G.hide(t.legendItem, e);else for (M = t.maxMinArray, F = M.length, S = 0; S < F; S++) {\n              G.updatePlot(M[S].min, M[S].max);\n            }\n          }, Me), W.eventAttached = !0), (!ye || be) && (W.colorMap = [], fe.color)) for (S = 0; S < fe.color.length; S++) {\n            W.colorMap[S] = {\n              config: fe.color[S],\n              dataSet: G\n            }, W.colorMap[S].config.visible = !0;\n          }\n\n          for (S = 0; S < J; S++) {\n            r = U && U[S], i = (s = (l = xe[S]) && l.config).setValue, s.showValue = (0, n.pluckNumber)(r.showvalue, W.showValues), s.setLink = (0, n.pluck)(r.link), s.toolTipValue = I = ke.dataLabels(i, Ne), s.setDisplayValue = N = (0, n.parseUnsafeString)(r.displayvalue), s.displayValue = (0, n.pluck)(N, I), B = (0, n.pluckNumber)(r.dashed), R = (0, n.pluckNumber)(r.dashlen, re), j = ne = (0, n.pluckNumber)(r.dashgap, ne), s.plotBorderDashStyle = 1 === B ? (0, n.getDashStyle)(R, j) : 0 === B ? \"none\" : W.plotBorderDashStyle, s.percentValue = ve ? P = r.value && Math.round((r.value - Ae) / A * 1e4) / 100 : void 0, s.value = V = be ? r.colorrangelabel || r.categoryid : ve ? P : s.setValue, E = Me.getColor(V), l.legendItemIndex = E.seriesIndex, s.legendItemId = E.legendItemId, E && !E.code && (E.code = \"ffffff\"), s.plotFillAlpha = ue = (0, n.pluckNumber)(r.alpha, E && E.oriAlpha, W.plotFillAlpha), Q = (0, n.pluck)(r.color, E && E.code), i < 0 && !le && (ce = we ? 180 - ce : 360 - ce), s.colorArr = (0, n.getColumnColor)(Q + \",\" + W.plotgradientcolor, ue.toString(), pe, ce, le, de, he.toString(), we ? 1 : 0, !!Ce), E && E.outOfRange ? (s.visible = !1, s.displayValue = n.BLANKSTRING) : (s.visible = !0, s.color = (0, n.convertColor)(Q, s.plotFillAlpha), 0 !== se && (p = (0, n.pluck)(r.hovercolor, z.hovercolor, K.plotfillhovercolor, K.columnhovercolor, Q), h = (0, n.pluck)(r.hoveralpha, z.hoveralpha, K.plotfillhoveralpha, K.columnhoveralpha, \"25\"), !(0, n.pluck)(r.hovergradientcolor, z.hovergradientcolor, K.plothovergradientcolor, !oe && n.BLANKSTRING) && n.BLANKSTRING, d = (0, n.pluck)(r.hoverratio, z.hoverratio, K.plothoverratio, pe), f = (0, n.pluckNumber)(360 - r.hoverangle, 360 - z.hoverangle, 360 - K.plothoverangle, ce), g = (0, n.pluck)(r.borderhovercolor, z.borderhovercolor, K.plotborderhovercolor, de), m = (0, n.pluck)(r.borderhoveralpha, z.borderhoveralpha, K.plotborderhoveralpha, he, ue), v = (0, n.pluckNumber)(r.borderhoverthickness, z.borderhoverthickness, K.plotborderhoverthickness, ie), b = (0, n.pluckNumber)(r.borderhoverdashed, z.borderhoverdashed, K.plotborderhoverdashed), y = (0, n.pluckNumber)(r.borderhoverdashgap, z.borderhoverdashgap, K.plotborderhoverdashgap, re), x = (0, n.pluckNumber)(r.borderhoverdashlen, z.borderhoverdashlen, K.plotborderhoverdashlen, ne), k = b ? (0, n.getDashStyle)(x, y) : W.plotBorderDashStyle, 1 == se && p === Q && (p = (0, n.getLightColor)(p, 70)), w = (0, n.getColumnColor)(p, h, d, f, le, g, m.toString(), we ? 1 : 0, !!Ce), s.setRolloutAttr = {\n              fill: (0, n.toRaphaelColor)(s.color),\n              stroke: X && (0, n.toRaphaelColor)(s.colorArr[1]) || C,\n              \"stroke-width\": ie,\n              \"stroke-dasharray\": []\n            }, s.setRolloverAttr = {\n              fill: (0, n.toRaphaelColor)(w[0]),\n              stroke: X && (0, n.toRaphaelColor)(w[1]) || C,\n              \"stroke-width\": v,\n              \"stroke-dasharray\": k\n            }), ve && (P = ke.percentValue(P)), s.setValue = i = ke.getCleanValue(r.value), s.toolTipValue = ke.dataLabels(i, Ne), e = s.toolTipValue, o = (0, n.getValidValue)((0, n.parseUnsafeString)((0, n.pluck)(r.tooltext, z.plottooltext, K.plottooltext))), s.tlLabel = D = (0, n.parseUnsafeString)((0, n.pluck)(r.tllabel, r.ltlabel)), s.trLabel = _ = (0, n.parseUnsafeString)((0, n.pluck)(r.trlabel, r.rtlabel)), s.blLabel = T = (0, n.parseUnsafeString)((0, n.pluck)(r.bllabel, r.lblabel)), s.brLabel = L = (0, n.parseUnsafeString)((0, n.pluck)(r.brlabel, r.rblabel)), N = (0, n.getValidValue)((0, n.parseUnsafeString)(r.displayvalue)), O = be ? N : (0, n.pluck)(r.displayvalue, e), s.displayValue = (0, n.pluck)(N, P, s.toolTipValue), Ee !== n.BLANK && (Le = \"<b>\" + Ee + te + \"</b>\"), De !== n.BLANK && (Pe = \"<b>\" + De + te + \"</b>\"), _e !== n.BLANK && (Oe = \"<b>\" + _e + te + \"</b>\"), Te !== n.BLANK && (Ve = \"<b>\" + Te + te + \"</b>\"), c = ge.getCategoryFromId(U[S].columnid.toLowerCase()), u = me.getCategoryFromId(U[S].rowid.toLowerCase()), Z && (null === e ? ae = !1 : void 0 !== o ? (a = [1, 2, 5, 6, 7, 14, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 117], t = {\n              formattedValue: e,\n              value: r.value,\n              yaxisName: $,\n              xaxisName: ee,\n              displayValue: N,\n              percentValue: ve ? P : n.BLANK,\n              tlLabel: D,\n              trLabel: _,\n              blLabel: T,\n              brLabel: L,\n              rowLabel: u.tickObj && u.tickObj.label,\n              columnLabel: c.tickObj && c.tickObj.label,\n              percentDataValue: ve ? P : n.BLANK,\n              trtype: De,\n              tltype: Ee,\n              brType: Te,\n              blType: _e,\n              colorRangeLabel: s.colorRangeLabel\n            }, ae = (0, n.parseTooltext)(o, a, t, r, K, t)) : ae = (ve ? \"<b>Value\" + te + \"</b>\" + e + \"<br /><b>Percentage\" + te + \"</b>\" + P : O) + (D !== n.BLANK ? \"<br />\" + (Le + D) : n.BLANK) + (_ !== n.BLANK ? \"<br />\" + Pe + _ : n.BLANK) + (T !== n.BLANK ? \"<br />\" + Oe + T : n.BLANK) + (L !== n.BLANK ? \"<br />\" + Ve + L : n.BLANK)), s.toolText = ae, s.setTooltext = ae);\n          }\n        }, t.prototype.hide = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i = this.components.data,\n              l = this.getFromEnv(\"chart\"),\n              s = this.getFromEnv(\"animationManager\"),\n              c = l.getChildren(\"colorRange\")[0];\n\n          for (r = e.config.datasetObj.code, t = 0, o = i.length; t < o; t++) {\n            Object.keys(i[t]).length && (n = c.getColorObj(i[t].config.value).code, a = i[t].config, r === n && (i[t].graphics.element && s.setAnimation({\n              el: i[t].graphics.element,\n              attr: {\n                \"fill-opacity\": 0,\n                \"stroke-width\": 0\n              },\n              component: this\n            }), i[t].graphics.hotElement && i[t].graphics.hotElement.hide(), i[t].graphics.valEle && i[t].graphics.valEle.hide(), i[t].graphics.tlLabel && i[t].graphics.tlLabel.hide(), i[t].graphics.trLabel && i[t].graphics.trLabel.hide(), i[t].graphics.blLabel && i[t].graphics.blLabel.hide(), i[t].graphics.brLabel && i[t].graphics.brLabel.hide(), a.visible = !1, i[t].visible = !1));\n          }\n\n          e.setLegendState(\"hidden\");\n        }, t.prototype.show = function (e) {\n          var t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l = this.components.data,\n              s = this.config,\n              c = this.getFromEnv(\"chart\"),\n              u = this.getFromEnv(\"animationManager\"),\n              p = c.getChildren(\"colorRange\")[0];\n\n          for (i = e.config.datasetObj.code, r = 0, n = l.length; r < n; r++) {\n            Object.keys(l[r]).length && (o = (t = l[r].config).plotFillAlpha / 100, i === (!(a = p.getColorObj(l[r].config.value)).outOfRange && a.code) && (l[r].graphics.element && u.setAnimation({\n              el: l[r].graphics.element,\n              attr: {\n                visibility: \"visible\"\n              },\n              component: this\n            }), l[r].graphics.element && u.setAnimation({\n              el: l[r].graphics.element,\n              component: this,\n              attr: {\n                \"fill-opacity\": o,\n                \"stroke-width\": s.plotBorderThickness\n              }\n            }), l[r].graphics.hotElement && l[r].graphics.hotElement.show(), l[r].graphics.valEle && l[r].graphics.valEle.show(), l[r].graphics.tlLabel && l[r].graphics.tlLabel.show(), l[r].graphics.trLabel && l[r].graphics.trLabel.show(), l[r].graphics.blLabel && l[r].graphics.blLabel.show(), l[r].graphics.brLabel && l[r].graphics.brLabel.show(), t.visible = !0, l[r].visible = !0));\n          }\n\n          e && e.removeLegendState(\"hidden\");\n        }, t.prototype.updatePlot = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n = arguments[0],\n              i = arguments[1],\n              l = this.config,\n              s = this.getFromEnv(\"animationManager\"),\n              c = this.components.data;\n\n          for (o = 0, a = c.length; o < a; o++) {\n            Object.keys(c[o]).length && (t = (e = c[o].config).plotFillAlpha / 100, (r = c[o].config.value) < n || r > i ? e.visible && (c[o].graphics.element && s.setAnimation({\n              el: c[o].graphics.element,\n              attr: {\n                \"fill-opacity\": 0,\n                \"stroke-width\": 0\n              },\n              component: this\n            }), c[o].graphics.hotElement && c[o].graphics.hotElement.hide(), c[o].graphics.valEle && c[o].graphics.valEle.hide(), c[o].graphics.tlLabel && c[o].graphics.tlLabel.hide(), c[o].graphics.trLabel && c[o].graphics.trLabel.hide(), c[o].graphics.blLabel && c[o].graphics.blLabel.hide(), c[o].graphics.brLabel && c[o].graphics.brLabel.hide(), e.visible = !1, c[o].visible = !1) : e.visible || (c[o].graphics.element && s.setAnimation({\n              el: c[o].graphics.element,\n              attr: {\n                \"fill-opacity\": t,\n                \"stroke-width\": l.plotBorderThickness\n              },\n              callback: function callback() {\n                this.show();\n              },\n              component: this\n            }), c[o].graphics.hotElement && c[o].graphics.hotElement.show(), c[o].graphics.valEle && c[o].graphics.valEle.show(), c[o].graphics.tlLabel && c[o].graphics.tlLabel.show(), c[o].graphics.trLabel && c[o].graphics.trLabel.show(), c[o].graphics.blLabel && c[o].graphics.blLabel.show(), c[o].graphics.brLabel && c[o].graphics.brLabel.show(), e.visible = !0, c[o].visible = !0));\n          }\n        }, t.prototype._checkPointObj = function (e, t, o, a) {\n          var r,\n              n,\n              i,\n              l,\n              s,\n              c = this.components.plotGrid,\n              u = this.getFromEnv(\"chartConfig\"),\n              p = u.viewPortConfig,\n              h = p.x,\n              d = p.scaleX,\n              f = u.plotborderthickness,\n              g = u.showplotborder;\n          if (r = c[t] && c[t][e], n = (n = (f = g ? f : 0) / 2) % 2 == 0 ? n + 1 : Math.round(n), r && r.config && r.config.visible && (i = o - (r._xPos - h * d) + n, l = a - r._yPos + n, s = i >= 0 && i <= r._width + f && l >= 0 && l <= r._height + f)) return {\n            pointIndex: r._index,\n            hovered: s,\n            pointObj: r\n          };\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              i = this.getFromEnv(\"chartConfig\"),\n              l = this.getFromEnv(\"xAxis\"),\n              s = this.getFromEnv(\"yAxis\"),\n              c = i.canvasHeight / this.getFromEnv(\"totalRows\");\n          return e += l.getTranslation(), t += s.getTranslation(), a = s.getValue(t + c / 2), n = Math.floor(a), o = l.getValue(e), (r = Math.round(o)) - o > 0 ? a - n > .5 ? this._checkPointObj(r, n, e, t) || this._checkPointObj(r - 1, n, e, t) : this._checkPointObj(r, n - 1, e, t) || this._checkPointObj(r, n, e, t) : a - n > .5 ? this._checkPointObj(r + 1, n, e, t) || this._checkPointObj(r, n, e, t) : this._checkPointObj(r, n - 1, e, t) || this._checkPointObj(r + 1, n, e, t) || this._checkPointObj(r, n, e, t);\n        }, t.prototype.parsePlotAttributes = function (e, t) {\n          var o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              g,\n              m,\n              v,\n              b,\n              y,\n              x = this.config.JSONData,\n              k = this.config,\n              w = x.data,\n              S = t,\n              A = this.getState(\"visible\"),\n              E = this.getFromEnv(\"chart\"),\n              D = this.getFromEnv(\"xAxis\"),\n              _ = this.getFromEnv(\"yAxis\"),\n              T = this.getFromEnv(\"chartConfig\"),\n              L = T.showtooltip,\n              P = this.components.data,\n              O = _.getAxisBase(),\n              V = (_.yBasePos = _.getPixel(O), k.plotBorderThickness),\n              M = k.plotRadius,\n              F = E.getFromEnv(\"legend\") && E.getFromEnv(\"legend\").config.isActive,\n              I = this.components.plotGrid;\n\n          e && Object.keys(e).length && (m = T.canvasWidth / this.getFromEnv(\"totalColumns\"), l = T.canvasHeight / this.getFromEnv(\"totalRows\"), y = e.trackerConfig = {}, u = (h = e && e.config).setValue, v = D.getCategoryFromId(w[S].columnid.toLowerCase()), b = _.getCategoryFromId(w[S].rowid.toLowerCase()), 0 !== v.index && !v.index || 0 !== b.index && !b.index || (k.mapByCategory || null !== u) && (c = h.setLink, g = h.colorArr, e.graphics || (P[S].graphics = {}), p = h.displayValue, a = D.getPixel(v.index) - m / 2, r = _.getPixel(b.index) - l / 2, i = m, s = h.toolText, y.eventArgs = {\n            index: S,\n            link: c,\n            value: h.percentValue || u,\n            displayValue: p,\n            columnId: v.tickObj.id,\n            rowId: b.tickObj.id,\n            tlLabel: h.tlLabel,\n            trLabel: h.trLabel,\n            blLabel: h.blLabel,\n            brLabel: h.brLabel,\n            toolText: s || \"\",\n            id: n.BLANKSTRING,\n            datasetIndex: F ? e.datasetIndex : void 0,\n            datasetName: F ? e.datasetName : void 0,\n            visible: A\n          }, o = {\n            x: a,\n            y: r,\n            width: i,\n            height: l || 1,\n            r: M,\n            fill: h.color,\n            stroke: (0, n.toRaphaelColor)(g[1]),\n            \"stroke-width\": V,\n            \"stroke-dasharray\": void 0,\n            \"fill-opacity\": h.plotFillAlpha / 100,\n            \"stroke-linejoin\": d,\n            visibility: h.visible ? \"visible\" : f,\n            cursor: c ? \"pointer\" : n.BLANKSTRING\n          }, e._xPos = a, e._yPos = r, e._height = l, e._width = i, e._index = S, I[b.index][v.index] = e, e.graphics.element ? ((o = {\n            x: a,\n            y: r,\n            width: i,\n            height: l || 1\n          }).fill = h.color, o.stroke = (0, n.toRaphaelColor)(g[1]), o[\"fill-opacity\"] = h.visible ? h.plotFillAlpha / 100 : 0, o[\"stroke-width\"] = h.visible ? V : 0, o[\"stroke-dasharray\"] = void 0, o[\"stroke-linejoin\"] = d, o.visibility = h.visible ? \"visible\" : f, o.cursor = c ? \"pointer\" : n.BLANKSTRING) : (o[\"fill-opacity\"] = h.plotFillAlpha / 100, o[\"stroke-width\"] = V), (c || L) && (l < N && (r -= (N - l) / 2, l = N), y.attr = {\n            x: a,\n            y: r,\n            width: i,\n            height: l,\n            r: M,\n            cursor: c ? \"pointer\" : n.BLANKSTRING,\n            stroke: C,\n            \"stroke-width\": V,\n            fill: C,\n            visibility: h.visible ? \"visible\" : f\n          }), h.props = {\n            element: {\n              attr: o\n            }\n          }));\n        }, t.prototype.allocatePosition = function () {\n          var e,\n              t,\n              o,\n              a = this.config.JSONData.data,\n              r = this.components.data;\n\n          for (e = a && a.length, t = 0; t < e; t++) {\n            o = r[t], this.parsePlotAttributes(o, t);\n          }\n        }, t.prototype.drawPlots = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              u,\n              p,\n              h,\n              d = this.config.JSONData,\n              f = this.config,\n              m = d.data,\n              v = this.getFromEnv(\"animationManager\"),\n              b = this.getState(\"visible\"),\n              y = this.getFromEnv(\"xAxis\"),\n              x = this.getFromEnv(\"yAxis\"),\n              k = this.getFromEnv(\"chartConfig\"),\n              w = this.components.data,\n              C = f.showShadow,\n              N = this.getContainer(\"plotGroup\"),\n              S = this.getContainer(\"shadowGroup\"),\n              A = [],\n              E = (this.components.removeDataArr || []).length,\n              D = f.showHoverEffect;\n\n          for (e = m && m.length, t = 0; t < e; t++) {\n            h = (o = w[t]).trackerConfig, i = o && o.config, o.graphics && (l = o.graphics.element ? b ? \"updating\" : \"hiding\" : \"appearing\", r = i.setValue, s = y.getCategoryFromId(m[t].columnid.toLowerCase()), u = x.getCategoryFromId(m[t].rowid.toLowerCase()), 0 !== s.index && !s.index || 0 !== u.index && !u.index ? o.graphics.element = o.graphics.element && v.setAnimation({\n              el: o.graphics.element,\n              component: this\n            }) : (s.tickObj && u.tickObj && i.value !== n.BLANKSTRING || !o.graphics || (o.graphics.element = o.graphics.element && v.setAnimation({\n              el: o.graphics.element,\n              component: this\n            })), f.mapByCategory || null !== r || !o.graphics ? (p = s.index.toString() + u.index.toString(), A.push(p), o.graphics.element ? (a = o.graphics.element, i.elemCreated = !1, v.setAnimation({\n              el: a,\n              state: l,\n              attr: i.props.element.attr,\n              component: this\n            })) : (a = o.graphics.element = v.setAnimation({\n              el: \"rect\",\n              component: this,\n              attr: i.props.element.attr,\n              label: \"rect\",\n              container: N\n            }), i.elemCreated = !0), a.shadow({\n              opacity: C\n            }, S).data(\"BBox\", void 0), k.enablemousetracking && a.data(\"eventArgs\", h.eventArgs).data(g, D).data(\"setRolloverAttr\", i.setRolloverAttr || {}).data(\"setRolloutAttr\", i.setRolloutAttr || {})) : (o.graphics.element && o.graphics.element.hide(), o.graphics.hotElement && o.graphics.hotElement.hide())));\n          }\n\n          this.drawn ? this.drawLabel() : this.addJob(\"labelJob\", this.drawLabel.bind(this), c.priorityList.label), this.drawn = !0, E && this.removeDataElems();\n        }, t.prototype.drawLabel = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              g,\n              x,\n              C,\n              N,\n              S,\n              A,\n              E,\n              D,\n              _,\n              T,\n              L,\n              P,\n              O,\n              V,\n              M,\n              F,\n              I,\n              B,\n              R,\n              j,\n              G,\n              H = this.getFromEnv(\"chartConfig\"),\n              W = this.getFromEnv(\"smartLabel\"),\n              z = this.getFromEnv(\"animationManager\"),\n              U = H.dataLabelStyle,\n              J = this.config,\n              K = (this.config.JSONData.data || []).length,\n              q = this.components.data,\n              Y = this.getContainer(\"labelGroup\"),\n              X = this.graphics.tlLabelContainer,\n              Q = this.graphics.blLabelContainer,\n              Z = this.graphics.trLabelContainer,\n              $ = this.graphics.brLabelContainer;\n\n          for (z.setAnimation({\n            el: Y,\n            attr: {\n              opacity: 1\n            },\n            component: this,\n            label: \"text\"\n          }), X || (X = this.graphics.tlLabelContainer = w({\n            name: \"tlLabel\"\n          }, Y, this)), Q || (Q = this.graphics.blLabelContainer = w({\n            name: \"blLabel\"\n          }, Y, this)), Z || (Z = this.graphics.trLabelContainer = w({\n            name: \"trLabel\"\n          }, Y, this)), $ || ($ = this.graphics.brLabelContainer = w({\n            name: \"brLabel\"\n          }, Y, this)), c = J.tlLabelStyle, u = J.trLabelStyle, p = J.blLabelStyle, h = J.brLabelStyle, d = {\n            fontFamily: c.fontFamily,\n            fontSize: c.fontSize,\n            lineHeight: c.lineHeight,\n            fontWeight: c.fontWeight,\n            fontStyle: c.fontStyle\n          }, g = {\n            fontFamily: u.fontFamily,\n            fontSize: u.fontSize,\n            lineHeight: u.lineHeight,\n            fontWeight: u.fontWeight,\n            fontStyle: u.fontStyle\n          }, x = {\n            fontFamily: p.fontFamily,\n            fontSize: p.fontSize,\n            lineHeight: p.lineHeight,\n            fontWeight: p.fontWeight,\n            fontStyle: p.fontStyle\n          }, C = {\n            fontFamily: h.fontFamily,\n            fontSize: h.fontSize,\n            lineHeight: h.lineHeight,\n            fontWeight: h.fontWeight,\n            fontStyle: h.fontStyle\n          }, W.useEllipsesOnOverflow(H.useEllipsesWhenOverflow), W.setStyle(U), X.css(d), Q.css(x), Z.css(g), $.css(C), t = 0; t < K; t++) {\n            void 0 !== (e = q[t]) && e.graphics && (G = (j = e && e.config).setValue, J.mapByCategory || null !== G ? (o = j.displayValue, N = e.graphics.element, S = e._width, A = e._height, E = e._xPos, D = e._yPos, W.setStyle(U), o = (_ = W.getSmartText(o, S, A, !1)).text, k(o) && o !== n.BLANK && j.showValue ? (a = D + .5 * A, r = E + .5 * S, s = {\n              text: o,\n              title: _.tooltext || n.BLANKSTRING,\n              visibility: j.visible ? \"visible\" : f,\n              fill: U.color,\n              direction: j.textDirection,\n              x: r,\n              y: a,\n              \"text-bound\": [U.backgroundColor, U.borderColor, U.borderThickness, U.borderPadding, U.borderRadius, U.borderDash]\n            }, N ? e.graphics.valEle = z.setAnimation({\n              el: e.graphics.valEle || \"text\",\n              container: Y,\n              component: this,\n              label: \"text\",\n              attr: s\n            }) : e.graphics.valEle && (e.graphics.valEle = z.setAnimation({\n              el: e.graphics.valEle,\n              component: this\n            })), T = j.tlLabel, L = j.trLabel, P = j.blLabel, O = j.brLabel, V = k(T) && T !== n.BLANK, M = k(L) && L !== n.BLANK, F = k(P) && P !== n.BLANK, I = k(O) && O !== n.BLANK, B = S * (V && M ? .5 : .9), R = .5 * (A - (_ && _.height || 0)), i = D + 4, V ? (W.setStyle(c), l = E, s = {\n              text: o = (_ = W.getSmartText(T, B, R, !1)).text,\n              title: _.tooltext || n.BLANKSTRING,\n              visibility: j.visible ? \"visible\" : f,\n              fill: c.color,\n              \"text-anchor\": m,\n              \"vertical-align\": v,\n              direction: j.textDirection,\n              x: l + 4,\n              y: i,\n              \"text-bound\": [c.backgroundColor, c.borderColor, c.borderThickness, c.borderPadding, c.borderRadius, c.borderDash]\n            }, e.graphics.tlLabel = z.setAnimation({\n              el: e.graphics.tlLabel || \"text\",\n              component: this,\n              attr: Object.assign(s, d),\n              container: X\n            })) : e.graphics.tlLabel && (e.graphics.tlLabel = z.setAnimation({\n              el: e.graphics.tlLabel,\n              component: this\n            })), M ? (W.setStyle(u), l = E + S, s = {\n              text: o = (_ = W.getSmartText(L, B, R, !1)).text,\n              title: _.tooltext || n.BLANKSTRING,\n              visibility: j.visible ? \"visible\" : f,\n              fill: u.color,\n              \"text-anchor\": b,\n              \"vertical-align\": v,\n              direction: j.textDirection,\n              x: l - 4,\n              y: i,\n              \"text-bound\": [u.backgroundColor, u.borderColor, u.borderThickness, u.borderPadding, u.borderRadius, u.borderDash]\n            }, e.graphics.trLabel = z.setAnimation({\n              el: e.graphics.trLabel || \"text\",\n              attr: Object.assign(s, g),\n              container: Z,\n              component: this\n            })) : e.graphics.trLabel && (e.graphics.trLabel = z.setAnimation({\n              el: e.graphics.trLabel,\n              component: this\n            })), i = D + A - 4, F ? (W.setStyle(p), l = E, s = {\n              text: o = (_ = W.getSmartText(P, B, R, !1)).text,\n              title: _.tooltext || n.BLANKSTRING,\n              visibility: j.visible ? \"visible\" : f,\n              fill: p.color,\n              \"text-anchor\": m,\n              \"vertical-align\": y,\n              direction: j.textDirection,\n              x: l + 4,\n              y: i,\n              \"text-bound\": [p.backgroundColor, p.borderColor, p.borderThickness, p.borderPadding, p.borderRadius, p.borderDash]\n            }, e.graphics.blLabel = z.setAnimation({\n              el: e.graphics.blLabel || \"text\",\n              component: this,\n              container: Q,\n              attr: Object.assign(s, x)\n            })) : e.graphics.blLabel && (e.graphics.blLabel = z.setAnimation({\n              el: e.graphics.blLabel,\n              component: this\n            })), I ? (W.setStyle(p), l = E + S - 4, s = {\n              text: o = (_ = W.getSmartText(O, B, R, !1)).text,\n              title: _.tooltext || n.BLANKSTRING,\n              visibility: j.visible ? \"visible\" : f,\n              fill: h.color,\n              \"text-anchor\": b,\n              \"vertical-align\": y,\n              direction: j.textDirection,\n              x: l,\n              y: i,\n              \"text-bound\": [h.backgroundColor, h.borderColor, h.borderThickness, h.borderPadding, h.borderRadius, h.borderDash]\n            }, e.graphics.brLabel = z.setAnimation({\n              el: e.graphics.brLabel || \"text\",\n              attr: Object.assign(s, C),\n              container: $,\n              component: this\n            })) : e.graphics.brLabel && (e.graphics.brLabel = z.setAnimation({\n              el: e.graphics.brLabel,\n              component: this\n            }))) : this.removeLabels(e)) : this.removeLabels(e));\n          }\n\n          this.labelDrawn = !0;\n        }, t.prototype.removeLabels = function (e) {\n          var t = this.getFromEnv(\"animationManager\");\n          e.graphics.valEle && (e.graphics.valEle = t.setAnimation({\n            el: e.graphics.valEle,\n            component: this\n          })), e.graphics.tlLabel && (e.graphics.tlLabel = t.setAnimation({\n            el: e.graphics.tlLabel,\n            component: this\n          })), e.graphics.trLabel && (e.graphics.trLabel = t.setAnimation({\n            el: e.graphics.trLabel,\n            component: this\n          })), e.graphics.blLabel && (e.graphics.blLabel = t.setAnimation({\n            el: e.graphics.blLabel,\n            component: this\n          })), e.graphics.brLabel && (e.graphics.brLabel = t.setAnimation({\n            el: e.graphics.brLabel,\n            component: this\n          }));\n        }, t.prototype.removeDataElems = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.getFromEnv(\"animationManager\"),\n              n = this.components,\n              i = n.removeDataArr,\n              l = n.pool || (n.pool = {\n            element: [],\n            hotElement: [],\n            label: []\n          }),\n              s = i.length;\n\n          for (a = 0; a < s; a++) {\n            if (e = i[0], i.splice(0, 1), e && e.graphics) {\n              for (t in o = e.graphics) {\n                o[t] && (o[t] = r.setAnimation({\n                  el: o[t],\n                  component: this\n                }));\n              }\n\n              e.graphics.element && (l.element = l.element.concat(e.graphics.element)), e.graphics.hotElement && (l.hotElement = l.hotElement.concat(e.graphics.hotElement)), e.graphics.label && (l.label = l.label.concat(e.graphics.label));\n            }\n          }\n\n          n.pool = l;\n        }, t.prototype.getAxisValuePadding = function () {\n          return this.config.defaultPadding;\n        }, t.prototype.getDataLimits = function () {\n          var e,\n              t,\n              o = this.components.data,\n              a = this.config,\n              r = o.length,\n              n = -Infinity,\n              i = +Infinity;\n\n          for (e = 0; e < r; e++) {\n            o[e] && Object.keys(o[e]).length && void 0 !== (t = o[e].config.setValue) && null !== t && (n = S(n, t), i = A(i, t));\n          }\n\n          return a.maxValue = n, a.minValue = i, {\n            max: a.maxValue,\n            min: a.minValue\n          };\n        }, t.prototype.trimData = function (e) {\n          if (this.config.JSONData) {\n            var t = this.config,\n                o = t && t.context,\n                a = o && o.prevCatlen,\n                r = this.getFromEnv(\"xAxis\").getTicksLen(),\n                n = a - r,\n                i = t.JSONData,\n                l = i.data && i.data.length,\n                s = e.data && e.data.length || 0,\n                c = l - s,\n                u = void 0,\n                p = void 0;\n            n > c ? (u = n, p = r) : (u = c, p = s), u > 0 && this.removeData(p, u, !1);\n          }\n        }, t.prototype.draw = function () {\n          var e = this.config,\n              t = this.getFromEnv(\"xAxis\"),\n              o = t.getPixel(0),\n              a = t.getPixel(1),\n              r = this.getFromEnv(\"groupMaxWidth\"),\n              n = e.drawn;\n          r || (r = E(a - o), this.addToEnv(\"groupMaxWidth\", r)), !n && this.createContainer(), t.getState(\"scrolling\") || this.createCoordinates(), this.drawPlots();\n        }, t.prototype.createContainer = function () {\n          var e,\n              t,\n              o = this.getType(),\n              a = this.groupName,\n              r = this.getFromEnv(\"chart\"),\n              n = this.getLinkedParent(),\n              i = a || this.dsGroup || o;\n          !n.getChildContainer(i + \"VcanvasGroup\") && (i = \"default\"), e = n.getChildContainer(i + \"VcanvasGroup\"), t = n.getChildContainer(i + \"ShadowVcanvasGroup\"), !this.getContainer(\"shadowGroup\") && this.addContainer(\"shadowGroup\", w({\n            name: \"shadow-group\"\n          }, t, this)), !this.getContainer(\"errorShadowGroup\") && this.addContainer(\"errorShadowGroup\", w({\n            name: \"error-shadow-group\"\n          }, t, this)), !this.getContainer(\"commonElemsGroup\") && this.addContainer(\"commonElemsGroup\", w({\n            name: \"common-elems-group\"\n          }, e, this)), !this.getContainer(\"plotGroup\") && this.addContainer(\"plotGroup\", w({\n            name: \"plot-group\"\n          }, e, this)), !this.getContainer(\"errorPlotGroup\") && this.addContainer(\"errorPlotGroup\", w({\n            name: \"error-plot-group\"\n          }, e, this)), r.hasAnchor && this.getContainer(\"errorPlotGroup\").insertBefore(this.getContainer(\"plotGroup\")), !this.getContainer(\"labelGroup\") && this.addContainer(\"labelGroup\", w({\n            name: \"label-group\",\n            \"class\": \"fusioncharts-datalabels\"\n          }, n.getChildContainer(\"vcanvasLabelGroup\"), this));\n        }, t.prototype.createCoordinates = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              l = this.components.data,\n              s = this.getFromEnv(\"chart\"),\n              c = s.isBar,\n              u = this.getFromEnv(\"yAxis\"),\n              p = this.getFromEnv(\"xAxis\"),\n              h = u.getAxisBase(),\n              d = u.getPixel(h),\n              f = p.config.isVertical,\n              g = s.config.xDepth || 0,\n              m = s.config.yDepth || 0,\n              v = l.length,\n              b = this.components,\n              y = this.getLinkedParent(),\n              x = y.getstackConf && y.getstackConf(),\n              k = b.data;\n\n          for (!c && (g = -g), c && (m = -m), a = 0; a < v; a++) {\n            t = (e = k[a]) && e.config, void 0 !== e && (o = t._b, r = p.getPixel(x && x[a].x || t._x) + g, n = u.getPixel(t._y) + m, i = (o ? u.getPixel(o) : d) + m, f ? (t._Px = n, t._Py = r, t._Pby = r, t._Pbx = i) : (t._Px = r, t._Py = n, t._Pby = i, t._Pbx = r), this.getLineShift && (t._Py += this.getLineShift(\"y\")));\n          }\n        }, t.prototype._decideTooltipType = function (e, t) {\n          var o = this.getLinkedParent(),\n              a = this.getFromEnv(\"chart\").config.drawTrendRegion,\n              r = this.components,\n              n = this.getFromEnv(\"toolTipController\"),\n              i = r.data[e],\n              l = i && (i.config.finalTooltext || i.config.toolText),\n              s = i && (i.graphics.element || this.graphics.sharedAnchor.element),\n              c = this.config.currentToolTip,\n              u = t.originalEvent;\n          a && s ? this.config.currentToolTip = o._drawTooltip(e, this.config.index, u, c) : l && !a && (c ? n.draw(u, l, c) : c = this.config.currentToolTip = n.draw(u, l));\n        }, t.prototype._firePlotEvent = function (e, t, o) {\n          var a,\n              r = this.getFromEnv(\"chart\"),\n              n = this.components,\n              i = this.getFromEnv(\"toolTipController\"),\n              l = n.data[t],\n              s = l.graphics.element,\n              c = this.config.currentToolTip;\n          if (s) switch (a = l.config.setLink, e) {\n            case \"fc-mouseover\":\n              this._decideTooltipType(t, o), function (e, t, o, a, r) {\n                var n = t.graphics,\n                    i = e.getFromEnv(\"animationManager\"),\n                    l = n && n.element,\n                    s = l && l.getData();\n                !0 !== s.draged && (i.setAnimationState(\"mouseOver\"), l && 0 !== s.showHoverEffect && i.setAnimation({\n                  el: l,\n                  attr: l.getData().setRolloverAttr,\n                  component: r\n                }), !a && l && e.plotEventHandler(l, o, \"DataPlotRollOver\"));\n              }(r, l, o, void 0, this), a && (s.node.style.cursor = \"pointer\");\n              break;\n\n            case \"fc-mouseout\":\n              i.hide(c), function (e, t, o, a, r) {\n                var n = t.graphics,\n                    i = e.getFromEnv(\"animationManager\"),\n                    l = n && n.element,\n                    s = l && l.getData();\n                !0 !== s.draged && (i.setAnimationState(\"mouseOut\"), l && 0 !== s.showHoverEffect && i.setAnimation({\n                  el: l,\n                  attr: l.getData().setRolloutAttr,\n                  component: r\n                }), !a && l && e.plotEventHandler(l, o, \"DataPlotRollOut\"));\n              }(r, l, o, void 0, this), a && (s.node.style.cursor = x);\n              break;\n\n            case \"fc-click\":\n              r.plotEventHandler(s, o);\n              break;\n\n            case \"fc-mousemove\":\n              this._decideTooltipType(t, o);\n\n          }\n        }, t.prototype.removeData = function (e, t, o) {\n          var a,\n              r,\n              n,\n              i = this.getFromEnv(\"chart\"),\n              l = this.components,\n              s = l.data,\n              c = l.removeDataArr || (l.removeDataArr = []),\n              u = this.config,\n              p = this.maxminFlag;\n\n          for (void 0 === t && (t = 1), (e = e || 0) + t !== s.length && i.isRealTime ? 0 !== e && void 0 !== e || (this.endPosition = !1) : this.endPosition = !0, l.removeDataArr = c = c.concat(s.splice(e, t)), a = (n = c.length) - 1; a >= 0; a--) {\n            if (c[a]) {\n              if ((r = c[a].config).setValue !== u.maxValue && r.setValue !== u.minValue || (p = this.maxminFlag = !0), r._x -= t, p) break;\n            } else c.splice(a, 1);\n          }\n\n          this.removeDataLen = n, this.resetCatPos && this.resetCatPos(), p && this.getDataLimits && this.getDataLimits(), o && this.asyncDraw();\n        }, t;\n      }(r.ComponentInterface);\n\n      t[\"default\"] = D;\n    },\n    935: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = {\n        \"initial.dataset.heatMap\": function initialDatasetHeatMap() {\n          return {\n            \"rect.appearing\": function rectAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"text.appearing\": function textAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }];\n            },\n            \"*\": null\n          };\n        }\n      };\n    },\n    936: function _(e, t, o) {\n      \"use strict\";\n\n      function a(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      t.__esModule = !0;\n\n      var r = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.setState(\"visible\", !0), o.getDataLimits = null, o;\n        }\n\n        return a(t, e), t.prototype.getType = function () {\n          return \"group\";\n        }, t.prototype.getName = function () {\n          return \"heatMapGroup\";\n        }, t.prototype.createContainer = function () {\n          var e = void 0,\n              t = this.getLinkedParent(),\n              o = this.getFromEnv(\"animationManager\"),\n              a = void 0,\n              r = t.getChildContainer();\n\n          for (e in r) {\n            a = r[e], !this.getChildContainer(e) && this.addChildContainer(e, o.setAnimation({\n              el: \"group\",\n              attr: {\n                name: \"manager-\" + e\n              },\n              container: a,\n              component: this,\n              label: \"group\"\n            }));\n          }\n        }, t.prototype.getLimits = function (e) {\n          var t = +Infinity,\n              o = -Infinity,\n              a = void 0,\n              r = 0,\n              n = function n(e) {\n            o = Math.max(o, e.max), t = Math.min(t, e.min);\n          };\n\n          return this._mapChildren(function (t) {\n            t.getState(\"removed\") || !1 === t.getState(\"visible\") ? e && (a = t.getDataLimits(e), n(a)) : (r++, a = t.getDataLimits(e), n(a));\n          }), r ? this.setState(\"visible\", !0) : this.setState(\"visible\", !1), this.config.range || (this.config.range = {}, this.config.range.min = this.config.dataMin, this.config.range.max = this.config.dataMax), {\n            max: o,\n            min: t\n          };\n        }, t.prototype.draw = function () {\n          var e = this.getLimits(!0);\n          this.addToEnv(\"datasetMinValue\", e.min), this.addToEnv(\"datasetMaxValue\", e.max), this.createContainer();\n        }, t.prototype.getAxisValuePadding = function () {\n          var e = {},\n              t = -Infinity,\n              o = -Infinity,\n              a = -Infinity,\n              r = -Infinity;\n          return this._mapChildren(function (n) {\n            n.getState(\"removed\") || (e = n.getAxisValuePadding && n.getAxisValuePadding() || {}, t = Math.max(t, e.left || -Infinity), o = Math.max(o, e.right || -Infinity), a = Math.max(a, e.top || -Infinity), r = Math.max(r, e.bottom || -Infinity));\n          }), t === -Infinity && (t = 0), o === -Infinity && (o = 0), a === -Infinity && (a = 0), r === -Infinity && (r = 0), this.config.padding || (this.config.padding = {}, this.config.padding.left = t, this.config.padding.right = o, this.config.padding.top = a, this.config.padding.bottom = r), {\n            left: t,\n            right: o,\n            top: a,\n            bottom: r\n          };\n        }, t;\n      }(o(138).ComponentInterface);\n\n      t[\"default\"] = r;\n    },\n    937: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t = e.getChildren(\"canvas\")[0],\n            o = t.getChildren(\"axisRefVisualCartesian\")[0],\n            a = {\n          zoomable: !0,\n          pannable: !0\n        },\n            n = e._feedAxesRawData(),\n            l = void 0,\n            s = void 0,\n            c = function c() {\n          return o.asyncDraw();\n        };\n\n        (0, r.componentFactory)(e, i[\"default\"], \"yAxis\", 1, n.yAxisConf), (0, r.componentFactory)(e, i[\"default\"], \"xAxis\", 1, n.xAxisConf), l = e.getChildren(\"yAxis\")[0], s = e.getChildren(\"xAxis\")[0], l.setLinkedItem(\"canvas\", t), s.setLinkedItem(\"canvas\", t), o.setLinkedItem(l.getId(), l), o.setLinkedItem(s.getId(), s), o.addExtEventListener(\"visiblerangeset\", c, s), o.addExtEventListener(\"visiblerangeset\", c, l), t.attachAxis(s, !1, e.zoomX ? a : {}), t.attachAxis(l, !0, e.zoomY ? a : {}), e._setCategories();\n      };\n      var a,\n          r = o(125),\n          n = o(422),\n          i = (a = n) && a.__esModule ? a : {\n        \"default\": a\n      };\n    },\n    944: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(945),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    945: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(550)),\n          r = s(o(946)),\n          n = s(o(949)),\n          i = s(o(953)),\n          l = o(125);\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.registerFactory(\"canvas\", i[\"default\"]), o.registerFactory(\"axis\", n[\"default\"], [\"canvas\"]), o;\n        }\n\n        return c(t, e), t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this);\n\n          var t = this.config;\n          t.axisType = \"polar\", t.axisValuePadding = 10, t.gridLineWidth = 1, t.showRadarBorder = 1, t.showvalues = 0, t.radarBorderThickness = 2, t.skipCanvasDrawing = !0, t.useplotgradientcolor = 0, t.plotfillalpha = 50;\n        }, t.prototype.setAxisDimention = function () {\n          var e = this.getChildren(\"yAxis\") && this.getChildren(\"yAxis\")[0],\n              t = this.config;\n          e && e.setAxisDimention({\n            x: t.canvasLeft + t.canvasWidth / 2,\n            y: t.canvasTop,\n            axisLength: t.canvasHeight / 2\n          });\n        }, t.prototype._feedAxesRawData = function () {\n          var e,\n              t,\n              o = this.getFromEnv(\"dataSource\");\n          return e = this.getSpecificxAxisConf(), t = this.getSpecificyAxisConf(), e.vtrendlines = o.vtrendlines, t.trendlines = o.trendlines, {\n            xAxisConf: [e],\n            yAxisConf: [t]\n          };\n        }, t.prototype.getSpecificxAxisConf = function () {\n          var e = this.getFromEnv(\"chart-attrib\"),\n              t = this.config,\n              o = this.getBasexAxisConf();\n          return o.isReverse = t.reverseXAxis, o.axisLineColor = (0, l.pluck)(e.xaxislinecolor, e.axislinecolor, \"#000000\"), o.showAlternateGridColor = (0, l.pluckNumber)(e.showalternatevgridcolor, 1), o.numDivLines = e.numvdivlines, o.axisName = e.xaxisname, o.setAdaptiveMin = e.setadaptivexmin, o.showLimits = e.showvlimits, o.showDivLineValues = (0, l.pluckNumber)(e.showvdivlinevalues, e.showvdivlinevalues), o.zeroPlaneThickness = e.vzeroplanethickness, o.zeroPlaneAlpha = e.vzeroplanealpha, o.showZeroPlaneValue = e.showvzeroplanevalue, o.showAxisLine = (0, l.pluckNumber)(e.showxaxisline, e.showaxislines, e.drawAxisLines, 0), o.showRadarBorder = e.showradarborder, o.radarBorderColor = e.radarbordercolor, o.radarBorderThickness = e.radarborderthickness, o.radarBorderAlpha = e.radarborderalpha, o.radarFillColor = e.radarfillcolor, o.radarFillAlpha = e.radarfillalpha, o.radarSpikeColor = e.radarspikecolor, o.radarSpikeThickness = e.radarspikethickness, o.radarSpikeAlpha = e.radarspikealpha, o.radarInLineAlpha = e.radarinlinealpha, o.showTooltip = (0, l.pluckNumber)(e.showtooltip, 1), o;\n        }, t.prototype.getSpecificyAxisConf = function () {\n          var e = this.getFromEnv(\"chart-attrib\"),\n              t = this.config,\n              o = this.config.is3D ? l.chartPaletteStr.chart3D : l.chartPaletteStr.chart2D,\n              a = t.isInverse,\n              r = this.getFromEnv(\"color-manager\");\n          return {\n            isVertical: !0,\n            isReverse: !a,\n            isOpposit: !1,\n            outCanfontFamily: (0, l.pluck)(e.outcnvbasefont, e.basefont, \"Verdana,sans\"),\n            outCanfontSize: (0, l.pluckFontSize)(e.outcnvbasefontsize, e.basefontsize, 10),\n            outCancolor: (0, l.pluck)(e.outcnvbasefontcolor, e.basefontcolor, r.getColor(o.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi, \"#$1\"),\n            axisNamePadding: e.yaxisnamepadding,\n            axisValuePadding: e.yaxisvaluespadding,\n            axisNameFont: e.yaxisnamefont,\n            axisNameFontSize: e.yaxisnamefontsize,\n            axisNameFontColor: e.yaxisnamefontcolor,\n            axisNameFontBold: e.yaxisnamefontbold,\n            axisNameFontItalic: e.yaxisnamefontitalic,\n            axisNameBgColor: e.yaxisnamebgcolor,\n            axisNameBorderColor: e.yaxisnamebordercolor,\n            axisNameAlpha: e.yaxisnamealpha,\n            axisNameFontAlpha: e.yaxisnamefontalpha,\n            axisNameBgAlpha: e.yaxisnamebgalpha,\n            axisNameBorderAlpha: e.yaxisnameborderalpha,\n            axisNameBorderPadding: e.yaxisnameborderpadding,\n            axisNameBorderRadius: e.yaxisnameborderradius,\n            axisNameBorderThickness: e.yaxisnameborderthickness,\n            axisNameBorderDashed: e.yaxisnameborderdashed,\n            axisNameBorderDashLen: e.yaxisnameborderdashlen,\n            axisNameBorderDashGap: e.yaxisnameborderdashgap,\n            axisNameWidth: e.yaxisnamewidth,\n            useEllipsesWhenOverflow: e.useellipseswhenoverflow,\n            rotateAxisName: (0, l.pluckNumber)(e.rotateyaxisname, 1),\n            divLineColor: (0, l.pluck)(e.divlinecolor, r.getColor(o.divLineColor)),\n            divLineAlpha: (0, l.pluck)(e.divlinealpha, r.getColor(\"divLineAlpha\")),\n            divLineThickness: (0, l.pluckNumber)(e.divlinethickness, 1),\n            divLineIsDashed: Boolean((0, l.pluckNumber)(e.divlinedashed, e.divlineisdashed, 0)),\n            divLineDashLen: (0, l.pluckNumber)(e.divlinedashlen, 4),\n            divLineDashGap: (0, l.pluckNumber)(e.divlinedashgap, 2),\n            showAlternateGridColor: (0, l.pluckNumber)(e.showalternatehgridcolor, 1),\n            alternateGridColor: (0, l.pluck)(e.alternatehgridcolor, r.getColor(\"altHGridColor\")),\n            alternateGridAlpha: (0, l.pluck)(e.alternatehgridalpha, r.getColor(\"altHGridAlpha\")),\n            numDivLines: e.numdivlines,\n            axisMinValue: e.yaxisminvalue,\n            axisMaxValue: e.yaxismaxvalue,\n            setAdaptiveMin: e.setadaptiveymin,\n            adjustDiv: e.adjustvdiv,\n            labelStep: e.yaxisvaluesstep,\n            showAxisValues: (0, l.pluckNumber)(e.showyaxisvalues, e.showyaxisvalue),\n            showLimits: (0, l.pluckNumber)(e.showyaxislimits, e.showlimits, this.showLimits),\n            showDivLineValues: (0, l.pluckNumber)(e.showdivlinevalues, e.showdivlinevalue),\n            zeroPlaneColor: e.zeroplanecolor,\n            zeroPlaneThickness: (0, l.pluckNumber)(e.zeroplanethickness, e.divlinethickness, 2),\n            zeroPlaneAlpha: e.zeroplanealpha,\n            showZeroPlaneValue: e.showzeroplanevalue,\n            trendlineColor: e.trendlinecolor,\n            trendlineToolText: e.trendlinetooltext,\n            trendlineThickness: e.trendlinethickness,\n            trendlineAlpha: e.trendlinealpha,\n            showTrendlinesOnTop: e.showtrendlinesontop,\n            axisLineThickness: (0, l.pluckNumber)(e.yaxislinethickness, e.axislinethickness, 1),\n            axisLineAlpha: (0, l.pluckNumber)(e.yaxislinealpha, e.axislinealpha, 100),\n            axisLineColor: (0, l.pluck)(e.yaxislinecolor, e.axislinecolor, \"#000000\"),\n            showTooltip: (0, l.pluckNumber)(e.showtooltip, 1)\n          };\n        }, t.prototype._spaceManager = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              i,\n              s = this.config,\n              c = s.radarBorderThickness,\n              u = s.legendposition,\n              p = this.getChildren(\"xAxis\") && this.getChildren(\"xAxis\")[0],\n              h = (this.getChildren(\"yAxis\") && this.getChildren(\"yAxis\") || [])[0],\n              d = s.hasLegend,\n              f = this.getChildren(\"legend\") && this.getChildren(\"legend\")[0],\n              g = l.preDefStr.POSITION_BOTTOM,\n              m = Math,\n              v = m.min,\n              b = m.abs;\n          r = u === g ? .3 * s.canvasHeight : .3 * s.canvasWidth, !1 !== d && p && s.showLegend && this._allocateSpace(f._manageLegendPosition(r)), a = .7 * s.canvasHeight, o = .7 * s.canvasWidth, p && this._allocateSpace(p.placeAxis(o, a)), o = .7 * s.canvasWidth, h && h.placeAxis(o), e = .225 * s.availableHeight, t = this._manageActionBarSpace && (this._manageActionBarSpace(e) || {}), this._allocateSpace(t), n = s.radarradius > 0 ? 2 * s.radarradius : v(s.canvasHeight, s.canvasWidth), s.canvasHeight > n && (i = b((s.canvasHeight - n) / 2), this._allocateSpace({\n            top: i,\n            bottom: i\n          })), s.canvasWidth > n && (i = b((s.canvasWidth - n) / 2), this._allocateSpace({\n            left: i,\n            right: i\n          })), a = u === g ? .6 * s.availableHeight : .6 * s.availableWidth, this._manageChartMenuBar(a), h.setAxisDimention({\n            x: s.canvasLeft + s.canvasWidth / 2 - c / 2,\n            y: s.canvasTop,\n            axisLength: s.canvasHeight / 2\n          }), p.setAxisConfig({\n            radius: v(s.canvasWidth / 2, s.canvasHeight / 2) - c / 2\n          }), p.setAxisDimention({\n            x: s.canvasLeft + s.canvasWidth / 2,\n            y: s.canvasTop + s.canvasHeight / 2\n          });\n        }, t.getName = function () {\n          return \"Radar\";\n        }, t.prototype.getName = function () {\n          return \"Radar\";\n        }, t.prototype.getDSdef = function () {\n          return r[\"default\"];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = u;\n    },\n    946: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(450)),\n          r = s(o(947)),\n          n = o(132),\n          i = o(948),\n          l = o(125);\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var u = l.regex.dropHash;\n      (0, n.addDep)({\n        name: \"radarAnimation\",\n        type: \"animationRule\",\n        extension: r[\"default\"]\n      });\n\n      var p = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return c(t, e), t.prototype.getName = function () {\n          return \"radar\";\n        }, t.prototype.createCoordinates = function () {\n          var e,\n              t,\n              o,\n              a,\n              r,\n              n,\n              l,\n              s,\n              c = this.components.data,\n              u = this.getFromEnv(\"chart\").config,\n              p = this.getFromEnv(\"yAxis\"),\n              h = this.getFromEnv(\"xAxis\"),\n              d = c.length,\n              f = this.components.data;\n\n          for (o = 0; o < d; o++) {\n            s = (t = (e = f[o]) && e.config).setValue, void 0 !== e && (l = p.getPixel(s + 0), r = (n = (0, i.getCoordinates)({\n              radius: u.canvasTop + u.canvasHeight / 2 - l,\n              theta: o\n            }, h)).y, a = n.x, t._Px = a, t._Py = r, t._Pbx = a, t._Pby = r);\n          }\n        }, t.prototype.getLinePath = function (e, t, o) {\n          var a,\n              r,\n              n,\n              l,\n              s,\n              c = this.getFromEnv(\"chart\").config,\n              u = {},\n              p = u.lastValidValue || !1,\n              h = u.temp || [],\n              d = u.temp2 || [],\n              f = u.pathArr || [],\n              g = e.length,\n              m = u.pointsJoined || 0,\n              v = t && t.begin || 0,\n              b = t && t.end || g,\n              y = c.viewPortConfig.step || 1,\n              x = this.getFromEnv(\"yAxis\"),\n              k = this.getFromEnv(\"xAxis\"),\n              w = x.getPixel(0),\n              C = (this.removeDataLen, []);\n\n          for (0, C = C.concat(e), a = v; a < b + 0; a += y) {\n            (s = C[a]) && (null === (r = s.config).setValue || r && !0 === r.isSkipped ? (n = (0, i.getCoordinates)({\n              theta: k.getLimit().min\n            }, k).x, l = x.getPixel(x.config.axisRange.min)) : (n = r._Px, l = r._Py), \"zero\" === o ? l = w : \"base\" === o && (l = r._Pby), p ? (h.length && (f = f.concat(h), h = [], m++), f.push([\"L\", n, l])) : (h.push([\"M\", n, l]), m = 0, p = !0));\n          }\n\n          return \"Z\" !== f[f.length - 1] && m > 0 && f.push(\"Z\"), {\n            pathArr: f,\n            path2Arr: [],\n            lastValidValue: p,\n            pointsJoined: m,\n            temp: h,\n            temp2: d,\n            getPathArr: function getPathArr() {\n              var e = this.pathArr,\n                  t = this.path2Arr;\n              return e.length || t.length ? e.concat(t) : [];\n            }\n          };\n        }, t.prototype.configureAttributes = function (t) {\n          if (!t) return !1;\n          this.trimData(t), this.JSONData = t;\n          var o = this.config,\n              a = this.getFromEnv(\"chart\"),\n              r = this.index,\n              n = a.getFromEnv(\"dataSource\").chart,\n              i = this.getFromEnv(\"color-manager\"),\n              s = this.JSONData,\n              c = i.getPlotColor(r);\n          e.prototype.configureAttributes.call(this, t), o.defaultPadding = {\n            left: 0,\n            right: 0\n          }, o.plotfillcolor = (0, l.pluck)(s.color, n.plotfillcolor, c), o.plotbordercolor = (0, l.pluck)(s.plotbordercolor, n.plotbordercolor, n.areabordercolor, c).split(\",\")[0], o.fillColor = {\n            color: o.plotfillcolor + (o.plotgradientcolor ? \",\" + o.plotgradientcolor : l.BLANKSTRING),\n            alpha: o.plotfillalpha,\n            angle: o.plotfillangle\n          }, o.legendSymbolColor = o.plotfillcolor;\n        }, t.prototype._getHoveredPlot = function (e, t) {\n          var o,\n              a,\n              r,\n              n,\n              l = this.getFromEnv(\"xAxis\"),\n              s = this.components.data,\n              c = s.length,\n              u = this.config,\n              p = 360 / c;\n\n          for (a = Math.floor(Math.max((0, i.getPlotFromPixel)({\n            x: e - u.maxRadius,\n            y: t\n          }, l) / p - 1, 0)), n = Math.floor(Math.max((0, i.getPlotFromPixel)({\n            x: e + u.maxRadius,\n            y: t\n          }, l) / p, c - 1)); n >= a && (!(o = s[n]) || !(r = this.isWithinShape(o, n, e, t))); n--) {\n            ;\n          }\n\n          return r;\n        }, t.prototype._contextChanged = function () {\n          this.config.context || (this.config.context = {});\n          var t,\n              o,\n              a = this.config.context,\n              r = this.getFromEnv(\"xAxis\"),\n              n = a.axisCenterX;\n          return t = !((o = r.config.axisDimention.centerX) === n), a.axisCenterX = o, t || e.prototype._contextChanged.call(this);\n        }, t.prototype.getPlotInCategoryAt = function (e, t) {\n          var o = this.components.data,\n              a = this.getFromEnv(\"xAxis\"),\n              r = this.getState(\"visible\"),\n              n = Math.round((0, i.getPlotFromPixel)({\n            x: e,\n            y: t\n          }, a)),\n              l = o.find(function (e, t, o) {\n            var r,\n                l,\n                s,\n                c,\n                u = void 0,\n                p = void 0;\n            return 0 === t ? (u = o[t + 1], p = o[o.length - 1]) : t === o.length - 1 ? (u = o[0], p = o[o.length - 2]) : (u = o[t + 1], p = o[t - 1]), r = (0, i.getPlotFromPixel)({\n              x: e.config._Px,\n              y: e.config._Py\n            }, a), l = t === o.length - 1 ? 360 : (0, i.getPlotFromPixel)({\n              x: u.config._Px,\n              y: u.config._Py\n            }, a), s = (0, i.getPlotFromPixel)({\n              x: p.config._Px,\n              y: p.config._Py\n            }, a), n <= 0 + (c = (l - r) / 2) ? n >= 0 && n <= 0 + c : n > 360 - c ? n >= 360 - c && n <= 360 : n >= s + c && n <= l - c;\n          }),\n              s = this._getHoveredPlot(e, t);\n\n          return r && s ? s : !(!r || !l) && {\n            pointIndex: l._index,\n            hovered: !1,\n            pointObj: l\n          };\n        }, t.prototype._addLegend = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.config,\n              n = this.getFromEnv(\"chart-attrib\"),\n              i = this.getFromEnv(\"legend\"),\n              s = r.legendSymbolColor,\n              c = (0, l.pluckNumber)(n.use3dlighting, n.useplotgradientcolor, 1);\n          e = (0, l.getLightColor)(s, 60).replace(u, l.HASHSTRING), t = c ? {\n            FCcolor: {\n              color: s + \",\" + s + \",\" + (0, l.getLightColor)(s, 40) + \",\" + s + \",\" + s,\n              ratio: \"0,70,30\",\n              angle: 270,\n              alpha: \"100,100,100,100,100\"\n            }\n          } : {\n            FCcolor: {\n              color: s,\n              angle: 0,\n              ratio: \"0\",\n              alpha: \"100\"\n            }\n          }, o = {\n            enabled: r.includeInLegend,\n            type: this.type,\n            label: (0, l.getFirstValue)(this.JSONData.seriesname)\n          }, r.includeinlegend ? ((a = i.getItem(this.config.legendItemId)) || (this.config.legendItemId = i.createItem(this), a = i.getItem(this.config.legendItemId), this.addExtEventListener(\"fc-click\", function () {\n            a.itemClickFn();\n          }, a)), a.configure(o), a.setStateCosmetics(\"default\", {\n            symbol: {\n              fill: (0, l.toRaphaelColor)(t),\n              rawFillColor: s,\n              stroke: (0, l.toRaphaelColor)(e)\n            }\n          }), this.getState(\"visible\") ? a.removeLegendState(\"hidden\") : a.setLegendState(\"hidden\")) : this.config.legendItemId && i.disposeItem(this.config.legendItemId);\n        }, t.prototype.getOldPath = function (e, t) {\n          var o,\n              a = t.x,\n              r = t.y,\n              n = this.config && this.config.prevLim,\n              i = n.x,\n              s = n.y,\n              c = 0,\n              u = e.pathArr.length,\n              p = function p(e) {\n            return (e = ((e = (e = (e - i.minPixel.x) / (i.maxPixel.x - i.minPixel.x)) * (i.max - i.min) + i.min) - a.min) / (a.max - a.min)) * (a.maxPixel.x - a.minPixel.x) + a.minPixel.x + 1;\n          },\n              h = function h(e) {\n            return e === s.base ? r.base : function (e) {\n              return (e < s.base && e > r.base || e > s.base && e < r.base) && (e = r.base), e - 1;\n            }(e);\n          };\n\n          if (s.min === r.min && i.min === a.min && s.max === r.max && i.max === a.max) return e;\n          if (e = (0, l.extend2)({}, e), !n) return [];\n\n          for (e.pathArr = e.pathArr.slice(0), e.path2Arr = e.path2Arr.slice(0), c = u; c--;) {\n            (o = e.pathArr[c].slice(0))[1] && o.join && (o[1] = p(o[1]), o[2] = h(o[2]), e.pathArr[c] = o);\n          }\n\n          for (c = e.path2Arr.length; c--;) {\n            (o = e.path2Arr[c].slice(0))[1] && o.join && (o[1] = p(o[1]), o[2] = h(o[2]), e.path2Arr[c] = o);\n          }\n\n          return e;\n        }, t.prototype._setConfigure = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.config,\n              n = this.config.JSONData.data || [],\n              i = this.getFromEnv(\"xAxis\").getTicksLen();\n\n          for (r.imageCount = 0, (o = this.components.data) || (o = this.components.data = []), r.maxRadius = -Infinity, a = 0; a < i; a++) {\n            t = o[a], e = n && n[a] || {}, t || (t = o[a] = {}), t.config || (o[a].config = {}), t.graphics || (t.graphics = {}), this._plotConfigure(a, e);\n          }\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = p;\n    },\n    947: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = o(948);\n      t[\"default\"] = {\n        \"initial.dataset.radar\": function initialDatasetRadar() {\n          return {\n            \"anchor.appearing\": function anchorAppearing() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                startEnd: {\n                  start: .5,\n                  end: 1\n                },\n                slot: \"plot\"\n              }];\n            },\n            \"anchor.updating\": function anchorUpdating() {\n              return [{\n                initialAttr: {\n                  opacity: 0\n                },\n                finalAttr: {\n                  opacity: 1\n                },\n                slot: \"final\"\n              }];\n            },\n            \"anchor.disappearing\": function anchorDisappearing() {\n              return [{\n                finalAttr: {\n                  opacity: 0,\n                  \"fill-opacity\": 0,\n                  \"stroke-opacity\": 0\n                },\n                slot: \"final\"\n              }];\n            },\n            \"line.appearing\": function lineAppearing(e) {\n              var t = e.component,\n                  o = t.getFromEnv(\"xAxis\"),\n                  r = t.getFromEnv(\"yAxis\"),\n                  n = o.getTicksLen(),\n                  i = t.getFromEnv(\"chartConfig\"),\n                  l = e.attr,\n                  s = i.canvasTop + i.canvasHeight / 2,\n                  c = [],\n                  u = void 0;\n\n              for (u = 0; u < n; u++) {\n                c.push(u ? \"L\" : \"M\"), c.push((0, a.getCoordinates)({\n                  radius: s,\n                  theta: 0\n                }, o).x), c.push(r.getPixel(0));\n              }\n\n              return c.push(\"Z\"), [{\n                initialAttr: {\n                  opacity: 0,\n                  path: c\n                },\n                finalAttr: {\n                  opacity: 1,\n                  path: l.path\n                },\n                startEnd: {\n                  start: 0,\n                  end: .5\n                },\n                slot: \"middle\"\n              }];\n            },\n            \"label.appearing\": [{\n              initialAttr: {\n                opacity: 0\n              },\n              finalAttr: {\n                opacity: 1\n              },\n              slot: \"final\"\n            }],\n            \"*\": null\n          };\n        }\n      };\n    },\n    949: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t = e.getChildren(\"canvas\")[0],\n            o = e._feedAxesRawData(),\n            i = t.getChildren(\"axisRefVisualPolar\")[0],\n            l = void 0,\n            s = void 0,\n            c = function c() {\n          return i.asyncDraw();\n        };\n\n        (0, n.componentFactory)(e, a[\"default\"], \"yAxis\", 1, o.yAxisConf), (0, n.componentFactory)(e, r[\"default\"], \"xAxis\", 1, o.xAxisConf), l = e.getChildren(\"yAxis\")[0], s = e.getChildren(\"xAxis\")[0], l.setLinkedItem(\"canvas\", t), i.setLinkedItem(l.getId(), l), i.setLinkedItem(s.getId(), s), i.addExtEventListener(\"visiblerangeset\", c, s), i.addExtEventListener(\"visiblerangeset\", c, l), t.attachAxis(s, !1, {}), t.attachAxis(l, !0, {}), e._setCategories();\n      };\n      var a = i(o(377)),\n          r = i(o(950)),\n          n = o(125);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n    },\n    950: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = h(o(380)),\n          r = o(125),\n          n = o(948),\n          i = h(o(383)),\n          l = h(o(398)),\n          s = h(o(951)),\n          c = o(132),\n          u = h(o(423)),\n          p = o(386);\n\n      function h(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function d(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var f = r.preDefStr.POSITION_MIDDLE,\n          g = r.preDefStr.POSITION_START,\n          m = r.preDefStr.POSITION_TOP,\n          v = r.preDefStr.POSITION_BOTTOM,\n          b = r.preDefStr.POSITION_END,\n          y = Math,\n          x = y.min,\n          k = y.PI,\n          w = 2 * k;\n      (0, c.addDep)({\n        name: \"polarAnimation\",\n        type: \"animationRule\",\n        extension: s[\"default\"]\n      });\n\n      var C = function (e) {\n        function t() {\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t);\n\n          var o = function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.call(this));\n\n          return o.config.scale = new u[\"default\"](), o.config.referenceInfo = [], o;\n        }\n\n        return d(t, e), t.prototype.getName = function () {\n          return \"polarCategory\";\n        }, t.prototype.__setDefaultConfig = function () {\n          e.prototype.__setDefaultConfig.call(this), this.config.drawPlotBands = !1, this.config.forceZeroTick = !1;\n        }, t.prototype.configureAttributes = function (t) {\n          var o = this.config,\n              a = t,\n              n = this.getFromEnv(\"chart\").getFromEnv(\"dataSource\").chart,\n              i = this.getFromEnv(\"color-manager\");\n          e.prototype.configureAttributes.call(this, t), o.gridLineColor = (0, r.convertColor)((0, r.pluck)(a.radarSpikeColor, i.getColor(\"divLineColor\")), (0, r.pluckNumber)(a.radarSpikeAlpha, a.radarInLineAlpha, i.getColor(\"divLineAlpha\"))), o.radarSpikeThickness = (0, r.pluckNumber)(n.radarspikethickness, 1);\n        }, t.prototype.setAxisDimention = function (e) {\n          var t,\n              o = this.getScale(),\n              a = this.config,\n              n = this.getFromEnv(\"chart\").config,\n              i = a.startAngle || -k / 2,\n              l = a.totalAngle || -w,\n              s = i + l,\n              c = l / ((a.tickValues.tickValue || []).length || 1),\n              u = a.axisDimention || (a.axisDimention = {});\n          u.opposite = (0, r.pluckNumber)(e.opposite, u.opposite), u.centerX = (0, r.pluckNumber)(e.x, u.x, n.canvasLeft), u.centerY = (0, r.pluckNumber)(e.y, u.y, n.canvasTop), u.axisLength = w, s -= c, t = a.clockWise ? [s, i] : [i, s], o.setRange(t);\n        }, t.prototype._parseCategoryPlotLine = function () {\n          var e,\n              t,\n              o,\n              a = this.config,\n              r = a.tickValues.tickValue,\n              n = a.gridLineColor,\n              i = a.radarSpikeThickness,\n              l = a.referenceInfo;\n          if (e = {\n            stroke: n,\n            \"stroke-width\": i\n          }, (!r[0] || void 0 === r[0].x && void 0 === r[0].y) && a.lines.isDraw && a.numDivLines) for (t = 0; t < r.length; ++t) {\n            o = t, l.push({\n              from: o,\n              type: \"line\",\n              layer: 1,\n              attr: e\n            });\n          }\n        }, t.prototype.placeAxis = function (e, t) {\n          var o,\n              a,\n              n,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p = this.config,\n              h = this.getFromEnv(\"chart\"),\n              d = h.getFromEnv(\"smartLabel\"),\n              f = p.labels.style,\n              g = h.getFromEnv(\"dataSource\").categories,\n              m = p.labelPadding = (0, r.pluckNumber)(p.rawAttr.axisValuePadding, 10),\n              v = p.useEllipsesWhenOverflow,\n              b = 0,\n              y = 0,\n              k = 0,\n              w = 0,\n              C = t / 2,\n              N = t / 2,\n              S = e / 2,\n              A = e / 2,\n              E = p.tickValues && p.tickValues.tickValue;\n\n          if (p.labels.isDraw = 1, p.labels.drawNormalVal = 1, p.labels.drawLimitVal = 1, this.components || (this.components = {}), this.components.labels = [], p.showLabels) {\n            if (g) {\n              var D = g[0];\n              l = {\n                fontFamily: D.font,\n                fontSize: D.fontsize,\n                color: D.fontcolor\n              };\n            }\n\n            for (o = 0, a = E.length; o < a; o++) {\n              s = {\n                fontFamily: (n = E[o]).font,\n                fontSize: n.fontsize,\n                fontWeight: n.fontbold ? \"bold\" : \"normal\",\n                fontStyle: n.fontitalic ? \"italic\" : \"normal\"\n              }, c = {\n                fontFamily: (0, r.pluck)(s.fontFamily, l.fontFamily, f.fontFamily),\n                fontSize: (0, r.pluck)(s.fontSize, l.fontSize, f.fontSize),\n                fontWeight: (0, r.pluck)(s.fontWeight, f.fontWeight),\n                fontStyle: (0, r.pluck)(s.fontStyle, f.fontStyle)\n              }, u = (0, r.setLineHeight)(c), d.useEllipsesOnOverflow(h.config.useEllipsesWhenOverflow), d.setStyle(c), void 0 === n.oriLabel && (n.oriLabel = n.label), 0 === o ? (i = d.getSmartText(n.oriLabel, e, x(u, C), v), n.label = i.text, n.tooltext = i.tooltext, i.width += m, i.height += m, i.height > b && (w = b = i.height)) : o === a / 2 ? (i = d.getSmartText(n.oriLabel, e, x(u, N), v), n.label = i.text, n.tooltext = i.tooltext, i.width += m, i.height += m, i.height > w && (w = i.height)) : o < a / 2 ? (i = d.getSmartText(n.oriLabel, A, u, v), n.label = i.text, n.tooltext = i.tooltext, i.width += m, i.height += m, i.width > y && (y = i.width)) : (i = d.getSmartText(n.oriLabel, S, u, v), n.label = i.text, n.tooltext = i.tooltext, i.width += m, i.height += m, i.width > k && (k = i.width)), this.components.labels.push({\n                config: {\n                  width: i.width,\n                  height: i.height,\n                  props: {\n                    label: {\n                      attr: {}\n                    }\n                  }\n                }\n              });\n            }\n          } else for (o = 0, a = E.length; o < a; o++) {\n            this.components.labels.push({\n              config: {\n                width: 0,\n                height: 0,\n                props: {\n                  label: {\n                    attr: {}\n                  }\n                }\n              }\n            });\n          }\n\n          return {\n            top: b,\n            left: y,\n            right: k,\n            bottom: w\n          };\n        }, t.prototype._drawComponents = function () {\n          var e = this.config;\n          e.drawLabels && e.hasCategory && this._drawCategory();\n        }, t.prototype.allocatePosition = function () {\n          var e = this.config;\n          e.drawLabels && e.hasCategory && this._parseCategory();\n        }, t.prototype._parseCategory = function () {\n          var e,\n              t,\n              o,\n              a,\n              i,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d,\n              y,\n              x,\n              k,\n              w,\n              C,\n              N,\n              S = this.config,\n              A = this.getFromEnv(\"chart\"),\n              E = S.isOpposit,\n              D = S.labels,\n              _ = D.style,\n              T = this.config.categoryLabel || (this.config.categoryLabel = {}),\n              L = A.getFromEnv(\"dataSource\").categories,\n              P = S.tickValues.tickValue,\n              O = S.labelPadding,\n              V = {},\n              M = {},\n              F = S.axisDimention.centerX,\n              I = S.axisDimention.centerY,\n              B = this.getScale();\n\n          if (x = (0, r.pluckNumber)(S.radius, 0), 0, t = P ? P.length - 1 : 0, S.labels.isDraw) {\n            if (L) {\n              var R = L[0];\n              V.fontFamily = R.font, V.fontSize = R.fontsize, V.color = R.fontcolor;\n            }\n\n            for (e = 0; e <= t; e++) {\n              o = P[e], h = (0, r.pluckNumber)(o.x, o.y, e), (S.labels.drawNormalVal || S.labels.drawLimitVal && (0 === e || h === t)) && (S.labels.drawNormalVal || 0 === h || h === t) && (S.labels.drawLimitVal || 0 !== h && h !== t) && (M = {\n                fontFamily: (0, r.pluck)(o.font, o.labelfont),\n                fontSize: (0, r.pluck)(o.fontsize, o.labelfontsize),\n                fontWeight: (0, r.pluckNumber)(o.fontbold, o.labelfontbold, 0) ? \"bold\" : void 0,\n                fontStyle: (0, r.pluckNumber)(o.fontitalic, o.labelfontitalic, 0) ? \"italic\" : void 0\n              }, u = (0, r.convertColor)((0, r.pluck)(o.fontcolor, o.labelfontcolor, V.color, _.color), (0, r.pluckNumber)(o.labelalpha, S.rawAttr.labelFontAlpha, 100)), (s = {\n                fontFamily: (0, r.pluck)(M.fontFamily, V.fontFamily, _.fontFamily),\n                fontSize: (0, r.pluck)(M.fontSize, V.fontSize, _.fontSize),\n                fontWeight: (0, r.pluck)(M.fontWeight, _.fontWeight),\n                fontStyle: (0, r.pluck)(M.fontStyle, _.fontStyle)\n              }).lineHeight = (0, r.setLineHeight)(s), s.lineHeight && -1 !== (i = s.lineHeight).indexOf(\"px\") && (i = i.replace(/px/i, \"\"), i = parseFloat(i)), w = B.getRangeValue(h), (p = (0, n.polarToCartesian)(x + O, w)).x += F, p.y += I, d = p.x, y = p.y, a = o.label || \"\", 0 !== (0, r.pluckNumber)(o.showlabel, 1) && 0 !== S.showLabels || (a = \"\"), l = o.labelPadding || 0, c = {\n                fill: u,\n                \"line-height\": i,\n                \"font-size\": _.fontSize,\n                text: a,\n                cursor: o.link ? \"pointer\" : \"default\",\n                x: d,\n                y: y\n              }, l && (c.y += l), c[\"vertical-align\"] = E ? v : m, 0 === e ? (c[\"text-anchor\"] = f, c[\"vertical-align\"] = v) : e === (t + 1) / 2 ? (c[\"text-anchor\"] = f, c[\"vertical-align\"] = m) : e < (t + 1) / 2 ? (c[\"text-anchor\"] = b, c[\"vertical-align\"] = f) : (c[\"text-anchor\"] = g, c[\"vertical-align\"] = f), w = B.getRangeValue(h), (k = (0, n.polarToCartesian)(x, w)).x += F, k.y += I, D.shiftX && (c.x += D.shiftX), D.shiftY && (c.y += D.shiftY), (T = S.categoryLabel = T || {})[N = \"Label\" + e] = T[N] || {}, T[N].config = T[N].config || {}, T[N].config.labelBox = C = {\n                label: a,\n                lineHeight: s.lineHeight,\n                border: (0, r.pluckNumber)(o.borderthickness, o.labelborderthickness) ? (0, r.pluckNumber)(o.borderthickness, o.labelborderthickness, 1) + \"px solid\" : \"\",\n                borderColor: o.bordercolor || o.labelbordercolor ? (0, r.convertColor)(o.bordercolor || o.labelbordercolor, (0, r.pluckNumber)(o.borderalpha, o.labelborderalpha, o.alpha, o.labelalpha, 100)) : r.BLANKSTRING,\n                borderThickness: (0, r.pluckNumber)(o.borderthickness, o.labelborderthickness),\n                borderPadding: (0, r.pluckNumber)(o.borderpadding, o.labelborderpadding),\n                borderRadius: (0, r.pluckNumber)(o.borderradius, o.labelborderradius),\n                backgroundColor: o.bgcolor || o.labelbgcolor ? (0, r.convertColor)(o.bgcolor || o.labelbgcolor, (0, r.pluckNumber)(o.bgalpha, o.labelbgalpha, o.alpha, o.labelalpha, 100)) : r.BLANKSTRING,\n                borderDash: (0, r.pluckNumber)(o.borderdashed, o.labelborderdashed, 0) ? (0, r.getDashStyle)((0, r.pluckNumber)(o.borderdashlen, o.labelborderdashlen, 4), (0, r.pluckNumber)(o.borderdashgap, o.labelborderdashgap, 2)) : 0 === (0, r.pluckNumber)(o.borderdashed, o.labelborderdashed) ? \"none\" : _.borderDash\n              }, T[N].config.labelBox[\"text-bound\"] = a ? [(0, r.pluck)(C.backgroundColor, _.backgroundColor), (0, r.pluck)(C.borderColor, _.borderColor), (0, r.pluck)(C.borderThickness, _.borderThickness), (0, r.pluck)(C.borderPadding, _.borderPadding), (0, r.pluck)(C.borderRadius, _.borderRadius), (0, r.pluck)(C.borderDash, _.borderDash)] : [], c[\"text-bound\"] = T[N].config.labelBox[\"text-bound\"], this.components.labels[e].config.props.label.css = s, this.components.labels[e].config.props.label.attr = Object.assign(this.components.labels[e].config.props.label.attr, c));\n            }\n          }\n        }, t.prototype._drawCategory = function () {\n          var e,\n              t,\n              o,\n              a,\n              n,\n              l,\n              s,\n              c,\n              u,\n              p,\n              h,\n              d = this,\n              f = d.config,\n              g = d.getFromEnv(\"chart\"),\n              m = g.getFromEnv(\"animationManager\"),\n              v = f.labels.style,\n              b = f.axisContainer,\n              y = f.tickValues.tickValue,\n              x = function x(e) {\n            return function (t) {\n              g.plotEventHandler(this, t, e);\n            };\n          },\n              k = d.getFromEnv(\"toolTipController\"),\n              w = 0,\n              C = [];\n\n          if (0, t = y ? y.length - 1 : 0, f.labels.isDraw) {\n            for (e = 0, w = 0; e <= t; e++) {\n              o = y[e], c = (0, r.pluckNumber)(o.x, o.y, e), (f.labels.drawNormalVal || f.labels.drawLimitVal && (0 === e || c === t)) && (f.labels.drawNormalVal || 0 === c || c === t) && (f.labels.drawLimitVal || 0 !== c && c !== t) && (p = \"Label\" + e, C.push(p), s = d.components.labels[e].config.props.label.attr, l = d.components.labels[e].config.props.label.css, n = d.getGraphicalElement(p), a = m.setAnimation({\n                css: l,\n                el: n || \"text\",\n                attr: s,\n                container: b,\n                component: d,\n                label: \"polarLabel\"\n              }), f.showTooltip && o.tooltext ? k.enableToolTip(a, o.tooltext) : k.disableToolTip(a), a.data(\"eventArgs\", {\n                link: o.link || o.labellink || v.labelLink,\n                text: s.text,\n                index: w\n              }), n || (d.addGraphicalElement(p, a), a.on(\"fc-click\", x(\"datalabelclick\")).hover(x(\"dataLabelRollOver\"), x(\"dataLabelRollOut\"))), w += 1);\n            }\n\n            f.labelMap = f.labelMap || [], h = (0, i[\"default\"])(f.labelMap, C);\n          } else h = C;\n\n          f.labelMap = C, function (t) {\n            for (e = 0; e < t.length; ++e) {\n              (u = d.getGraphicalElement(t[e])) && d.removeGraphicalElement(u);\n            }\n          }(h);\n        }, t.prototype.getTranslation = function () {\n          if (this) return 0;\n        }, t.prototype.getReferenceInfo = function () {\n          return this.config.referenceInfo;\n        }, t.prototype.setVisibleConfig = function (e, t) {\n          var o,\n              a = this.config,\n              r = this.getScale();\n          return !(e >= t || e < a.axisRange.min || t > a.axisRange.max) && (o = r.setDomain([e, t]).getDomain(), a.visibleMin = o[0], a.visibleMax = o[1], this.clearReferenceInfo(), this._parseReferenceVisuals(), this.fireEvent(\"visiblerangeset\", {\n            minValue: e,\n            maxValue: t\n          }), this.asyncDraw(), !0);\n        }, t.prototype._parseReferenceVisuals = function () {\n          this.config.drawPlotlines && this._parseCategoryPlotLine();\n        }, t.prototype.clearReferenceInfo = function () {\n          this.config.referenceInfo = [];\n        }, t.prototype._setAxisRange = function (e) {\n          var t,\n              o = e.min,\n              a = e.max,\n              r = this.config,\n              n = r.axisRange,\n              i = e.divGap;\n          o > a || (t = (a - o) / (r.categoryNumDivLines + 1), this.getScale().setDomain([o, a]), r.ticks = (0, l[\"default\"])(o, a, t).concat(a), r._allTicks = r.ticks.slice(), n.min = o, n.max = a, n.tickInterval = i || t, this.setVisibleConfig(n.min, n.max));\n        }, t;\n      }(a[\"default\"]);\n\n      C.prototype.setTickValues = p.setTickValues, C.prototype.shiftLabels = p.shiftLabels, C.prototype._createContainer = p._createContainer, C.prototype.setAxisPadding = p.setAxisPadding, C.prototype.getPixel = p.getPixel, C.prototype.getLabel = p.getLabel, t[\"default\"] = C;\n    },\n    951: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(952),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.axis.polar\": function initialAxisPolar() {\n          return {\n            \"path.appearing\": n[\"default\"],\n            \"text.appearing\": n[\"default\"]\n          };\n        }\n      };\n    },\n    953: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0, t[\"default\"] = function (e) {\n        var t = void 0;\n        (0, n.componentFactory)(e, a[\"default\"], \"canvas\", e.config.showVolumeChart ? 2 : 1);\n\n        for (var o = 0, i = (t = e.getChildren(\"canvas\")).length; o < i; o++) {\n          t[o].configure(), (0, n.componentFactory)(t[o], r[\"default\"], \"axisRefVisualPolar\");\n        }\n      };\n      var a = i(o(954)),\n          r = i(o(955)),\n          n = o(125);\n\n      function i(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n    },\n    954: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(364),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      },\n          i = o(948),\n          l = o(125);\n\n      function s(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      var c = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return s(t, e), t.prototype.getName = function () {\n          return \"polarCanvas\";\n        }, t.prototype.getType = function () {\n          return \"canvas\";\n        }, t.prototype.configureAttributes = function () {\n          e.prototype.configureAttributes.call(this);\n          var t = this.config,\n              o = this.getFromEnv(\"chart\"),\n              a = o.getFromEnv(\"dataSource\").chart,\n              r = o.getFromEnv(\"color-manager\");\n          t.radarBorderColor = (0, l.convertColor)((0, l.pluck)(a.radarbordercolor, r.getColor(\"divLineColor\")), (0, l.pluckNumber)(a.radarborderalpha, 100)), t.radarFillColor = (0, l.convertColor)((0, l.pluck)(a.radarfillcolor, r.getColor(\"altHGridColor\")), (0, l.pluckNumber)(a.radarfillalpha, r.getColor(\"altHGridAlpha\"))), t.radarBorderThickness = (0, l.pluckNumber)(a.radarborderthickness, 2), t.showRadarBorder = (0, l.pluckNumber)(a.showradarborder, 1);\n        }, t.prototype.draw = function () {\n          this.createGroup(), this.drawCanvas();\n        }, t.prototype.drawCanvas = function () {\n          var e,\n              t,\n              o,\n              a,\n              r = this.config,\n              n = this.getFromEnv(\"chart\"),\n              s = n.config,\n              c = n.getChildren(\"xAxis\")[0],\n              u = n.getFromEnv(\"animationManager\"),\n              p = this.getContainer(\"radarBorderContainer\"),\n              h = this.getContainer(\"canvasGroup\"),\n              d = c.config,\n              f = {\n            stroke: r.radarBorderColor,\n            fill: r.radarFillColor,\n            \"stroke-width\": r.radarBorderThickness,\n            path: []\n          },\n              g = void 0,\n              m = d.tickValues.tickValue,\n              v = void 0,\n              b = c.getScale(),\n              y = void 0,\n              x = this.getGraphicalElement(\"radarBorder\"),\n              k = d.axisDimention.centerX,\n              w = d.axisDimention.centerY;\n\n          if (o = (0, l.pluckNumber)(d.radius, 0), 0, t = m ? m.length - 1 : 0, r.canvasLeft = r.canvasLeft || s.canvasLeft, r.canvasTop = r.canvasTop || s.canvasTop, r.canvasWidth = r.canvasWidth || s.canvasWidth, r.canvasHeight = r.canvasHeight || s.canvasHeight, 0 !== r.showRadarBorder) {\n            for (f.path.push(\"M\"), g = 0; g <= t; g++) {\n              v = b.getRangeValue(g), (y = (0, i.polarToCartesian)(o, v)).x += k, y.y += w, f.path.push(y.x, y.y, \"L\");\n            }\n\n            f.path.pop(), f.path.push(\"Z\");\n          }\n\n          e = u.setAnimation({\n            el: p || \"group\",\n            attr: {\n              name: \"radarBorderContainer\"\n            },\n            container: h,\n            component: this,\n            label: \"group\"\n          }), p || this.addContainer(\"radarBorderContainer\", e), a = u.setAnimation({\n            el: x || \"path\",\n            attr: f,\n            container: e,\n            component: c,\n            label: \"path\"\n          }), x || this.addGraphicalElement(\"radarBorder\", a);\n        }, t;\n      }(n[\"default\"]);\n\n      t[\"default\"] = c;\n    },\n    955: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a = s(o(425)),\n          r = o(948),\n          n = o(125),\n          i = o(132),\n          l = s(o(956));\n\n      function s(e) {\n        return e && e.__esModule ? e : {\n          \"default\": e\n        };\n      }\n\n      function c(e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function (e, t) {\n          for (var o = Object.getOwnPropertyNames(t), a = 0; a < o.length; a++) {\n            var r = o[a],\n                n = Object.getOwnPropertyDescriptor(t, r);\n            n && n.configurable && e[r] === undefined && Object.defineProperty(e, r, n);\n          }\n        }(e, t));\n      }\n\n      (0, i.addDep)({\n        name: \"axisRefPolarAnimation\",\n        type: \"animationRule\",\n        extension: l[\"default\"]\n      });\n\n      var u = function (e) {\n        function t() {\n          return function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, t), function (e, t) {\n            if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n          }(this, e.apply(this, arguments));\n        }\n\n        return c(t, e), t.prototype.getType = function () {\n          return \"axisRefVisuals\";\n        }, t.prototype.getName = function () {\n          return \"axisRefVisualsPolar\";\n        }, t.prototype.createLine = function (e, t) {\n          return \"polarCategory\" === t.getName() ? this.createNormalLine(e, t) : \"numeric\" === t.getName() ? this.createRadialLine(e, t) : void 0;\n        }, t.prototype.createRadialLine = function (e, t) {\n          var o,\n              a,\n              n = this.getFromEnv(\"xAxis\")[0],\n              i = n.config.tickValues.tickValue,\n              l = t,\n              s = this.config.containers[e.layer],\n              c = this.getFromEnv(\"animationManager\"),\n              u = this.getFromEnv(\"toolTipController\"),\n              p = void 0,\n              h = void 0,\n              d = e.attr,\n              f = [\"M\"],\n              g = void 0,\n              m = l.getId() + \"_\" + (e.id || e.from),\n              v = e.handlers,\n              b = this.getGraphicalElement(m);\n\n          for (a = function (e, t) {\n            var o = e.getScale(),\n                a = e.config.axisRange;\n            return Math.abs(o.getRangeValue(t) - o.getRangeValue(a.min));\n          }(l, e.from), 0, o = i ? i.length - 1 : 0, p = 0; p <= o; p++) {\n            g = (0, r.getCoordinates)({\n              radius: a,\n              theta: p\n            }, n), f.push(g.x, g.y, \"L\");\n          }\n\n          for (h in f.pop(), f.push(\"Z\"), d.path = f, b = this.addGraphicalElement(m, c.setAnimation({\n            container: s,\n            el: b || \"path\",\n            attr: d,\n            component: this,\n            label: \"path\"\n          })), e.toolText ? u.enableToolTip(b, e.toolText) : u.disableToolTip(b), v) {\n            v.hasOwnProperty(h) && b.on(h, v[h].bind(t));\n          }\n\n          return [m];\n        }, t.prototype.createNormalLine = function (e, t) {\n          var o,\n              a = this.config,\n              i = t.config,\n              l = (0, n.pluckNumber)(i.radius, 0),\n              s = [\"M\"],\n              c = a.containers[e.layer],\n              u = this.getFromEnv(\"animationManager\"),\n              p = this.getFromEnv(\"toolTipController\"),\n              h = void 0,\n              d = i.axisDimention.centerX,\n              f = i.axisDimention.centerY,\n              g = t.getId() + \"_\" + (e.id || e.from),\n              m = e.handlers,\n              v = this.getGraphicalElement(g);\n\n          for (h in s.push(d, f, \"L\"), o = (0, r.getCoordinates)({\n            radius: l,\n            theta: e.from\n          }, t), s.push(o.x, o.y), e.attr.path = s, v = this.addGraphicalElement(g, u.setAnimation({\n            container: c,\n            el: v || \"path\",\n            attr: e.attr,\n            component: this,\n            label: \"path\"\n          })), e.toolText ? p.enableToolTip(v, e.toolText) : p.disableToolTip(v), m) {\n            m.hasOwnProperty(h) && v.on(h, m[h].bind(t));\n          }\n\n          return [g];\n        }, t.prototype.createBand = function () {\n          return [];\n        }, t;\n      }(a[\"default\"]);\n\n      t[\"default\"] = u;\n    },\n    956: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(952),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = {\n        \"initial.axis.axisRefVisualsPolar\": function initialAxisAxisRefVisualsPolar() {\n          return {\n            \"path.appearing\": n[\"default\"],\n            \"text.appearing\": n[\"default\"]\n          };\n        }\n      };\n    },\n    957: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(869),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    },\n    959: function _(e, t, o) {\n      \"use strict\";\n\n      t.__esModule = !0;\n      var a,\n          r = o(271),\n          n = (a = r) && a.__esModule ? a : {\n        \"default\": a\n      };\n      t[\"default\"] = n[\"default\"];\n    }\n  }]);\n});","map":null,"metadata":{},"sourceType":"script"}