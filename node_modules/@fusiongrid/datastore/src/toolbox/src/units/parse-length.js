export function parseLengthUnit(val, lengthUnitsObject, lengthType) {
  let parsedNum,
    tmpVal = val,
    regToCheckValidInput = /^([+]?(\d+|\.\d+|\d+\.\d+|\d+\.)(px|em|rem|%|pt))$/i,
    regToReplaceUnits = /px|em|rem|%|pt/gi;
    // regTocheckValidNum:RegExp = /^([+]?(\d+|\.\d+|\d+\.\d+|\d+\.))$/;
  if (typeof tmpVal === 'number' && tmpVal > 0) {
    parsedNum = tmpVal;
  } else if (typeof tmpVal === 'string') {
    tmpVal = tmpVal.trim();
    if (regToCheckValidInput.test(tmpVal)) {
      parsedNum = Number(tmpVal.replace(regToReplaceUnits, ''));
      let matchedUnit = regToReplaceUnits.exec(tmpVal);
      if (matchedUnit){
        if (matchedUnit[0] === '%') {
          (lengthType === 'height') && (parsedNum *= lengthUnitsObject.hPercentage);
          (lengthType === 'width') && (parsedNum *= lengthUnitsObject.wPercentage);
        } else {
          parsedNum *= lengthUnitsObject[matchedUnit[0]];
        }
      }
    } else if (Number(tmpVal) > 0) {
      parsedNum = Number(tmpVal);
    }
  }
  return parsedNum;
}