import DataStore from '../../src/datastore';
import { groupBy, pivot } from '../../src/operators';
import { setConfig } from '../../src/globals/global-config';
import { DatetimeUnits } from '../../src/toolbox/src/index';

let DS, DT, DT1, ops, result,
  dataArr = [
    ['01-Jan-2015 9:50', '55', '100'],
    ['01-Jan-2015 14:50', '55', '100'],
    ['02-Jan-2015 11:09', '56', '106'],
    ['02-Jan-2015 14:47', '56', '106'],
    ['03-Jan-2015 00:31', '59', '108'],
    ['04-Jan-2015 2:44', '50', '102'],
    ['04-Jan-2015 10:31', '50', '102'],
    ['04-Jan-2015 15:05', '50', '102'],
    ['05-Jan-2015 13:00', '56', '108']
  ],
  schemaArr = [
    { name: 'Time', type: 'datetime', format: '%e-%b-%Y %-H:%M' },
    { name: 'Downloads', type: 'number' },
    { name: 'Web Visits', type: 'number' }
  ];

describe('enableUTC testing', () => {
  describe('getData in master data table', () => {
    it('test default enableUTC to be false', () => {
      DS = new DataStore(dataArr, schemaArr, { enableIndex: true, indexBy: 'Time' });
      DT = DS.getDataTable();
      result = DT.getData();

      expect(result.data[0][0]).toBe(1420086000000);
    });

    it('set enableUTC to be true to work', () => {
      setConfig('enableUTC', true);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: true, indexBy: 'Time' });
      DT = DS.getDataTable();
      result = DT.getData();

      expect(result.data[0][0]).toBe(1420105800000);
    });
  });

  describe('groupby operation with interval data', () => {
    it('single sorted - set enableUTC to be false to work', () => {
      setConfig('enableUTC', false);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: true, indexBy: 'Time' });
      DT = DS.getDataTable();
      ops = groupBy(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420050600000);
    });

    it('single sorted - set enableUTC to be true to work', () => {
      setConfig('enableUTC', true);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: true, indexBy: 'Time' });
      DT = DS.getDataTable();
      ops = groupBy(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420070400000);
    });

    it('unsorted/multiple - set enableUTC to be false to work', () => {
      setConfig('enableUTC', false);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: false });
      DT = DS.getDataTable();
      ops = groupBy(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420050600000);
    });

    it('unsorted/multiple - set enableUTC to be true to work', () => {
      setConfig('enableUTC', true);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: false });
      DT = DS.getDataTable();
      ops = groupBy(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420070400000);
    });
  });

  describe('pivot operation with interval data', () => {
    it('set enableUTC to be false to work', () => {
      setConfig('enableUTC', false);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: true, indexBy: 'Time' });
      DT = DS.getDataTable();
      ops = pivot(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        'Web Visits',
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420050600000);
    });

    it('set enableUTC to be true to work', () => {
      setConfig('enableUTC', true);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: true, indexBy: 'Time' });
      DT = DS.getDataTable();
      ops = pivot(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        'Web Visits',
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420070400000);
    });

    it('unsorted/multiple - set enableUTC to be false to work', () => {
      setConfig('enableUTC', false);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: false });
      DT = DS.getDataTable();
      ops = pivot(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        'Web Visits',
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420050600000);
    });

    it('unsorted/multiple - set enableUTC to be true to work', () => {
      setConfig('enableUTC', true);

      DS = new DataStore(dataArr, schemaArr, { enableIndex: false });
      DT = DS.getDataTable();
      ops = pivot(
        [{
          column: 'Time',
          timeUnit: DatetimeUnits.Day
        }],
        'Web Visits',
        [{
          column: 'Downloads',
          operation: 'sum'
        }]
      );
      DT1 = DT.query(ops);
      result = DT1.getData();

      expect(result.data[0][0].start).toBe(1420070400000);
    });
  });
});
