declare module '@fusioncharts/datastore' {

  export interface Schema {
    sortable: any;
    name: string,
    type?: string,
    format?: string,
    enableUTC?: boolean
  }

  export interface DataStoreConfig {
    enableIndex?: boolean,
    indexBy?: string,
    enableUTC?: boolean
  }

  export default class DataStore {
    constructor(data?: Array<any>, schema?: Array<Schema>, config?: any);
    createDataTable(data: Array<any>, schema: Array<Schema>, config?: any, id?: string): DataTable;
    appendRows(data: Array<any>, id?: string): void;
    parseRows(rows: Array<any>, id?: string): Array<any>;
    sortRows(rows: Array<any>, id?: string): Array<any>;
    getDataTable(id?: string): DataTable;
    on(eventName: string, handler: Function | Array<Function>): void;
    off(eventName: string, handler: Function | Array<Function>): void;
    trigger(eventName: string, data?: any): void;
    dispose(): void;
    getUniqueValues(data: any, index: any): Array<any>;
  }

  export interface DataSchema {
    data: Array<Array<any>>,
    schema: Array<Schema>
  }

  export interface ColumnExtents {
    min: number,
    max: number
  }

  export class DataTable {
    _data: Array<any>;
    flushResults(): void;
    getDataStore(): DataStore;
    getData(offset?: number, numberOfItems?: number): DataSchema;
    getID(): string;
    getSchema(): Array<Schema>;
    indexOf(columnName: string): number;
    extents(columnName: string): ColumnExtents;
    count(): number;
    getDataStore(): any;
    getID(): any;
  }
}