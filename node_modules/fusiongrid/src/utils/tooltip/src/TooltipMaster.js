import TooltipComponent from './TooltipComponent';
export default class TooltipMaster {
    constructor(){
        this._tooltipStore = {
            classic: undefined,
            sticky: undefined
        };
    }
    getAvailableTooltip(type){
        return this._tooltipStore[type];
    }
    addNewTooltip(type, tooltip){
        this._tooltipStore[type] = tooltip;
    }
    createTooltip(config){
        let master = this,
        type = config.type,
        tooltip;
        if (type === 'sticky'){
            if (tooltip = master.getAvailableTooltip('sticky')){
                return tooltip.update(config);
            } else {
                tooltip = new TooltipComponent(config);
                master.addNewTooltip('sticky', tooltip);
                return tooltip;
            }
        } else {
            if (tooltip = master.getAvailableTooltip('classic')){
                return tooltip.update(config);
            } else {
                tooltip = new TooltipComponent(config);
                master.addNewTooltip('classic', tooltip);
                return tooltip;
            }
        }
    }
    hideAll(){
        for (let type in this._tooltipStore){
            this._tooltipStore[type].hide();
        }
    }
    // @todo write tooltip removing logic
}