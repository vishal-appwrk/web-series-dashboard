export default class Logger {
  /**
   * Name of the error event to be raised
   */
  ErrorEventName: string = 'error';

  /**
   * Name of the warning event to be raised
   */
  WarningEventName: string = 'warning';

  /**
   * Name of the info event to be raised
   */
  InfoEventName: string = 'info';

  private _resolver: Function;  
  private _sender: object;
  
  constructor(resolver: Function, sender?: object) {
    this._resolver = resolver;
    this._sender = sender || this;
  }

  error(msg: string, payload?: any): void {    
    this._resolver.call(this._sender, this.ErrorEventName, { msg, info: payload });
  }

  warn(msg: string, payload?: any): void {    
    this._resolver.call(this._sender, this.WarningEventName, { msg, info: payload });
  }

  info(msg: string, payload?: any): void {    
    this._resolver.call(this._sender, this.InfoEventName, { msg, info: payload });
  }
}