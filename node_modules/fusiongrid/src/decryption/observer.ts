import Trier from './trier';
import { utilityArrSet } from './utility-version-mapper';

const childObjSymbol = Symbol('childObj');

/**
 * Wrapper and Shadower of main Trier class which is making the license Validation.
 */
class ByStander {
  [childObjSymbol]: any;

  constructor () {
    this[childObjSymbol] = Object.freeze(new Trier());
  }

  /**
   * Used to connect to the main Trier class which is performing the license validations.
   * @param {Object} The chart instance.
   */
  _mapperSeed (fgInstance: any, bytes: any, releaseDate: Date) {
    this[childObjSymbol].trierFirst(
      fgInstance,
      bytes,
      utilityArrSet,
      releaseDate
    );
  }
}

export default Object.freeze(
  new (function () {
    return ByStander;
  }())()
);
